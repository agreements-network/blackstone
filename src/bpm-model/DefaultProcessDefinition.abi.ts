//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultProcessDefinition {
    export function Deploy<Tx>(client: Provider<Tx>, bpm_model_BpmModelLib_sol_BpmModelLib: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string, commons_utils_TypeUtilsLib_sol_TypeUtilsLib: string): Promise<string> {
        let bytecode = "6080604052600160008060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260016000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff16021790555081600180600381106200009957fe5b602091828204019190066101000a81548160ff021916908360ff160217905550806001600260038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e28290000000000000000000000008152506014019050604051602081830303815290604052805190602001206200014960201b60201c565b50505062000236565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806200ef7c602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61ed3680620002466000396000f3fe608060405234801561001057600080fd5b50600436106103b95760003560e01c80636910e334116101f4578063af201b901161011a578063dd2f3e84116100ad578063f001897d1161007c578063f001897d14611bb3578063f085f6dd14611c15578063f2fde38b14611c39578063fd946fcd14611c7d576103b9565b8063dd2f3e84146119e4578063e10533c614611a7d578063e3621d2014611ad9578063e3c83a1614611b6d576103b9565b8063bb5d40eb116100e9578063bb5d40eb146117cf578063bde6ef58146117f1578063c5930e291461188f578063d1cc1bde14611908576103b9565b8063af201b90146116c7578063b24b4bcc146116e5578063b281674914611703578063ba840f64146117b1576103b9565b806378bc0b0d116101925780638efb695c116101615780638efb695c1461151d5780639c4aa334146115eb578063a0bfa1e01461163b578063ae73d8b314611685576103b9565b806378bc0b0d1461129c57806379238a1014611315578063893d20e8146113fc57806389a392e614611446576103b9565b8063756b2e6c116101ce578063756b2e6c146111435780637589adb714611189578063758cbd2e146111ad57806377198ed414611236576103b9565b80636910e3341461108b5780636983067e146110d95780636c28e102146110f7576103b9565b80633796d3a4116102e45780635478a0c9116102775780635b4025e1116102465780635b4025e114610f5b5780635c03013814610fec5780635d1ca631146110445780636901f66814611062576103b9565b80635478a0c914610d6157806357cfef6c14610dd157806357e0ebca14610e3d578063581654ce14610e61576103b9565b80633d9a2352116102b35780633d9a235214610b7357806348191a4014610bf65780634b53be1d14610c695780635316c20614610cde576103b9565b80633796d3a4146109cc5780633a70dcef14610a185780633bf2c2a014610aac5780633d34113e14610aee576103b9565b806320de4e0a1161035c578063264176511161032b57806326417651146108ae5780632b8c74ce1461093157806332d3778114610973578063361a5672146109ae576103b9565b806320de4e0a1461064757806321a0c66f1461073657806321bcdcc21461076e57806323ff5dd31461082b576103b9565b806308a104aa1161039857806308a104aa146104d75780630f9c79e21461055a57806314e426051461057857806315064393146105fb576103b9565b80626129d9146103be57806301cdfc90146103dc57806301ffc9a714610472575b600080fd5b6103c6611c9b565b6040518082815260200191505060405180910390f35b610470600480360360e08110156103f257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cab565b005b6104bd6004803603602081101561048857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611ffc565b604051808215151515815260200191505060405180910390f35b610503600480360360208110156104ed57600080fd5b8101908080359060200190929190505050612063565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561054657808201518184015260208101905061052b565b505050509050019250505060405180910390f35b6105626120d7565b6040518082815260200191505060405180910390f35b6105a46004803603602081101561058e57600080fd5b81019080803590602001909291905050506120e1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105e75780820151818401526020810190506105cc565b505050509050019250505060405180910390f35b6106316004803603604081101561061157600080fd5b810190808035906020019092919080359060200190929190505050612254565b6040518082815260200191505060405180910390f35b6106736004803603602081101561065d57600080fd5b8101908080359060200190929190505050612290565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106f75780820151818401526020810190506106dc565b50505050905090810190601f1680156107245780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61076c6004803603604081101561074c57600080fd5b8101908080359060200190929190803590602001909291905050506125f5565b005b61079a6004803603602081101561078457600080fd5b8101908080359060200190929190505050612e7c565b604051808781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b6108ac600480360360e081101561084157600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291908035906020019092919050505061315b565b005b61092f600480360360e08110156108c457600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190505050613c3a565b005b61095d6004803603602081101561094757600080fd5b8101908080359060200190929190505050614719565b6040518082815260200191505060405180910390f35b6109ac6004803603604081101561098957600080fd5b8101908080359060200190929190803560ff169060200190929190505050614742565b005b6109b66149cb565b6040518082815260200191505060405180910390f35b610a02600480360360408110156109e257600080fd5b810190808035906020019092919080359060200190929190505050614a75565b6040518082815260200191505060405180910390f35b610a4e60048036036040811015610a2e57600080fd5b810190808035906020019092919080359060200190929190505050614aaf565b604051808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b610ad860048036036020811015610ac257600080fd5b8101908080359060200190929190505050614bad565b6040518082815260200191505060405180910390f35b610b71600480360360e0811015610b0457600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803515159060200190929190505050614bd1565b005b610b9f60048036036020811015610b8957600080fd5b81019080803590602001909291905050506156c3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610be2578082015181840152602081019050610bc7565b505050509050019250505060405180910390f35b610c2260048036036020811015610c0c57600080fd5b8101908080359060200190929190505050615737565b60405180856001811115610c3257fe5b60ff168152602001846001811115610c4657fe5b60ff16815260200183815260200182815260200194505050505060405180910390f35b610c9560048036036020811015610c7f57600080fd5b81019080803590602001909291905050506157da565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b610d5f600480360360e0811015610cf457600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190505050615848565b005b610db760048036036060811015610d7757600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050616327565b604051808215151515815260200191505060405180910390f35b610dfd60048036036020811015610de757600080fd5b810190808035906020019092919050505061646e565b60405180846001811115610e0d57fe5b60ff168152602001836001811115610e2157fe5b60ff168152602001828152602001935050505060405180910390f35b610e456164f1565b604051808260ff1660ff16815260200191505060405180910390f35b610f456004803603610120811015610e7857600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610f0157600080fd5b820183602082011115610f1357600080fd5b80359060200191846001830284011164010000000083111715610f3557600080fd5b909192939192939050505061651c565b6040518082815260200191505060405180910390f35b610f8760048036036020811015610f7157600080fd5b8101908080359060200190929190505050616b2a565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610fd6578082015181840152602081019050610fbb565b5050505090500194505050505060405180910390f35b61102e6004803603602081101561100257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050616be1565b6040518082815260200191505060405180910390f35b61104c616cdd565b6040518082815260200191505060405180910390f35b61106a616ce7565b60405180831515151581526020018281526020019250505060405180910390f35b6110d7600480360360408110156110a157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050617961565b005b6110e1617f76565b6040518082815260200191505060405180910390f35b61112d6004803603604081101561110d57600080fd5b810190808035906020019092919080359060200190929190505050617f9a565b6040518082815260200191505060405180910390f35b61114b619383565b6040518082600360200280838360005b8381101561117657808201518184015260208101905061115b565b5050505090500191505060405180910390f35b6111916193f4565b604051808260ff1660ff16815260200191505060405180910390f35b6111d9600480360360208110156111c357600080fd5b810190808035906020019092919050505061941e565b604051808960ff1660ff1681526020018860ff1660ff1681526020018760ff1660ff168152602001868152602001851515151581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b6112826004803603604081101561124c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506195af565b604051808215151515815260200191505060405180910390f35b6112ff600480360360608110156112b257600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505061963d565b6040518082815260200191505060405180910390f35b6113416004803603602081101561132b57600080fd5b81019080803590602001909291905050506196b3565b60405180806020018060200185600281111561135957fe5b60ff168152602001848152602001838103835287818151815260200191508051906020019060200280838360005b838110156113a2578082015181840152602081019050611387565b50505050905001838103825286818151815260200191508051906020019060200280838360005b838110156113e45780820151818401526020810190506113c9565b50505050905001965050505050505060405180910390f35b6114046197e5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61151b600480360360c081101561145c57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156114d757600080fd5b8201836020820111156114e957600080fd5b8035906020019184600183028401116401000000008311171561150b57600080fd5b909192939192939050505061980f565b005b6115e9600480360360e081101561153357600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803590602001906401000000008111156115a557600080fd5b8201836020820111156115b757600080fd5b803590602001918460018302840111640100000000831117156115d957600080fd5b9091929391929390505050619f13565b005b6116176004803603602081101561160157600080fd5b810190808035906020019092919050505061a9fe565b6040518082600381111561162757fe5b60ff16815260200191505060405180910390f35b61164361ab89565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6116b16004803603602081101561169b57600080fd5b810190808035906020019092919050505061abb3565b6040518082815260200191505060405180910390f35b6116cf61abdc565b6040518082815260200191505060405180910390f35b6116ed61ac00565b6040518082815260200191505060405180910390f35b6117af600480360361012081101561171a57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061ac10565b005b6117b961b767565b6040518082815260200191505060405180910390f35b6117d761b78b565b604051808215151515815260200191505060405180910390f35b611879600480360361012081101561180857600080fd5b8101908080359060200190929190803560ff169060200190929190803560ff169060200190929190803560ff1690602001909291908035906020019092919080351515906020019092919080359060200190929190803590602001909291908035906020019092919050505061b7a2565b6040518082815260200191505060405180910390f35b611906600480360360c08110156118a557600080fd5b8101908080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061bd09565b005b6119e2600480360361010081101561191f57600080fd5b8101908080359060200190929190803560ff169060200190929190803560ff1690602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561199e57600080fd5b8201836020820111156119b057600080fd5b803590602001918460018302840111640100000000831117156119d257600080fd5b909192939192939050505061c2d3565b005b611a7b600480360360e08110156119fa57600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061c8a0565b005b611a8561d3b9565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b611b0f60048036036040811015611aef57600080fd5b81019080803590602001909291908035906020019092919050505061d403565b604051808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b611b9960048036036020811015611b8357600080fd5b810190808035906020019092919050505061d501565b604051808215151515815260200191505060405180910390f35b611bff60048036036040811015611bc957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061d531565b6040518082815260200191505060405180910390f35b611c1d61d8ba565b604051808260ff1660ff16815260200191505060405180910390f35b611c7b60048036036020811015611c4f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061d8e5565b005b611c8561dd5a565b6040518082815260200191505060405180910390f35b6000600360010180549050905090565b600e60009054906101000a900460ff1615611cdc576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008a815260200190815260200160002060350160009054906101000a900460ff1615611d2661dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611d87578082015181840152602081019050611d6c565b50505050905090810190601f168015611db45780820380516001836020036101000a031916815260200191505b508481038352603781526020018061e6a260379139604001848103825260208152602001807f477261706820656c656d656e742077697468205f6964206e6f7420666f756e648152506020019550505050505060006040518083038186803b158015611e1f57600080fd5b505af4158015611e33573d6000803e3d6000fd5b505050508560036000016000898152602001908152602001600020601501600b01600001819055508460036000016000898152602001908152602001600020601501600b01600101819055508360036000016000898152602001908152602001600020601501600b0160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160036000016000898152602001908152602001600020601501600b0160020160146101000a81548160ff0219169083151502179055508260036000016000898152602001908152602001600020601501600e01600001819055508160036000016000898152602001908152602001600020601501600e01600101819055508060036000016000898152602001908152602001600020601501600e0160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160036000016000898152602001908152602001600020601501600e0160020160146101000a81548160ff02191690831515021790555050505050505050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060036000016000838152602001908152602001600020600201600a018054806020026020016040519081016040528092919081815260200182805480156120cb57602002820191906000526020600020905b8154815260200190600101908083116120b7575b50505050509050919050565b6000600d54905090565b60606000821461224e5760008060009050606060036001018054905060405190808252806020026020018201604052801561212b5781602001602082028038833980820191505090505b509050600092505b6003600101805490508310156121c85784600360000160006003600101868154811061215b57fe5b906000526020600020015481526020019081526020016000206002016002015414156121bb576003600101838154811061219157fe5b90600052602060002001548183806001019450815181106121ae57fe5b6020026020010181815250505b8280600101935050612133565b6060826040519080825280602002602001820160405280156121f95781602001602082028038833980820191505090505b509050600093505b828410156122425781848151811061221557fe5b602002602001015181858151811061222957fe5b6020026020010181815250508380600101945050612201565b8094505050505061224f565b5b919050565b600060036000016000848152602001908152602001600020600201600901828154811061227d57fe5b9060005260206000200154905092915050565b6000806000806060600260038111156122a557fe5b6003600001600088815260200190815260200160002060010160009054906101000a900460ff1660038111156122d757fe5b141561244457600360000160008781526020019081526020016000206015016008016000015494506003600001600087815260200190815260200160002060150160080160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506003600001600087815260200190815260200160002060150160080160010154935060036000016000878152602001908152602001600020601501600201600201549150600360000160008781526020019081526020016000206015016002016004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124385780601f1061240d57610100808354040283529160200191612438565b820191906000526020600020905b81548152906001019060200180831161241b57829003601f168201915b505050505090506125ec565b60038081111561245057fe5b6003600001600088815260200190815260200160002060010160009054906101000a900460ff16600381111561248257fe5b14156125eb5760036000016000878152602001908152602001600020602801600201600001549450600360000160008781526020019081526020016000206028016002016001015493506003600001600087815260200190815260200160002060280160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060036000016000878152602001908152602001600020602801600501600201549150600360000160008781526020019081526020016000206028016005016004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125e35780601f106125b8576101008083540402835291602001916125e3565b820191906000526020600020905b8154815290600101906020018083116125c657829003601f168201915b505050505090505b5b91939590929450565b818173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff161561264161dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156126a2578082015181840152602081019050612687565b50505050905090810190601f1680156126cf5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561273a57600080fd5b505af415801561274e573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff161561279c61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156127fd5780820151818401526020810190506127e2565b50505050905090810190601f16801561282a5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b15801561287857600080fd5b505af415801561288c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561291057602002820191906000526020600020905b8154815260200190600101908083116128fc575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561298a57808201518184015260208101905061296f565b50505050905001935050505060206040518083038186803b1580156129ae57600080fd5b505af41580156129c2573d6000803e3d6000fd5b505050506040513d60208110156129d857600080fd5b81019080805190602001909291905050508015612b995750600060038111156129fd57fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166003811115612a2f57fe5b14612b785760036000016000848152602001908152602001600020601001600301805480602002602001604051908101604052809291908181526020018280548015612a9a57602002820191906000526020600020905b815481526020019060010190808311612a86575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015612b14578082015181840152602081019050612af9565b50505050905001935050505060206040518083038186803b158015612b3857600080fd5b505af4158015612b4c573d6000803e3d6000fd5b505050506040513d6020811015612b6257600080fd5b8101908080519060200190929190505050612b98565b836003600001600085815260200190815260200160002060020160070154145b5b15612ba261dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612c03578082015181840152602081019050612be8565b50505050905090810190601f168015612c305780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b158015612c7e57600080fd5b505af4158015612c92573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff1615612cc7576000600e60006101000a81548160ff0219169083151502179055505b600a600085856040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208152602001908152602001600020600080820160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff021916905550506003820160006101000a81549060ff02191690556004820160008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff0219169055505060078201600080820160006101000a81549060ff02191690556000820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160009055600482016000612e29919061e132565b6005820160006101000a81549060ff02191690556005820160016101000a81549060ff02191690555050505082600360000160008681526020019081526020016000206010016002018190555050505050565b60008060008060008073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008a815260200190815260200160002060350160009054906101000a900460ff1615612ecf61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612f30578082015181840152602081019050612f15565b50505050905090810190601f168015612f5d5780820380516001836020036101000a031916815260200191505b508481038352603781526020018061e8f460379139604001848103825260208152602001807f477261706820656c656d656e742077697468205f6964206e6f7420666f756e648152506020019550505050505060006040518083038186803b158015612fc857600080fd5b505af4158015612fdc573d6000803e3d6000fd5b5050505060036000016000888152602001908152602001600020601501600b0160020160149054906101000a900460ff16156130995760036000016000888152602001908152602001600020601501600b0160000154955060036000016000888152602001908152602001600020601501600b0160010154945060036000016000888152602001908152602001600020601501600b0160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693505b60036000016000888152602001908152602001600020601501600e0160020160149054906101000a900460ff16156131525760036000016000888152602001908152602001600020601501600e0160000154925060036000016000888152602001908152602001600020601501600e0160010154915060036000016000888152602001908152602001600020601501600e0160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b91939550919395565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff16156131a761dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156132085780820151818401526020810190506131ed565b50505050905090810190601f1680156132355780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b1580156132a057600080fd5b505af41580156132b4573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff161561330261dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613363578082015181840152602081019050613348565b50505050905090810190601f1680156133905780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b1580156133de57600080fd5b505af41580156133f2573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561347657602002820191906000526020600020905b815481526020019060010190808311613462575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156134f05780820151818401526020810190506134d5565b50505050905001935050505060206040518083038186803b15801561351457600080fd5b505af4158015613528573d6000803e3d6000fd5b505050506040513d602081101561353e57600080fd5b810190808051906020019092919050505080156136ff57506000600381111561356357fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561359557fe5b146136de576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561360057602002820191906000526020600020905b8154815260200190600101908083116135ec575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561367a57808201518184015260208101905061365f565b50505050905001935050505060206040518083038186803b15801561369e57600080fd5b505af41580156136b2573d6000803e3d6000fd5b505050506040513d60208110156136c857600080fd5b81019080805190602001909291905050506136fe565b836003600001600085815260200190815260200160002060020160070154145b5b1561370861dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561376957808201518184015260208101905061374e565b50505050905090810190601f1680156137965780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b1580156137e457600080fd5b505af41580156137f8573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461383f61ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156138a0578082015181840152602081019050613885565b50505050905090810190601f1680156138cd5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061eba3603091396040018481038252603681526020018061ec9c603691396040019550505050505060006040518083038186803b15801561391b57600080fd5b505af415801561392f573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff1615613964576000600e60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506139a38a8a8a8a61ddf8565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff02191690836005811115613a6057fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004019080519060200190613b9692919061e17a565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a6000838152602001908152602001600020600701600101819055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff1615613c8661dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613ce7578082015181840152602081019050613ccc565b50505050905090810190601f168015613d145780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b158015613d7f57600080fd5b505af4158015613d93573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff1615613de161dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613e42578082015181840152602081019050613e27565b50505050905090810190601f168015613e6f5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b158015613ebd57600080fd5b505af4158015613ed1573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020601001600401805480602002602001604051908101604052809291908181526020018280548015613f5557602002820191906000526020600020905b815481526020019060010190808311613f41575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015613fcf578082015181840152602081019050613fb4565b50505050905001935050505060206040518083038186803b158015613ff357600080fd5b505af4158015614007573d6000803e3d6000fd5b505050506040513d602081101561401d57600080fd5b810190808051906020019092919050505080156141de57506000600381111561404257fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561407457fe5b146141bd57600360000160008481526020019081526020016000206010016003018054806020026020016040519081016040528092919081815260200182805480156140df57602002820191906000526020600020905b8154815260200190600101908083116140cb575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561415957808201518184015260208101905061413e565b50505050905001935050505060206040518083038186803b15801561417d57600080fd5b505af4158015614191573d6000803e3d6000fd5b505050506040513d60208110156141a757600080fd5b81019080805190602001909291905050506141dd565b836003600001600085815260200190815260200160002060020160070154145b5b156141e761dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561424857808201518184015260208101905061422d565b50505050905090810190601f1680156142755780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b1580156142c357600080fd5b505af41580156142d7573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461431e61ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561437f578082015181840152602081019050614364565b50505050905090810190601f1680156143ac5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061eba3603091396040018481038252603681526020018061ec9c603691396040019550505050505060006040518083038186803b1580156143fa57600080fd5b505af415801561440e573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff1615614443576000600e60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506144828a8a8a8a61ddf8565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561453f57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061467592919061e17a565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a6000838152602001908152602001600020600701600301819055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b600060036000016000838152602001908152602001600020600201600901805490509050919050565b600e60009054906101000a900460ff1615614773576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff166147bc61de86565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561481d578082015181840152602081019050614802565b50505050905090810190601f16801561484a5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f50726f63657373446566696e6974696f6e2e63726561746547617465776179008152506020018481038252602581526020018061e6d9602591396040019550505050505060006040518083038186803b1580156148b557600080fd5b505af41580156148c9573d6000803e3d6000fd5b50505050600360020182908060018154018082558091505090600182039060005260206000200160009091929091909150555060016003600001600084815260200190815260200160002060010160006101000a81548160ff0219169083600381111561493257fe5b0217905550816003600001600084815260200190815260200160002060100160000181905550806003600001600084815260200190815260200160002060100160010160006101000a81548160ff0219169083600281111561499057fe5b021790555060016003600001600084815260200190815260200160002060350160006101000a81548160ff0219169083151502179055505050565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b815260040160206040518083038186803b158015614a3557600080fd5b505afa158015614a49573d6000803e3d6000fd5b505050506040513d6020811015614a5f57600080fd5b8101908080519060200190929190505050905090565b600060036000016000848152602001908152602001600020600201600a018281548110614a9e57fe5b906000526020600020505092915050565b60008060008060006003600001600088815260200190815260200160002060350160009054906101000a900460ff1615614ba35785945085935060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060000154925060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060010154915060036000016000888152602001908152602001600020600201600c01600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b9295509295909350565b600060036001018281548110614bbf57fe5b90600052602060002001549050919050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff1615614c1d61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614c7e578082015181840152602081019050614c63565b50505050905090810190601f168015614cab5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b158015614d1657600080fd5b505af4158015614d2a573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff1615614d7861dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015614dd9578082015181840152602081019050614dbe565b50505050905090810190601f168015614e065780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b158015614e5457600080fd5b505af4158015614e68573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020601001600401805480602002602001604051908101604052809291908181526020018280548015614eec57602002820191906000526020600020905b815481526020019060010190808311614ed8575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015614f66578082015181840152602081019050614f4b565b50505050905001935050505060206040518083038186803b158015614f8a57600080fd5b505af4158015614f9e573d6000803e3d6000fd5b505050506040513d6020811015614fb457600080fd5b81019080805190602001909291905050508015615175575060006003811115614fd957fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561500b57fe5b14615154576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561507657602002820191906000526020600020905b815481526020019060010190808311615062575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b838110156150f05780820151818401526020810190506150d5565b50505050905001935050505060206040518083038186803b15801561511457600080fd5b505af4158015615128573d6000803e3d6000fd5b505050506040513d602081101561513e57600080fd5b8101908080519060200190929190505050615174565b836003600001600085815260200190815260200160002060020160070154145b5b1561517e61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156151df5780820151818401526020810190506151c4565b50505050905090810190601f16801561520c5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b15801561525a57600080fd5b505af415801561526e573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef826003600001600086815260200190815260200160002060100160020154146152b561ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156153165780820151818401526020810190506152fb565b50505050905090810190601f1680156153435780820380516001836020036101000a031916815260200191505b508481038352603081526020018061eba3603091396040018481038252603681526020018061ec9c603691396040019550505050505060006040518083038186803b15801561539157600080fd5b505af41580156153a5573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff16156153da576000600e60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506154198a8a8a8a61ddf8565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff021916908360058111156154d657fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061560c92919061e17a565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a600083815260200190815260200160002060070160050160006101000a81548160ff0219169083151502179055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b60606003600001600083815260200190815260200160002060020160090180548060200260200160405190810160405280929190818152602001828054801561572b57602002820191906000526020600020905b815481526020019060010190808311615717575b50505050509050919050565b6000806000806003600001600086815260200190815260200160002060150160010160009054906101000a900460ff1693506003600001600086815260200190815260200160002060150160010160019054906101000a900460ff16925060036000016000868152602001908152602001600020601501601101549150600360000160008681526020019081526020016000206015016012015490509193509193565b600080600060086000016000600860010186815481106157f657fe5b9060005260206000200154815260200190815260200160002060010190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692508060010154915050915091565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff161561589461dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156158f55780820151818401526020810190506158da565b50505050905090810190601f1680156159225780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561598d57600080fd5b505af41580156159a1573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff16156159ef61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615a50578082015181840152602081019050615a35565b50505050905090810190601f168015615a7d5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b158015615acb57600080fd5b505af4158015615adf573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60036000016000858152602001908152602001600020601001600401805480602002602001604051908101604052809291908181526020018280548015615b6357602002820191906000526020600020905b815481526020019060010190808311615b4f575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015615bdd578082015181840152602081019050615bc2565b50505050905001935050505060206040518083038186803b158015615c0157600080fd5b505af4158015615c15573d6000803e3d6000fd5b505050506040513d6020811015615c2b57600080fd5b81019080805190602001909291905050508015615dec575060006003811115615c5057fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff166003811115615c8257fe5b14615dcb5760036000016000848152602001908152602001600020601001600301805480602002602001604051908101604052809291908181526020018280548015615ced57602002820191906000526020600020905b815481526020019060010190808311615cd9575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015615d67578082015181840152602081019050615d4c565b50505050905001935050505060206040518083038186803b158015615d8b57600080fd5b505af4158015615d9f573d6000803e3d6000fd5b505050506040513d6020811015615db557600080fd5b8101908080519060200190929190505050615deb565b836003600001600085815260200190815260200160002060020160070154145b5b15615df561dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615e56578082015181840152602081019050615e3b565b50505050905090810190601f168015615e835780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b158015615ed157600080fd5b505af4158015615ee5573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82600360000160008681526020019081526020016000206010016002015414615f2c61ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015615f8d578082015181840152602081019050615f72565b50505050905090810190601f168015615fba5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061eba3603091396040018481038252603681526020018061ec9c603691396040019550505050505060006040518083038186803b15801561600857600080fd5b505af415801561601c573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff1615616051576000600e60006101000a81548160ff0219169083151502179055505b60008b8b60405160200180838152602001828152602001925050506040516020818303038152906040528051906020012090506160908a8a8a8a61ddf8565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561614d57fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061628392919061e17a565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a6000838152602001908152602001600020600701600201819055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b60008084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600a600082815260200190815260200160002060000160020160149054906101000a900460ff161561646157600a600082815260200190815260200160002073__$d688d3e5094c429bbf767db5b46e89d18f$__63ec4601549091856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561641e57600080fd5b505af4158015616432573d6000803e3d6000fd5b505050506040513d602081101561644857600080fd5b8101908080519060200190929190505050915050616467565b60019150505b9392505050565b60008060006003600001600085815260200190815260200160002060280160010160009054906101000a900460ff1692506003600001600085815260200190815260200160002060280160010160019054906101000a900460ff16915060036000016000858152602001908152602001600020602801600b015490509193909250565b6000600160006003811061650157fe5b602091828204019190069054906101000a900460ff16905090565b6000600e60009054906101000a900460ff161561654f576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008e815260200190815260200160002060350160009054906101000a900460ff1615806165d95750600060038111156165a457fe5b600360000160008f815260200190815260200160002060010160009054906101000a900460ff1660038111156165d657fe5b14155b6165e161ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015616642578082015181840152602081019050616627565b50505050905090810190601f16801561666f5780820380516001836020036101000a031916815260200191505b508481038352602981526020018061e884602991396040018481038252608881526020018061e7666088913960a0019550505050505060006040518083038186803b1580156166bd57600080fd5b505af41580156166d1573d6000803e3d6000fd5b505050508a8a604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff1661674f61de86565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156167b0578082015181840152602081019050616795565b50505050905090810190601f1680156167dd5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061ec7a602291396040018481038252605681526020018061e99b605691396060019550505050505060006040518083038186803b15801561682b57600080fd5b505af415801561683f573d6000803e3d6000fd5b505050506003600401819080600181540180825580915050906001820390600052602060002001600090919290919091505550600380600001600083815260200190815260200160002060010160006101000a81548160ff021916908360038111156168a757fe5b0217905550896003600001600083815260200190815260200160002060280160000181905550886003600001600083815260200190815260200160002060280160010160006101000a81548160ff0219169083600181111561690557fe5b0217905550876003600001600083815260200190815260200160002060280160010160016101000a81548160ff0219169083600181111561694257fe5b021790555060008411801561696d57506000600181111561695f57fe5b89600181111561696b57fe5b145b1561699b57836003600001600083815260200190815260200160002060280160050160020181905550616aa4565b6000838390501180156169c357506001808111156169b557fe5b8960018111156169c157fe5b145b156169fc5782826003600001600084815260200190815260200160002060280160050160040191906169f692919061e1fa565b50616aa3565b866003600001600083815260200190815260200160002060280160020160000181905550856003600001600083815260200190815260200160002060280160020160010181905550846003600001600083815260200190815260200160002060280160020160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b600360000160008c8152602001908152602001600020600201600d0181908060018154018082558091505090600182039060005260206000200160009091929091909150555060016003600001600083815260200190815260200160002060350160006101000a81548160ff0219169083151502179055509a9950505050505050505050565b6000806060600360000160008581526020019081526020016000206002016007015492506003600001600085815260200190815260200160002060020160080154915060036000016000858152602001908152602001600020600201600d01805480602002602001604051908101604052809291908181526020018280548015616bd357602002820191906000526020600020905b815481526020019060010190808311616bbf575b505050505090509193909250565b6000616cd66001600380602002604051908101604052809291908260038015616c45576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411616c0e5790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b158015616c9057600080fd5b505afa158015616ca4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506060811015616cc957600080fd5b810190809190505061dec3565b9050919050565b6000600b54905090565b6000806000600e60006101000a81548160ff0219169083151502179055506000600d81905550616d1561e27a565b60008090505b6003600101805490508110156170cb576003600001600060036001018381548110616d4257fe5b90600052602060002001548152602001908152602001600020600201604051806101c0016040529081600082015481526020016001820160009054906101000a900460ff166001811115616d9257fe5b6001811115616d9d57fe5b81526020016001820160019054906101000a900460ff166003811115616dbf57fe5b6003811115616dca57fe5b81526020016001820160029054906101000a900460ff166002811115616dec57fe5b6002811115616df757fe5b8152602001600282015481526020016003820160009054906101000a900460ff16151515158152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201805480602002602001604051908101604052809291908181526020018280548015616ea157602002820191906000526020600020905b815481526020019060010190808311616e8d575b50505050508152602001600a8201805480602002602001604051908101604052809291908181526020018280548015616ef957602002820191906000526020600020905b815481526020019060010190808311616ee5575b50505050508152602001600d8201805480602002602001604051908101604052809291908181526020018280548015616f5157602002820191906000526020600020905b815481526020019060010190808311616f3d575b505050505081525050915081610120015173__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015616fb257600080fd5b505af4158015616fc6573d6000803e3d6000fd5b505050506040513d6020811015616fdc57600080fd5b8101908080519060200190929190505050156170be57600d5473__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561704557600080fd5b505af4158015617059573d6000803e3d6000fd5b505050506040513d602081101561706f57600080fd5b81019080805190602001909291905050506170b25760007f6475706c6963617465207374617274206163746976697469657300000000000093509350505061795d565b8160000151600d819055505b8080600101915050616d1b565b600d5473__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561711e57600080fd5b505af4158015617132573d6000803e3d6000fd5b505050506040513d602081101561714857600080fd5b81019080805190602001909291905050501561718c5760007f6e6f20737461727420616374697669747900000000000000000000000000000093509350505061795d565b61719461e321565b600091505b600380018054905082101561773f57600360000160006003800184815481106171be57fe5b9060005260206000200154815260200190815260200160002060150160405180610120016040529081600082015481526020016001820160009054906101000a900460ff16600181111561720e57fe5b600181111561721957fe5b81526020016001820160019054906101000a900460ff16600181111561723b57fe5b600181111561724657fe5b815260200160028201604051806101000160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156173855780601f1061735a57610100808354040283529160200191617385565b820191906000526020600020905b81548152906001019060200180831161736857829003601f168201915b505050505081526020016005820160009054906101000a900460ff161515151581526020016005820160019054906101000a900460ff16151515158152505081526020016008820160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1615151515815250508152602001600b820160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1615151515815250508152602001600e820160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff16151515158152505081526020016011820154815260200160128201548152505090508060e0015173__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156175fe57600080fd5b505af4158015617612573d6000803e3d6000fd5b505050506040513d602081101561762857600080fd5b81019080805190602001909291905050501561766d5760007f696e7465726d2e206576656e7420772f6f7574207072656465636573736f72009450945050505061795d565b80610100015173__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156176c357600080fd5b505af41580156176d7573d6000803e3d6000fd5b505050506040513d60208110156176ed57600080fd5b8101908080519060200190929190505050156177325760007f696e7465726d2e206576656e7420772f6f757420737563636573736f720000009450945050505061795d565b8180600101925050617199565b61774761e3a4565b600092505b60036002018054905083101561791657600360000160006003600201858154811061777357fe5b906000526020600020015481526020019081526020016000206010016040518060a0016040529081600082015481526020016001820160009054906101000a900460ff1660028111156177c257fe5b60028111156177cd57fe5b8152602001600282015481526020016003820180548060200260200160405190810160405280929190818152602001828054801561782a57602002820191906000526020600020905b815481526020019060010190808311617816575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561788257602002820191906000526020600020905b81548152602001906001019080831161786e575b5050505050815250509050600081606001515114156178cb5760007f756e726561636861626c65206761746577617900000000000000000000000000955095505050505061795d565b600081608001515114156179095760007f6761746577617920776974686f7574206f757470757473000000000000000000955095505050505061795d565b828060010193505061774c565b6001600e60006101000a81548160ff02191690831515021790555060017f6d6f64656c2076616c696400000000000000000000000000000000000000000095509550505050505b9091565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900460ff1661799361df76565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156179f45780820151818401526020810190506179d9565b50505050905090810190601f168015617a215780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061e678602a91396040018481038252602981526020018061e73d602991396040019550505050505060006040518083038186803b158015617a6f57600080fd5b505af4158015617a83573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008414617aad61dfb3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617b0e578082015181840152602081019050617af3565b50505050905090810190601f168015617b3b5780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f50726f63657373446566696e6974696f6e2e636f6e7374727563746f720000008152506020018481038252600b8152602001807f5f6964206973204e554c4c0000000000000000000000000000000000000000008152506020019550505050505060006040518083038186803b158015617bc357600080fd5b505af4158015617bd7573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614617c2d61dfb3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015617c8e578082015181840152602081019050617c73565b50505050905090810190601f168015617cbb5780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f50726f63657373446566696e6974696f6e2e636f6e7374727563746f720000008152506020018481038252600e8152602001807f5f6d6f64656c206973204e554c4c0000000000000000000000000000000000008152506020019550505050505060006040518083038186803b158015617d4357600080fd5b505af4158015617d57573d6000803e3d6000fd5b5050505033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600b8190555080600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f414e3a2f2f70726f636573732d646566696e6974696f6e7300000000000000007f38d94abeb96a84ab50e93c24191394bf293459aed56a464639dfa03acdaba44530846000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d1ca6316040518163ffffffff1660e01b815260040160206040518083038186803b158015617e9257600080fd5b505afa158015617ea6573d6000803e3d6000fd5b505050506040513d6020811015617ebc57600080fd5b810190808051906020019092919050505086604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390a26001600260006101000a81548160ff0219169083151502179055505050565b7f414e3a2f2f646174612d6d617070696e6773000000000000000000000000000081565b6000600e60009054906101000a900460ff1615617fcd576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600086815260200190815260200160002060350160009054906101000a900460ff161561801761dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561807857808201518184015260208101905061805d565b50505050905090810190601f1680156180a55780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252601e8152602001807f736f7572636520677261706820656c656d656e74206e6f7420666f756e6400008152506020019550505050505060006040518083038186803b15801561811057600080fd5b505af4158015618124573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff161561817261dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156181d35780820151818401526020810190506181b8565b50505050905090810190601f1680156182005780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252601e8152602001807f74617267657420677261706820656c656d656e74206e6f7420666f756e6400008152506020019550505050505060006040518083038186803b15801561826b57600080fd5b505af415801561827f573d6000803e3d6000fd5b505050506000600381111561829057fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff1660038111156182c257fe5b14156184255773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60006003600001600087815260200190815260200160002060020160080154141561830b61dff0565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561836c578082015181840152602081019050618351565b50505050905090810190601f1680156183995780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252603d81526020018061e9f1603d91396040019550505050505060006040518083038186803b1580156183e757600080fd5b505af41580156183fb573d6000803e3d6000fd5b50505050816003600001600085815260200190815260200160002060020160080181905550618bcc565b6002600381111561843257fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561846457fe5b14156185c75773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000600360000160008781526020019081526020016000206015016012015414156184ad61dff0565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561850e5780820151818401526020810190506184f3565b50505050905090810190601f16801561853b5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252604781526020018061e8ad604791396060019550505050505060006040518083038186803b15801561858957600080fd5b505af415801561859d573d6000803e3d6000fd5b50505050816003600001600085815260200190815260200160002060150160120181905550618bcb565b6003808111156185d357fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561860557fe5b14156187685773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060036000016000878152602001908152602001600020602801600b0154141561864e61dff0565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156186af578082015181840152602081019050618694565b50505050905090810190601f1680156186dc5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252604281526020018061ec38604291396060019550505050505060006040518083038186803b15801561872a57600080fd5b505af415801561873e573d6000803e3d6000fd5b505050508160036000016000858152602001908152602001600020602801600b0181905550618bca565b6001600381111561877557fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff1660038111156187a757fe5b141561893c576003600001600084815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561881357602002820191906000526020600020905b8154815260200190600101908083116187ff575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091846040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561888d578082015181840152602081019050618872565b50505050905001935050505060206040518083038186803b1580156188b157600080fd5b505af41580156188c5573d6000803e3d6000fd5b505050506040513d60208110156188db57600080fd5b810190808051906020019092919050505061893757600360000160008481526020019081526020016000206010016004018290806001815401808255809150509060018203906000526020600020016000909192909190915055505b618bc9565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961895e61e02d565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156189b557808201518184015260208101905061899a565b50505050905090810190601f1680156189e25780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252604081526020018061e95b6040913960400194505050505060006040518083038186803b158015618a2f57600080fd5b505af4158015618a43573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015618a6d57600080fd5b8101908080516040519392919084640100000000821115618a8d57600080fd5b83820191506020820185811115618aa357600080fd5b8251866001820283011164010000000082111715618ac057600080fd5b8083526020830192505050908051906020019080838360005b83811015618af4578082015181840152602081019050618ad9565b50505050905090810190601f168015618b215780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015618b8e578082015181840152602081019050618b73565b50505050905090810190601f168015618bbb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b5b5b60006003811115618bd957fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff166003811115618c0b57fe5b1415618d6e5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060036000016000868152602001908152602001600020600201600701541415618c5461dff0565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015618cb5578082015181840152602081019050618c9a565b50505050905090810190601f168015618ce25780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252603f81526020018061e6fe603f91396040019550505050505060006040518083038186803b158015618d3057600080fd5b505af4158015618d44573d6000803e3d6000fd5b50505050826003600001600084815260200190815260200160002060020160070181905550619373565b60026003811115618d7b57fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff166003811115618dad57fe5b1415618f105773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060036000016000868152602001908152602001600020601501601101541415618df661dff0565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015618e57578082015181840152602081019050618e3c565b50505050905090810190601f168015618e845780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252604981526020018061e7ee604991396060019550505050505060006040518083038186803b158015618ed257600080fd5b505af4158015618ee6573d6000803e3d6000fd5b50505050826003600001600084815260200190815260200160002060150160110181905550619372565b60016003811115618f1d57fe5b6003600001600084815260200190815260200160002060010160009054906101000a900460ff166003811115618f4f57fe5b14156190e45760036000016000838152602001908152602001600020601001600301805480602002602001604051908101604052809291908181526020018280548015618fbb57602002820191906000526020600020905b815481526020019060010190808311618fa7575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561903557808201518184015260208101905061901a565b50505050905001935050505060206040518083038186803b15801561905957600080fd5b505af415801561906d573d6000803e3d6000fd5b505050506040513d602081101561908357600080fd5b81019080805190602001909291905050506190df57600360000160008381526020019081526020016000206010016003018390806001815401808255809150509060018203906000526020600020016000909192909190915055505b619371565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369961910661e02d565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561915d578082015181840152602081019050619142565b50505050905090810190601f16801561918a5780820380516001836020036101000a031916815260200191505b508481038352602281526020018061e837602291396040018481038252604081526020018061ebf86040913960400194505050505060006040518083038186803b1580156191d757600080fd5b505af41580156191eb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561921557600080fd5b810190808051604051939291908464010000000082111561923557600080fd5b8382019150602082018581111561924b57600080fd5b825186600182028301116401000000008211171561926857600080fd5b8083526020830192505050908051906020019080838360005b8381101561929c578082015181840152602081019050619281565b50505050905090810190601f1680156192c95780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561933657808201518184015260208101905061931b565b50505050905090810190601f1680156193635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b5b61937b61e06a565b905092915050565b61938b61e3e4565b60016003806020026040519081016040528092919082600380156193ea576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116193b35790505b5050505050905090565b60006001806003811061940357fe5b602091828204019190069054906101000a900460ff16905090565b600080600080600080600080600360000160008a815260200190815260200160002060350160009054906101000a900460ff16156195a457600360000160008a815260200190815260200160002060020160010160009054906101000a900460ff16600181111561948b57fe5b9750600360000160008a815260200190815260200160002060020160010160019054906101000a900460ff1660038111156194c257fe5b9650600360000160008a815260200190815260200160002060020160010160029054906101000a900460ff1660028111156194f957fe5b9550600360000160008a8152602001908152602001600020600201600201549450600360000160008a815260200190815260200160002060020160030160009054906101000a900460ff169350600360000160008a8152602001908152602001600020600201600401549250600360000160008a8152602001908152602001600020600201600501549150600360000160008a81526020019081526020016000206002016006015490505b919395975091939597565b6000600860000160008484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002060030160009054906101000a900460ff16905092915050565b60006196ac60016003806020026040519081016040528092919082600380156196a1576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161966a5790505b50505050508361dec3565b9050919050565b6060806000806003600001600086815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561971f57602002820191906000526020600020905b81548152602001906001019080831161970b575b505050505093506003600001600086815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561978c57602002820191906000526020600020905b815481526020019060010190808311619778575b505050505092506003600001600086815260200190815260200160002060100160010160009054906101000a900460ff169150600360000160008681526020019081526020016000206010016002015490509193509193565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600e60009054906101000a900460ff1615619840576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008a815260200190815260200160002060350160009054906101000a900460ff1680156198c8575060038081111561989457fe5b600360000160008b815260200190815260200160002060010160009054906101000a900460ff1660038111156198c657fe5b145b156198d161ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619932578082015181840152602081019050619917565b50505050905090810190601f16801561995f5780820380516001836020036101000a031916815260200191505b508481038352602f81526020018061eabd602f91396040018481038252608e81526020018061eaec608e913960a0019550505050505060006040518083038186803b1580156199ad57600080fd5b505af41580156199c1573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8773__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015619a3057600080fd5b505af4158015619a44573d6000803e3d6000fd5b505050506040513d6020811015619a5a57600080fd5b81019080805190602001909291905050508015619aa35750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b619aab61e02d565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619b0c578082015181840152602081019050619af1565b50505050905090810190601f168015619b395780820380516001836020036101000a031916815260200191505b508481038352602f81526020018061eabd602f91396040018481038252606581526020018061ea2e606591396080019550505050505060006040518083038186803b158015619b8757600080fd5b505af4158015619b9b573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008484905014619bc861dfb3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619c29578082015181840152602081019050619c0e565b50505050905090810190601f168015619c565780820380516001836020036101000a031916815260200191505b508481038352602f81526020018061eabd602f91396040018481038252602b81526020018061e859602b91396040019550505050505060006040518083038186803b158015619ca457600080fd5b505af4158015619cb8573d6000803e3d6000fd5b50505050619cc461e406565b868160000151600001818152505085816000015160200181815250508481600001516040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152505060036000016000898152602001908152602001600020602801600c018190806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160030160146101000a81548163ffffffff021916908360e01c02179055505050505050505050505050565b878773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff1615619f5f61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015619fc0578082015181840152602081019050619fa5565b50505050905090810190601f168015619fed5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561a05857600080fd5b505af415801561a06c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff161561a0ba61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a11b57808201518184015260208101905061a100565b50505050905090810190601f16801561a1485780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b15801561a19657600080fd5b505af415801561a1aa573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561a22e57602002820191906000526020600020905b81548152602001906001019080831161a21a575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561a2a857808201518184015260208101905061a28d565b50505050905001935050505060206040518083038186803b15801561a2cc57600080fd5b505af415801561a2e0573d6000803e3d6000fd5b505050506040513d602081101561a2f657600080fd5b8101908080519060200190929190505050801561a4b757506000600381111561a31b57fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561a34d57fe5b1461a496576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561a3b857602002820191906000526020600020905b81548152602001906001019080831161a3a4575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561a43257808201518184015260208101905061a417565b50505050905001935050505060206040518083038186803b15801561a45657600080fd5b505af415801561a46a573d6000803e3d6000fd5b505050506040513d602081101561a48057600080fd5b810190808051906020019092919050505061a4b6565b836003600001600085815260200190815260200160002060020160070154145b5b1561a4c061dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a52157808201518184015260208101905061a506565b50505050905090810190601f16801561a54e5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b15801561a59c57600080fd5b505af415801561a5b0573d6000803e3d6000fd5b50505050898973__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461a5f761ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561a65857808201518184015260208101905061a63d565b50505050905090810190601f16801561a6855780820380516001836020036101000a031916815260200191505b508481038352603081526020018061eba3603091396040018481038252603681526020018061ec9c603691396040019550505050505060006040518083038186803b15801561a6d357600080fd5b505af415801561a6e7573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff161561a71c576000600e60006101000a81548160ff0219169083151502179055505b60008c8c604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905061a75b8b8b8b8b61ddf8565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561a81857fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061a94e92919061e17a565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff02191690831515021790555050509050508686600a6000848152602001908152602001600020600701600401919061a9bc92919061e1fa565b506001600a600083815260200190815260200160002060070160050160016101000a81548160ff02191690831515021790555050505050505050505050505050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff161561aa4a61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561aaab57808201518184015260208101905061aa90565b50505050905090810190601f16801561aad85780820380516001836020036101000a031916815260200191505b50848103835260208152602001807f50726f63657373446566696e6974696f6e2e676574456c656d656e74547970658152506020018481038252602581526020018061ebd3602591396040019550505050505060006040518083038186803b15801561ab4357600080fd5b505af415801561ab57573d6000803e3d6000fd5b505050506003600001600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060036000016000838152602001908152602001600020600201600a01805490509050919050565b7f414e3a2f2f61637469766974792d646566696e6974696f6e730000000000000081565b6000600860010180549050905090565b888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff161561ac5c61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561acbd57808201518184015260208101905061aca2565b50505050905090810190601f16801561acea5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561ad5557600080fd5b505af415801561ad69573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff161561adb761dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561ae1857808201518184015260208101905061adfd565b50505050905090810190601f16801561ae455780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b15801561ae9357600080fd5b505af415801561aea7573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561af2b57602002820191906000526020600020905b81548152602001906001019080831161af17575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561afa557808201518184015260208101905061af8a565b50505050905001935050505060206040518083038186803b15801561afc957600080fd5b505af415801561afdd573d6000803e3d6000fd5b505050506040513d602081101561aff357600080fd5b8101908080519060200190929190505050801561b1b457506000600381111561b01857fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561b04a57fe5b1461b193576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561b0b557602002820191906000526020600020905b81548152602001906001019080831161b0a1575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561b12f57808201518184015260208101905061b114565b50505050905001935050505060206040518083038186803b15801561b15357600080fd5b505af415801561b167573d6000803e3d6000fd5b505050506040513d602081101561b17d57600080fd5b810190808051906020019092919050505061b1b3565b836003600001600085815260200190815260200160002060020160070154145b5b1561b1bd61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561b21e57808201518184015260208101905061b203565b50505050905090810190601f16801561b24b5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b15801561b29957600080fd5b505af415801561b2ad573d6000803e3d6000fd5b505050508a8a73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461b2f461ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561b35557808201518184015260208101905061b33a565b50505050905090810190601f16801561b3825780820380516001836020036101000a031916815260200191505b508481038352603081526020018061eba3603091396040018481038252603681526020018061ec9c603691396040019550505050505060006040518083038186803b15801561b3d057600080fd5b505af415801561b3e4573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff161561b419576000600e60006101000a81548160ff0219169083151502179055505b60008d8d604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905061b4588c8c8c8c61ddf8565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561b51557fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061b64b92919061e17a565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505087600a60008381526020019081526020016000206004016000018190555086600a60008381526020019081526020016000206004016001018190555085600a600083815260200190815260200160002060040160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600a600083815260200190815260200160002060040160020160146101000a81548160ff0219169083151502179055505050505050505050505050505050565b7f414e3a2f2f70726f636573732d646566696e6974696f6e73000000000000000081565b6000600e60009054906101000a900460ff16905090565b6000600e60009054906101000a900460ff161561b7d5576000600e60006101000a81548160ff0219169083151502179055505b600360000160008b815260200190815260200160002060350160009054906101000a900460ff161561b8105761b80961e073565b905061bcfc565b8573__$64db665dd301bb0cc2cc68502a9bd7c360$__638e8567ae90916040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561b86157600080fd5b505af415801561b875573d6000803e3d6000fd5b505050506040513d602081101561b88b57600080fd5b810190808051906020019092919050505061b99357600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166358f2a46d876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561b91357600080fd5b505afa15801561b927573d6000803e3d6000fd5b505050506040513d602081101561b93d57600080fd5b810190808051906020019092919050505061b9615761b95a61e07d565b905061bcfc565b6001600381111561b96e57fe5b88600381111561b97a57fe5b1461b98e5761b98761e087565b905061bcfc565b61b9c2565b6001600381111561b9a057fe5b88600381111561b9ac57fe5b141561b9c15761b9ba61e091565b905061bcfc565b5b60036001018a90806001815401808255809150509060018203906000526020600020016000909192909190915055506000600360000160008c815260200190815260200160002060010160006101000a81548160ff0219169083600381111561ba2757fe5b021790555089600360000160008c81526020019081526020016000206002016000018190555088600360000160008c815260200190815260200160002060020160010160006101000a81548160ff0219169083600181111561ba8557fe5b021790555087600360000160008c815260200190815260200160002060020160010160016101000a81548160ff0219169083600381111561bac257fe5b021790555086600360000160008c815260200190815260200160002060020160010160026101000a81548160ff0219169083600281111561baff57fe5b021790555085600360000160008c81526020019081526020016000206002016002018190555084600360000160008c815260200190815260200160002060020160030160006101000a81548160ff02191690831515021790555083600360000160008c81526020019081526020016000206002016004018190555082600360000160008c81526020019081526020016000206002016005018190555081600360000160008c8152602001908152602001600020600201600601819055506001600360000160008c815260200190815260200160002060350160006101000a81548160ff0219169083151502179055507f414e3a2f2f61637469766974792d646566696e6974696f6e73000000000000007f8535517f68417fecb5815fc8ee689d6176b52551602cd478f4869fa464105d4e308c8c600181111561bc3e57fe5b8c600381111561bc4a57fe5b8c600281111561bc5657fe5b8c8c8c8c8c604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018960ff1660ff1681526020018860ff1660ff1681526020018760ff1660ff168152602001868152602001851515151581526020018481526020018381526020018281526020019a505050505050505050505060405180910390a261bcf961e06a565b90505b9998505050505050505050565b600e60009054906101000a900460ff161561bd3a576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600089815260200190815260200160002060350160009054906101000a900460ff16801561bdc357506000600381111561bd8f57fe5b600360000160008a815260200190815260200160002060010160009054906101000a900460ff16600381111561bdc157fe5b145b1561bdcc61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561be2d57808201518184015260208101905061be12565b50505050905090810190601f16801561be5a5780820380516001836020036101000a031916815260200191505b508481038352602a81526020018061ea93602a91396040018481038252608681526020018061e5f26086913960a0019550505050505060006040518083038186803b15801561bea857600080fd5b505af415801561bebc573d6000803e3d6000fd5b505050506000600181111561becd57fe5b85600181111561bed957fe5b141561c0525760036000016000878152602001908152602001600020600201600b01600085815260200190815260200160002060020160149054906101000a900460ff1661bf6857600360000160008781526020019081526020016000206002016009018490806001815401808255809150509060018203906000526020600020016000909192909190915055505b60405180608001604052808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060036000016000888152602001908152602001600020600201600b016000868152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690831515021790555090505061c1e0565b60018081111561c05e57fe5b85600181111561c06a57fe5b141561c1df5760036000016000878152602001908152602001600020600201600c01600085815260200190815260200160002060020160149054906101000a900460ff1661c0f95760036000016000878152602001908152602001600020600201600a018490806001815401808255809150509060018203906000526020600020016000909192909190915055505b60405180608001604052808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060036000016000888152602001908152602001600020600201600c016000868152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b5b7f414e3a2f2f646174612d6d617070696e677300000000000000000000000000007f8f625bb1b0890f994d35093a4593a61e7d37802f8f6e6d454c6826fbd517067e3088878787878c600181111561c23457fe5b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200197505050505050505060405180910390a2505050505050565b600e60009054906101000a900460ff161561c304576000600e60006101000a81548160ff0219169083151502179055505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600360000160008c815260200190815260200160002060350160009054906101000a900460ff1661c34d61de86565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561c3ae57808201518184015260208101905061c393565b50505050905090810190601f16801561c3db5780820380516001836020036101000a031916815260200191505b508481038352602981526020018061eb7a602991396040018481038252602581526020018061e6d9602591396040019550505050505060006040518083038186803b15801561c42957600080fd5b505af415801561c43d573d6000803e3d6000fd5b50505050600380018990806001815401808255809150509060018203906000526020600020016000909192909190915055506002600360000160008b815260200190815260200160002060010160006101000a81548160ff0219169083600381111561c4a557fe5b021790555088600360000160008b81526020019081526020016000206015016000018190555087600360000160008b815260200190815260200160002060150160010160006101000a81548160ff0219169083600181111561c50357fe5b02179055506000600181111561c51557fe5b88600181111561c52157fe5b148061c542575060018081111561c53457fe5b88600181111561c54057fe5b145b1561c58a576000600360000160008b815260200190815260200160002060150160010160016101000a81548160ff0219169083600181111561c58057fe5b021790555061c5c8565b86600360000160008b815260200190815260200160002060150160010160016101000a81548160ff0219169083600181111561c5c257fe5b02179055505b60008311801561c5ee57506000600181111561c5e057fe5b88600181111561c5ec57fe5b145b1561c61c5782600360000160008b81526020019081526020016000206015016002016002018190555061c725565b60008282905011801561c644575060018081111561c63657fe5b88600181111561c64257fe5b145b1561c67d578181600360000160008c8152602001908152602001600020601501600201600401919061c67792919061e1fa565b5061c724565b85600360000160008b81526020019081526020016000206015016008016000018190555084600360000160008b81526020019081526020016000206015016008016001018190555083600360000160008b815260200190815260200160002060150160080160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b6001600360000160008b815260200190815260200160002060350160006101000a81548160ff0219169083151502179055507f414e3a2f2f696e7465726d2d6576656e742d646566696e6974696f6e730000007fffcc9917fd665bc2a9845e37c738003462efdb9ce57700a86aae2acd73ace689308b8b600181111561c7a757fe5b8b600181111561c7b357fe5b8b8b8b8b8b8b604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018960ff1660ff1681526020018860ff1660ff1681526020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509b50505050505050505050505060405180910390a2505050505050505050565b868673__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060350160009054906101000a900460ff161561c8ec61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561c94d57808201518184015260208101905061c932565b50505050905090810190601f16801561c97a5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252601a8152602001807f546865206761746577617920646f6573206e6f742065786973740000000000008152506020019550505050505060006040518083038186803b15801561c9e557600080fd5b505af415801561c9f9573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600084815260200190815260200160002060350160009054906101000a900460ff161561ca4761dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561caa857808201518184015260208101905061ca8d565b50505050905090810190601f16801561cad55780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603481526020018061e5be603491396040019550505050505060006040518083038186803b15801561cb2357600080fd5b505af415801561cb37573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6003600001600085815260200190815260200160002060100160040180548060200260200160405190810160405280929190818152602001828054801561cbbb57602002820191906000526020600020905b81548152602001906001019080831161cba7575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561cc3557808201518184015260208101905061cc1a565b50505050905001935050505060206040518083038186803b15801561cc5957600080fd5b505af415801561cc6d573d6000803e3d6000fd5b505050506040513d602081101561cc8357600080fd5b8101908080519060200190929190505050801561ce4457506000600381111561cca857fe5b6003600001600085815260200190815260200160002060010160009054906101000a900460ff16600381111561ccda57fe5b1461ce23576003600001600084815260200190815260200160002060100160030180548060200260200160405190810160405280929190818152602001828054801561cd4557602002820191906000526020600020905b81548152602001906001019080831161cd31575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__63c01c0b5f9091866040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019060200280838360005b8381101561cdbf57808201518184015260208101905061cda4565b50505050905001935050505060206040518083038186803b15801561cde357600080fd5b505af415801561cdf7573d6000803e3d6000fd5b505050506040513d602081101561ce0d57600080fd5b810190808051906020019092919050505061ce43565b836003600001600085815260200190815260200160002060020160070154145b5b1561ce4d61dd7e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561ceae57808201518184015260208101905061ce93565b50505050905090810190601f16801561cedb5780820380516001836020036101000a031916815260200191505b508481038352603081526020018061e92b603091396040018481038252603081526020018061ecd2603091396040019550505050505060006040518083038186803b15801561cf2957600080fd5b505af415801561cf3d573d6000803e3d6000fd5b50505050888873__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8260036000016000868152602001908152602001600020601001600201541461cf8461ddbb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561cfe557808201518184015260208101905061cfca565b50505050905090810190601f16801561d0125780820380516001836020036101000a031916815260200191505b508481038352603081526020018061eba3603091396040018481038252603681526020018061ec9c603691396040019550505050505060006040518083038186803b15801561d06057600080fd5b505af415801561d074573d6000803e3d6000fd5b50505050600e60009054906101000a900460ff161561d0a9576000600e60006101000a81548160ff0219169083151502179055505b60008b8b604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120905061d0e88a8a8a8a61ddf8565b600a6000838152602001908152602001600020600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060208201518160030160006101000a81548160ff0219169083600581111561d1a557fe5b0217905550604082015181600401600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908315150217905550505060608201518160070160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061d2db92919061e17a565b5060c08201518160050160006101000a81548160ff02191690831515021790555060e08201518160050160016101000a81548160ff021916908315150217905550505090505085600a600083815260200190815260200160002060070160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600a600083815260200190815260200160002060070160050160016101000a81548160ff021916908315150217905550505050505050505050505050565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60008060008060006003600001600088815260200190815260200160002060350160009054906101000a900460ff161561d4f75785945085935060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060000154925060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060010154915060036000016000888152602001908152602001600020600201600b01600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b9295509295909350565b60006003600001600083815260200190815260200160002060350160009054906101000a900460ff169050919050565b6000600e60009054906101000a900460ff161561d564576000600e60006101000a81548160ff0219169083151502179055505b61d56c61e06a565b905060008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461d5a9578361d5cd565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905060008184604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506008600001600082815260200190815260200160002060030160009054906101000a900460ff161561d66757829250505061d8b4565b600015158273ffffffffffffffffffffffffffffffffffffffff16637180f973866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561d6bc57600080fd5b505afa15801561d6d0573d6000803e3d6000fd5b505050506040513d602081101561d6e657600080fd5b81019080805190602001909291905050501515141561d7105761d70761e07d565b9250505061d8b4565b60086001018190806001815401808255809150509060018203906000526020600020016000909192909190915055600860000160008381526020019081526020016000206000018190555060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001858152506008600001600083815260200190815260200160002060010160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505060016008600001600083815260200190815260200160002060030160006101000a81548160ff0219169083151502179055507f414e3a2f2f70726f636573732d646566696e6974696f6e7300000000000000007f71e1caf18038ec62cce99f19463f24d1083d26dd1fcc8a956a1821c9f07fbc1c3086604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a250505b92915050565b6000600160026003811061d8ca57fe5b602091828204019190069054906101000a900460ff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561d95961e09b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561d9ba57808201518184015260208101905061d99f565b50505050905090810190601f16801561d9e75780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f4f776e65642e7072655f6f6e6c7942794f776e657200000000000000000000008152506020018481038252601f8152602001807f546865206d73672e73656e646572206973206e6f7420746865206f776e6572008152506020019550505050505060006040518083038186803b15801561da6f57600080fd5b505af415801561da83573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461dad961dfb3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561db3a57808201518184015260208101905061db1f565b50505050905090810190601f16801561db675780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f776e65642e7472616e736665724f776e6572736869700000000000000000008152506020018481038252601e8152602001807f546865206e6577206f776e6572206d757374206e6f74206265204e554c4c00008152506020019550505050505060006040518083038186803b15801561dbef57600080fd5b505af415801561dc03573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461dd575780600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffcf23a92150d56e85e3a3d33b357493246e55783095eb6a733eb8439ffc752c8600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b7f414e3a2f2f696e7465726d2d6576656e742d646566696e6974696f6e7300000081565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b61de0061e462565b61de0861e4a7565b60405180608001604052808781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090508082600001819052508260ff16600581111561de5c57fe5b8260200190600581111561de6c57fe5b9081600581111561de7957fe5b8152505050949350505050565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b600061def18360006003811061ded557fe5b60200201518360006003811061dee757fe5b602002015161e0d8565b90506000811461df035780905061df70565b61df2f8360016003811061df1357fe5b60200201518360016003811061df2557fe5b602002015161e0d8565b90506000811461df415780905061df70565b61df6d8360026003811061df5157fe5b60200201518360026003811061df6357fe5b602002015161e0d8565b90505b92915050565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b60006103ea905090565b60006103e9905090565b6000610bb9905090565b6000610bba905090565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60008260ff168260ff16141561e0f1576000905061e12c565b8260ff168260ff16101561e127577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905061e12c565b600190505b92915050565b50805460018160011615610100020316600290046000825580601f1061e158575061e177565b601f01602090049060005260206000209081019061e176919061e4ed565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061e1bb57805160ff191683800117855561e1e9565b8280016001018555821561e1e9579182015b8281111561e1e857825182559160200191906001019061e1cd565b5b50905061e1f6919061e4ed565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061e23b57803560ff191683800117855561e269565b8280016001018555821561e269579182015b8281111561e26857823582559160200191906001019061e24d565b5b50905061e276919061e4ed565b5090565b604051806101c00160405280600080191681526020016000600181111561e29d57fe5b81526020016000600381111561e2af57fe5b81526020016000600281111561e2c157fe5b81526020016000801916815260200160001515815260200160008019168152602001600080191681526020016000801916815260200160008019168152602001600080191681526020016060815260200160608152602001606081525090565b604051806101200160405280600080191681526020016000600181111561e34457fe5b81526020016000600181111561e35657fe5b815260200161e36361e512565b815260200161e37061e577565b815260200161e37d61e577565b815260200161e38a61e577565b815260200160008019168152602001600080191681525090565b6040518060a00160405280600080191681526020016000600281111561e3c657fe5b81526020016000801916815260200160608152602001606081525090565b6040518060600160405280600390602082028038833980820191505090505090565b604051806060016040528061e41961e577565b8152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525090565b604051806080016040528061e47561e577565b81526020016000600581111561e48757fe5b815260200161e49461e577565b815260200161e4a161e512565b81525090565b60405180608001604052806000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b61e50f91905b8082111561e50b57600081600090555060010161e4f3565b5090565b90565b604051806101000160405280600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681526020016000815260200160008152602001606081526020016000151581526020016000151581525090565b60405180608001604052806000801916815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509056fe5468652074617267657420656c656d656e74202861637469766974797c676174657761792920646f6573206e6f7420657869737443616e6e6f74206372656174652064617461206d617070696e672073696e636520676976656e206163746976697479496420697320656974686572206e6f6e2d6578697374656e74206f72206e6f74206f662074686520636f727265637420747970652042706d4d6f64656c2e4d6f64656c456c656d656e74547970652e4143544956495459416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a6550726f63657373446566696e6974696f6e2e736574496e7465726d6564696174654576656e744461746574696d65416e644f6666736574477261706820656c656d656e742077697468205f696420616c7265616479206578697374734e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e67207072656465636573736f72206f6620616e20616374697669747954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a656443616e6e6f742063726561746520626f756e64617279206576656e742073696e636520676976656e206163746976697479496420697320656974686572206e6f6e2d6578697374656e74206f72206e6f74206f662074686520636f727265637420747970652042706d4d6f64656c2e4d6f64656c456c656d656e74547970652e41435449564954594e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e67207072656465636573736f72206f6620616e20696e7465726d656469617465206576656e7450726f63657373446566696e6974696f6e2e6372656174655472616e736974696f6e416374696f6e2066756e6374696f6e20706172616d65746572206d757374206e6f7420626520656d70747944656661756c7450726f63657373446566696e6974696f6e2e616464426f756e646172794576656e744e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e6720737563636573736f72206f6620616e20696e7465726d656469617465206576656e7450726f63657373446566696e6974696f6e2e676574496e7465726d6564696174654576656e744461746574696d65416e644f666673657450726f63657373446566696e6974696f6e2e7072655f676174657761794f75745472616e736974696f6e457869737473556e6b6e6f776e2f556e737570706f727465642042706d4d6f64656c2e4d6f64656c456c656d656e745479706520666f7220736f7572636520656c656d656e74477261706820656c656d656e7420776974682067656e657261746564206576656e744964203d20285f616374697669747949642c5f69642920616c72656164792065786973747320696e207468652070726f636573734e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e6720737563636573736f72206f6620616e206163746976697479456974686572206120436f6e646974696f6e616c4461746120287669612061205f64617461506174682061742061206d696e696d756d29206f722061205f6669786564457363616c6174696f6e54617274676574206d7573742062652070726f766964656444656661756c7450726f63657373446566696e6974696f6e2e637265617465446174614d617070696e6744656661756c7450726f63657373446566696e6974696f6e2e616464426f756e646172794576656e74416374696f6e43616e6e6f742061646420626f756e64617279206576656e7420616374696f6e2073696e63652074686520676976656e20494420697320656974686572206e6f6e2d6578697374656e74206f72206e6f74206f662074686520636f727265637420747970652042706d4d6f64656c2e4d6f64656c456c656d656e74547970652e424f554e444152595f4556454e5450726f63657373446566696e6974696f6e2e637265617465496e7465726d6564696174654576656e7450726f63657373446566696e6974696f6e2e7072655f7461726765744e6f7444656661756c745472616e736974696f6e477261706820656c656d656e74207769746820676976656e204944206e6f7420666f756e64556e6b6e6f776e2f556e737570706f727465642042706d4d6f64656c2e4d6f64656c456c656d656e745479706520666f722074617267657420656c656d656e744e6f7420616c6c6f77656420746f206f766572777269746520616e206578697374696e6720737563636573736f72206f66206120626f756e64617279206576656e7450726f63657373446566696e6974696f6e2e616464426f756e646172794576656e745468652074617267657420656c656d656e7420697320746865206761746577617927732064656661756c74207472616e736974696f6e4e6f207472616e736974696f6e20666f756e64206265747765656e206761746577617920616e64206163746976697479a265627a7a723158200fdebdcdf7a1aec7524ac8cca868251a9d19b700288a5f18f52841dc775f148e64736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$d688d3e5094c429bbf767db5b46e89d18f$", bpm_model_BpmModelLib_sol_BpmModelLib);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        bytecode = Replace(bytecode, "$64db665dd301bb0cc2cc68502a9bd7c360$", commons_utils_TypeUtilsLib_sol_TypeUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActivityDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActivityDefinitionCreation", this.address, callback); }
        LogDataMappingCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataMappingCreation", this.address, callback); }
        LogIntermediateEventDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogIntermediateEventDefinitionCreation", this.address, callback); }
        LogOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogOwnerChanged", this.address, callback); }
        LogProcessDefinitionCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogProcessDefinitionCreation", this.address, callback); }
        LogProcessDefinitionInterfaceIdUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogProcessDefinitionInterfaceIdUpdate", this.address, callback); }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_ID_ACTIVITY_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_ACTIVITY_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ACTIVITY_DEFINITIONS();
            });
        }
        EVENT_ID_DATA_MAPPINGS() {
            const data = Encode(this.client).EVENT_ID_DATA_MAPPINGS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_MAPPINGS();
            });
        }
        EVENT_ID_INTERM_EVENT_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_INTERM_EVENT_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_INTERM_EVENT_DEFINITIONS();
            });
        }
        EVENT_ID_PROCESS_DEFINITIONS() {
            const data = Encode(this.client).EVENT_ID_PROCESS_DEFINITIONS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_PROCESS_DEFINITIONS();
            });
        }
        addBoundaryEvent(_activityId: Buffer, _id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) {
            const data = Encode(this.client).addBoundaryEvent(_activityId, _id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant);
            return Call<Tx, {
                eventId: Buffer;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addBoundaryEvent();
            });
        }
        addBoundaryEventAction(_id: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _fixedTarget: string, _actionFunction: string) {
            const data = Encode(this.client).addBoundaryEventAction(_id, _dataPath, _dataStorageId, _dataStorage, _fixedTarget, _actionFunction);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addBoundaryEventAction();
            });
        }
        addProcessInterfaceImplementation(_model: string, _interfaceId: Buffer) {
            const data = Encode(this.client).addProcessInterfaceImplementation(_model, _interfaceId);
            return Call<Tx, {
                error: number;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addProcessInterfaceImplementation();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createActivityDefinition(_id: Buffer, _activityType: number, _taskType: number, _behavior: number, _assignee: Buffer, _multiInstance: boolean, _application: Buffer, _subProcessModelId: Buffer, _subProcessDefinitionId: Buffer) {
            const data = Encode(this.client).createActivityDefinition(_id, _activityType, _taskType, _behavior, _assignee, _multiInstance, _application, _subProcessModelId, _subProcessDefinitionId);
            return Call<Tx, {
                error: number;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createActivityDefinition();
            });
        }
        createDataMapping(_activityId: Buffer, _direction: number, _accessPath: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).createDataMapping(_activityId, _direction, _accessPath, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createDataMapping();
            });
        }
        createGateway(_id: Buffer, _type: number) {
            const data = Encode(this.client).createGateway(_id, _type);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createGateway();
            });
        }
        createIntermediateEvent(_id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) {
            const data = Encode(this.client).createIntermediateEvent(_id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createIntermediateEvent();
            });
        }
        createTransition(_source: Buffer, _target: Buffer) {
            const data = Encode(this.client).createTransition(_source, _target);
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransition();
            });
        }
        createTransitionConditionForAddress(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) {
            const data = Encode(this.client).createTransitionConditionForAddress(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForAddress();
            });
        }
        createTransitionConditionForBool(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: boolean) {
            const data = Encode(this.client).createTransitionConditionForBool(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForBool();
            });
        }
        createTransitionConditionForBytes32(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: Buffer) {
            const data = Encode(this.client).createTransitionConditionForBytes32(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForBytes32();
            });
        }
        createTransitionConditionForDataStorage(_gatewayId: Buffer, _targetElementId: Buffer, _lhDataPath: Buffer, _lhDataStorageId: Buffer, _lhDataStorage: string, _operator: number, _rhDataPath: Buffer, _rhDataStorageId: Buffer, _rhDataStorage: string) {
            const data = Encode(this.client).createTransitionConditionForDataStorage(_gatewayId, _targetElementId, _lhDataPath, _lhDataStorageId, _lhDataStorage, _operator, _rhDataPath, _rhDataStorageId, _rhDataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForDataStorage();
            });
        }
        createTransitionConditionForInt(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) {
            const data = Encode(this.client).createTransitionConditionForInt(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForInt();
            });
        }
        createTransitionConditionForString(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) {
            const data = Encode(this.client).createTransitionConditionForString(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForString();
            });
        }
        createTransitionConditionForUint(_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) {
            const data = Encode(this.client).createTransitionConditionForUint(_gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createTransitionConditionForUint();
            });
        }
        getActivitiesForParticipant(_participantId: Buffer) {
            const data = Encode(this.client).getActivitiesForParticipant(_participantId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivitiesForParticipant();
            });
        }
        getActivityAtIndex(_index: number) {
            const data = Encode(this.client).getActivityAtIndex(_index);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityAtIndex();
            });
        }
        getActivityData(_id: Buffer) {
            const data = Encode(this.client).getActivityData(_id);
            return Call<Tx, {
                activityType: number;
                taskType: number;
                taskBehavior: number;
                assignee: Buffer;
                multiInstance: boolean;
                application: Buffer;
                subProcessModelId: Buffer;
                subProcessDefinitionId: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityData();
            });
        }
        getActivityGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getActivityGraphDetails(_id);
            return Call<Tx, {
                predecessor: Buffer;
                successor: Buffer;
                boundaryEventIds: Buffer[];
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getActivityGraphDetails();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getBoundaryEventGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getBoundaryEventGraphDetails(_id);
            return Call<Tx, {
                eventType: number;
                eventBehavior: number;
                successor: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getBoundaryEventGraphDetails();
            });
        }
        getElementType(_id: Buffer) {
            const data = Encode(this.client).getElementType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getElementType();
            });
        }
        getGatewayGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getGatewayGraphDetails(_id);
            return Call<Tx, {
                inputs: Buffer[];
                outputs: Buffer[];
                gatewayType: number;
                defaultOutput: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGatewayGraphDetails();
            });
        }
        getId() {
            const data = Encode(this.client).getId();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getId();
            });
        }
        getImplementedProcessInterfaceAtIndex(_idx: number) {
            const data = Encode(this.client).getImplementedProcessInterfaceAtIndex(_idx);
            return Call<Tx, {
                modelAddress: string;
                interfaceId: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getImplementedProcessInterfaceAtIndex();
            });
        }
        getInDataMappingDetails(_activityId: Buffer, _id: Buffer) {
            const data = Encode(this.client).getInDataMappingDetails(_activityId, _id);
            return Call<Tx, {
                dataMappingId: Buffer;
                accessPath: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingDetails();
            });
        }
        getInDataMappingIdAtIndex(_activityId: Buffer, _idx: number) {
            const data = Encode(this.client).getInDataMappingIdAtIndex(_activityId, _idx);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingIdAtIndex();
            });
        }
        getInDataMappingKeys(_activityId: Buffer) {
            const data = Encode(this.client).getInDataMappingKeys(_activityId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getInDataMappingKeys();
            });
        }
        getIntermediateEventDatetimeAndOffset(_id: Buffer) {
            const data = Encode(this.client).getIntermediateEventDatetimeAndOffset(_id);
            return Call<Tx, {
                datetimeDataPath: Buffer;
                datetimeDataStorageId: Buffer;
                datetimeDataStorage: string;
                offsetDataPath: Buffer;
                offsetDataStorageId: Buffer;
                offsetDataStorage: string;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).getIntermediateEventDatetimeAndOffset();
            });
        }
        getIntermediateEventGraphDetails(_id: Buffer) {
            const data = Encode(this.client).getIntermediateEventGraphDetails(_id);
            return Call<Tx, {
                eventType: number;
                eventBehavior: number;
                predecessor: Buffer;
                successor: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getIntermediateEventGraphDetails();
            });
        }
        getModel() {
            const data = Encode(this.client).getModel();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getModel();
            });
        }
        getModelId() {
            const data = Encode(this.client).getModelId();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getModelId();
            });
        }
        getNumberOfActivities() {
            const data = Encode(this.client).getNumberOfActivities();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfActivities();
            });
        }
        getNumberOfImplementedProcessInterfaces() {
            const data = Encode(this.client).getNumberOfImplementedProcessInterfaces();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfImplementedProcessInterfaces();
            });
        }
        getNumberOfInDataMappings(_activityId: Buffer) {
            const data = Encode(this.client).getNumberOfInDataMappings(_activityId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfInDataMappings();
            });
        }
        getNumberOfOutDataMappings(_activityId: Buffer) {
            const data = Encode(this.client).getNumberOfOutDataMappings(_activityId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfOutDataMappings();
            });
        }
        getOutDataMappingDetails(_activityId: Buffer, _id: Buffer) {
            const data = Encode(this.client).getOutDataMappingDetails(_activityId, _id);
            return Call<Tx, {
                dataMappingId: Buffer;
                accessPath: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingDetails();
            });
        }
        getOutDataMappingIdAtIndex(_activityId: Buffer, _idx: number) {
            const data = Encode(this.client).getOutDataMappingIdAtIndex(_activityId, _idx);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingIdAtIndex();
            });
        }
        getOutDataMappingKeys(_activityId: Buffer) {
            const data = Encode(this.client).getOutDataMappingKeys(_activityId);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOutDataMappingKeys();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getStartActivity() {
            const data = Encode(this.client).getStartActivity();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getStartActivity();
            });
        }
        getTimerEventDetails(_id: Buffer) {
            const data = Encode(this.client).getTimerEventDetails(_id);
            return Call<Tx, {
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
                timestampConstant: number;
                durationConstant: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getTimerEventDetails();
            });
        }
        implementsProcessInterface(_model: string, _interfaceId: Buffer) {
            const data = Encode(this.client).implementsProcessInterface(_model, _interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).implementsProcessInterface();
            });
        }
        initialize(_id: Buffer, _model: string) {
            const data = Encode(this.client).initialize(_id, _model);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        isValid() {
            const data = Encode(this.client).isValid();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isValid();
            });
        }
        modelElementExists(_id: Buffer) {
            const data = Encode(this.client).modelElementExists(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).modelElementExists();
            });
        }
        resolveTransitionCondition(_sourceId: Buffer, _targetId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveTransitionCondition(_sourceId, _targetId, _dataStorage);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveTransitionCondition();
            });
        }
        setDefaultTransition(_gatewayId: Buffer, _targetElementId: Buffer) {
            const data = Encode(this.client).setDefaultTransition(_gatewayId, _targetElementId);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDefaultTransition();
            });
        }
        setIntermediateEventDatetimeAndOffset(_id: Buffer, _datetimeDataPath: Buffer, _datetimeDataStorageId: Buffer, _datetimeDataStorage: string, _offsetDataPath: Buffer, _offsetDataStorageId: Buffer, _offsetDataStorage: string) {
            const data = Encode(this.client).setIntermediateEventDatetimeAndOffset(_id, _datetimeDataPath, _datetimeDataStorageId, _datetimeDataStorage, _offsetDataPath, _offsetDataStorageId, _offsetDataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setIntermediateEventDatetimeAndOffset();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferOwnership(_newOwner: string) {
            const data = Encode(this.client).transferOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferOwnership();
            });
        }
        validate() {
            const data = Encode(this.client).validate();
            return Call<Tx, [boolean, Buffer]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).validate();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_ID_ACTIVITY_DEFINITIONS: () => { return client.encode("AF201B90", []); },
        EVENT_ID_DATA_MAPPINGS: () => { return client.encode("6983067E", []); },
        EVENT_ID_INTERM_EVENT_DEFINITIONS: () => { return client.encode("FD946FCD", []); },
        EVENT_ID_PROCESS_DEFINITIONS: () => { return client.encode("BA840F64", []); },
        addBoundaryEvent: (_activityId: Buffer, _id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) => { return client.encode("581654CE", ["bytes32", "bytes32", "uint8", "uint8", "bytes32", "bytes32", "address", "uint256", "string"], _activityId, _id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant); },
        addBoundaryEventAction: (_id: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _fixedTarget: string, _actionFunction: string) => { return client.encode("89A392E6", ["bytes32", "bytes32", "bytes32", "address", "address", "string"], _id, _dataPath, _dataStorageId, _dataStorage, _fixedTarget, _actionFunction); },
        addProcessInterfaceImplementation: (_model: string, _interfaceId: Buffer) => { return client.encode("F001897D", ["address", "bytes32"], _model, _interfaceId); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createActivityDefinition: (_id: Buffer, _activityType: number, _taskType: number, _behavior: number, _assignee: Buffer, _multiInstance: boolean, _application: Buffer, _subProcessModelId: Buffer, _subProcessDefinitionId: Buffer) => { return client.encode("BDE6EF58", ["bytes32", "uint8", "uint8", "uint8", "bytes32", "bool", "bytes32", "bytes32", "bytes32"], _id, _activityType, _taskType, _behavior, _assignee, _multiInstance, _application, _subProcessModelId, _subProcessDefinitionId); },
        createDataMapping: (_activityId: Buffer, _direction: number, _accessPath: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("C5930E29", ["bytes32", "uint8", "bytes32", "bytes32", "bytes32", "address"], _activityId, _direction, _accessPath, _dataPath, _dataStorageId, _dataStorage); },
        createGateway: (_id: Buffer, _type: number) => { return client.encode("32D37781", ["bytes32", "uint8"], _id, _type); },
        createIntermediateEvent: (_id: Buffer, _eventType: number, _eventBehavior: number, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _timestampConstant: number, _durationConstant: string) => { return client.encode("D1CC1BDE", ["bytes32", "uint8", "uint8", "bytes32", "bytes32", "address", "uint256", "string"], _id, _eventType, _eventBehavior, _dataPath, _dataStorageId, _dataStorage, _timestampConstant, _durationConstant); },
        createTransition: (_source: Buffer, _target: Buffer) => { return client.encode("6C28E102", ["bytes32", "bytes32"], _source, _target); },
        createTransitionConditionForAddress: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) => { return client.encode("DD2F3E84", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "address"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForBool: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: boolean) => { return client.encode("3D34113E", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bool"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForBytes32: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: Buffer) => { return client.encode("23FF5DD3", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bytes32"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForDataStorage: (_gatewayId: Buffer, _targetElementId: Buffer, _lhDataPath: Buffer, _lhDataStorageId: Buffer, _lhDataStorage: string, _operator: number, _rhDataPath: Buffer, _rhDataStorageId: Buffer, _rhDataStorage: string) => { return client.encode("B2816749", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "bytes32", "bytes32", "address"], _gatewayId, _targetElementId, _lhDataPath, _lhDataStorageId, _lhDataStorage, _operator, _rhDataPath, _rhDataStorageId, _rhDataStorage); },
        createTransitionConditionForInt: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) => { return client.encode("26417651", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "int256"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForString: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: string) => { return client.encode("8EFB695C", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "string"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        createTransitionConditionForUint: (_gatewayId: Buffer, _targetElementId: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, _operator: number, _value: number) => { return client.encode("5316C206", ["bytes32", "bytes32", "bytes32", "bytes32", "address", "uint8", "uint256"], _gatewayId, _targetElementId, _dataPath, _dataStorageId, _dataStorage, _operator, _value); },
        getActivitiesForParticipant: (_participantId: Buffer) => { return client.encode("14E42605", ["bytes32"], _participantId); },
        getActivityAtIndex: (_index: number) => { return client.encode("3BF2C2A0", ["uint256"], _index); },
        getActivityData: (_id: Buffer) => { return client.encode("758CBD2E", ["bytes32"], _id); },
        getActivityGraphDetails: (_id: Buffer) => { return client.encode("5B4025E1", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getBoundaryEventGraphDetails: (_id: Buffer) => { return client.encode("57CFEF6C", ["bytes32"], _id); },
        getElementType: (_id: Buffer) => { return client.encode("9C4AA334", ["bytes32"], _id); },
        getGatewayGraphDetails: (_id: Buffer) => { return client.encode("79238A10", ["bytes32"], _id); },
        getId: () => { return client.encode("5D1CA631", []); },
        getImplementedProcessInterfaceAtIndex: (_idx: number) => { return client.encode("4B53BE1D", ["uint256"], _idx); },
        getInDataMappingDetails: (_activityId: Buffer, _id: Buffer) => { return client.encode("E3621D20", ["bytes32", "bytes32"], _activityId, _id); },
        getInDataMappingIdAtIndex: (_activityId: Buffer, _idx: number) => { return client.encode("15064393", ["bytes32", "uint256"], _activityId, _idx); },
        getInDataMappingKeys: (_activityId: Buffer) => { return client.encode("3D9A2352", ["bytes32"], _activityId); },
        getIntermediateEventDatetimeAndOffset: (_id: Buffer) => { return client.encode("21BCDCC2", ["bytes32"], _id); },
        getIntermediateEventGraphDetails: (_id: Buffer) => { return client.encode("48191A40", ["bytes32"], _id); },
        getModel: () => { return client.encode("A0BFA1E0", []); },
        getModelId: () => { return client.encode("361A5672", []); },
        getNumberOfActivities: () => { return client.encode("006129D9", []); },
        getNumberOfImplementedProcessInterfaces: () => { return client.encode("B24B4BCC", []); },
        getNumberOfInDataMappings: (_activityId: Buffer) => { return client.encode("2B8C74CE", ["bytes32"], _activityId); },
        getNumberOfOutDataMappings: (_activityId: Buffer) => { return client.encode("AE73D8B3", ["bytes32"], _activityId); },
        getOutDataMappingDetails: (_activityId: Buffer, _id: Buffer) => { return client.encode("3A70DCEF", ["bytes32", "bytes32"], _activityId, _id); },
        getOutDataMappingIdAtIndex: (_activityId: Buffer, _idx: number) => { return client.encode("3796D3A4", ["bytes32", "uint256"], _activityId, _idx); },
        getOutDataMappingKeys: (_activityId: Buffer) => { return client.encode("08A104AA", ["bytes32"], _activityId); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getStartActivity: () => { return client.encode("0F9C79E2", []); },
        getTimerEventDetails: (_id: Buffer) => { return client.encode("20DE4E0A", ["bytes32"], _id); },
        implementsProcessInterface: (_model: string, _interfaceId: Buffer) => { return client.encode("77198ED4", ["address", "bytes32"], _model, _interfaceId); },
        initialize: (_id: Buffer, _model: string) => { return client.encode("6910E334", ["bytes32", "address"], _id, _model); },
        isValid: () => { return client.encode("BB5D40EB", []); },
        modelElementExists: (_id: Buffer) => { return client.encode("E3C83A16", ["bytes32"], _id); },
        resolveTransitionCondition: (_sourceId: Buffer, _targetId: Buffer, _dataStorage: string) => { return client.encode("5478A0C9", ["bytes32", "bytes32", "address"], _sourceId, _targetId, _dataStorage); },
        setDefaultTransition: (_gatewayId: Buffer, _targetElementId: Buffer) => { return client.encode("21A0C66F", ["bytes32", "bytes32"], _gatewayId, _targetElementId); },
        setIntermediateEventDatetimeAndOffset: (_id: Buffer, _datetimeDataPath: Buffer, _datetimeDataStorageId: Buffer, _datetimeDataStorage: string, _offsetDataPath: Buffer, _offsetDataStorageId: Buffer, _offsetDataStorage: string) => { return client.encode("01CDFC90", ["bytes32", "bytes32", "bytes32", "address", "bytes32", "bytes32", "address"], _id, _datetimeDataPath, _datetimeDataStorageId, _datetimeDataStorage, _offsetDataPath, _offsetDataStorageId, _offsetDataStorage); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferOwnership: (_newOwner: string) => { return client.encode("F2FDE38B", ["address"], _newOwner); },
        validate: () => { return client.encode("6901F668", []); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_ID_ACTIVITY_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_MAPPINGS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_INTERM_EVENT_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_PROCESS_DEFINITIONS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addBoundaryEvent: (): {
            eventId: Buffer;
        } => {
            const [eventId] = client.decode(data, ["bytes32"]);
            return { eventId: eventId };
        },
        addBoundaryEventAction: (): void => { return; },
        addProcessInterfaceImplementation: (): {
            error: number;
        } => {
            const [error] = client.decode(data, ["uint256"]);
            return { error: error };
        },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createActivityDefinition: (): {
            error: number;
        } => {
            const [error] = client.decode(data, ["uint256"]);
            return { error: error };
        },
        createDataMapping: (): void => { return; },
        createGateway: (): void => { return; },
        createIntermediateEvent: (): void => { return; },
        createTransition: (): [number] => { return client.decode(data, ["uint256"]); },
        createTransitionConditionForAddress: (): void => { return; },
        createTransitionConditionForBool: (): void => { return; },
        createTransitionConditionForBytes32: (): void => { return; },
        createTransitionConditionForDataStorage: (): void => { return; },
        createTransitionConditionForInt: (): void => { return; },
        createTransitionConditionForString: (): void => { return; },
        createTransitionConditionForUint: (): void => { return; },
        getActivitiesForParticipant: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getActivityAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getActivityData: (): {
            activityType: number;
            taskType: number;
            taskBehavior: number;
            assignee: Buffer;
            multiInstance: boolean;
            application: Buffer;
            subProcessModelId: Buffer;
            subProcessDefinitionId: Buffer;
        } => {
            const [activityType, taskType, taskBehavior, assignee, multiInstance, application, subProcessModelId, subProcessDefinitionId] = client.decode(data, ["uint8", "uint8", "uint8", "bytes32", "bool", "bytes32", "bytes32", "bytes32"]);
            return { activityType: activityType, taskType: taskType, taskBehavior: taskBehavior, assignee: assignee, multiInstance: multiInstance, application: application, subProcessModelId: subProcessModelId, subProcessDefinitionId: subProcessDefinitionId };
        },
        getActivityGraphDetails: (): {
            predecessor: Buffer;
            successor: Buffer;
            boundaryEventIds: Buffer[];
        } => {
            const [predecessor, successor, boundaryEventIds] = client.decode(data, ["bytes32", "bytes32", "bytes32[]"]);
            return { predecessor: predecessor, successor: successor, boundaryEventIds: boundaryEventIds };
        },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getBoundaryEventGraphDetails: (): {
            eventType: number;
            eventBehavior: number;
            successor: Buffer;
        } => {
            const [eventType, eventBehavior, successor] = client.decode(data, ["uint8", "uint8", "bytes32"]);
            return { eventType: eventType, eventBehavior: eventBehavior, successor: successor };
        },
        getElementType: (): [number] => { return client.decode(data, ["uint8"]); },
        getGatewayGraphDetails: (): {
            inputs: Buffer[];
            outputs: Buffer[];
            gatewayType: number;
            defaultOutput: Buffer;
        } => {
            const [inputs, outputs, gatewayType, defaultOutput] = client.decode(data, ["bytes32[]", "bytes32[]", "uint8", "bytes32"]);
            return { inputs: inputs, outputs: outputs, gatewayType: gatewayType, defaultOutput: defaultOutput };
        },
        getId: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getImplementedProcessInterfaceAtIndex: (): {
            modelAddress: string;
            interfaceId: Buffer;
        } => {
            const [modelAddress, interfaceId] = client.decode(data, ["address", "bytes32"]);
            return { modelAddress: modelAddress, interfaceId: interfaceId };
        },
        getInDataMappingDetails: (): {
            dataMappingId: Buffer;
            accessPath: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [dataMappingId, accessPath, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { dataMappingId: dataMappingId, accessPath: accessPath, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getInDataMappingIdAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getInDataMappingKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getIntermediateEventDatetimeAndOffset: (): {
            datetimeDataPath: Buffer;
            datetimeDataStorageId: Buffer;
            datetimeDataStorage: string;
            offsetDataPath: Buffer;
            offsetDataStorageId: Buffer;
            offsetDataStorage: string;
        } => {
            const [datetimeDataPath, datetimeDataStorageId, datetimeDataStorage, offsetDataPath, offsetDataStorageId, offsetDataStorage] = client.decode(data, ["bytes32", "bytes32", "address", "bytes32", "bytes32", "address"]);
            return { datetimeDataPath: datetimeDataPath, datetimeDataStorageId: datetimeDataStorageId, datetimeDataStorage: datetimeDataStorage, offsetDataPath: offsetDataPath, offsetDataStorageId: offsetDataStorageId, offsetDataStorage: offsetDataStorage };
        },
        getIntermediateEventGraphDetails: (): {
            eventType: number;
            eventBehavior: number;
            predecessor: Buffer;
            successor: Buffer;
        } => {
            const [eventType, eventBehavior, predecessor, successor] = client.decode(data, ["uint8", "uint8", "bytes32", "bytes32"]);
            return { eventType: eventType, eventBehavior: eventBehavior, predecessor: predecessor, successor: successor };
        },
        getModel: (): [string] => { return client.decode(data, ["address"]); },
        getModelId: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getNumberOfActivities: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfImplementedProcessInterfaces: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfInDataMappings: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfOutDataMappings: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOutDataMappingDetails: (): {
            dataMappingId: Buffer;
            accessPath: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [dataMappingId, accessPath, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { dataMappingId: dataMappingId, accessPath: accessPath, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getOutDataMappingIdAtIndex: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getOutDataMappingKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getStartActivity: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getTimerEventDetails: (): {
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
            timestampConstant: number;
            durationConstant: string;
        } => {
            const [dataPath, dataStorageId, dataStorage, timestampConstant, durationConstant] = client.decode(data, ["bytes32", "bytes32", "address", "uint256", "string"]);
            return { dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage, timestampConstant: timestampConstant, durationConstant: durationConstant };
        },
        implementsProcessInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        initialize: (): void => { return; },
        isValid: (): [boolean] => { return client.decode(data, ["bool"]); },
        modelElementExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        resolveTransitionCondition: (): [boolean] => { return client.decode(data, ["bool"]); },
        setDefaultTransition: (): void => { return; },
        setIntermediateEventDatetimeAndOffset: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferOwnership: (): void => { return; },
        validate: (): [boolean, Buffer] => { return client.decode(data, ["bool", "bytes32"]); }
    }; };
}