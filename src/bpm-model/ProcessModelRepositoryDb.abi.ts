//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CancelStreamSignal, ContractCodec, Event, linker, listenerFor, Result, Keccak } from "@hyperledger/burrow";
interface Provider {
    deploy(data: string | Uint8Array, contractMeta?: {
        abi: string;
        codeHash: Uint8Array;
    }[]): Promise<Address>;
    call(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    callSim(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const returnData = await (isSim ? client.callSim(data, addr) : client.call(data, addr));
    return callback(returnData);
}
export module ProcessModelRepositoryDb {
    export const contactName = "ProcessModelRepositoryDb";
    export const abi = '[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogSystemOwnerChanged","type":"event"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"},{"internalType":"address","name":"_address","type":"address"}],"name":"addModel","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getActiveModel","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"getModel","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_idx","type":"uint256"}],"name":"getModelAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfModels","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSystemOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"modelAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"modelIsActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_model","type":"address"}],"name":"modelIsRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_model","type":"address"}],"name":"registerActiveModel","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferSystemOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    export const bytecode = '608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611344806100606000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063665584a811610071578063665584a8146102925780636e81fc5d146102b05780637f692a2a1461030c578063b8cb251614610356578063d427d000146103c4578063fd72c2fa14610432576100a9565b80630a452ad6146100ae5780631101ec3b146100f2578063210f8a551461016a578063441f8116146101d85780635d8ff67814610244575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610478565b005b6101286004803603608081101561010857600080fd5b810190808035906020019092919080606001909192919290505050610875565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101966004803603602081101561018057600080fd5b8101908080359060200190929190505050610956565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61022e600480360360a08110156101ee57600080fd5b810190808035906020019092919080606001909192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f4565b6040518082815260200191505060405180910390f35b6102906004803603604081101561025a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce7565b005b61029a610f1c565b6040518082815260200191505060405180910390f35b6102f2600480360360208110156102c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f29565b604051808215151515815260200191505060405180910390f35b6103146110b9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103826004803603602081101561036c57600080fd5b81019080803590602001909291905050506110e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103f0600480360360208110156103da57600080fd5b8101908080359060200190929190505050611123565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61045e6004803603602081101561044857600080fd5b810190808035906020019092919050505061115f565b604051808215151515815260200191505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104eb6111fd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561054c578082015181840152602081019050610531565b50505050905090810190601f1680156105795780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112ef60219139604001848103825260268152602001806112a4602691396040019550505050505060006040518083038186803b1580156105c757600080fd5b505af41580156105db573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461063161123a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610692578082015181840152602081019050610677565b50505050905090810190601f1680156106bf5780820380516001836020036101000a031916815260200191505b508481038352602381526020018061128160239139604001848103825260258152602001806112ca602591396040019550505050505060006040518083038186803b15801561070d57600080fd5b505af4158015610721573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610872577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60006001600084815260200190815260200160002073__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce316909184604051602001808260036020028082843780830192505050915050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561091357600080fd5b505af4158015610927573d6000803e3d6000fd5b505050506040513d602081101561093d57600080fd5b8101908080519060200190929190505050905092915050565b6000600373__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce3169091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156109b257600080fd5b505af41580156109c6573d6000803e3d6000fd5b505050506040513d60208110156109dc57600080fd5b81019080805190602001909291905050509050919050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a696111fd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610aca578082015181840152602081019050610aaf565b50505050905090810190601f168015610af75780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112ef60219139604001848103825260268152602001806112a4602691396040019550505050505060006040518083038186803b158015610b4557600080fd5b505af4158015610b59573d6000803e3d6000fd5b505050506001600085815260200190815260200160002073__$5e3d4bda46c81e962f48c99e99f980d175$__63e9dc727990918560405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610c2d57600080fd5b505af4158015610c41573d6000803e3d6000fd5b505050506040513d6020811015610c5757600080fd5b81019080805190602001909291905050509050610c72611277565b811415610ce05760028290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b9392505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d5a6111fd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610dbb578082015181840152602081019050610da0565b50505050905090810190601f168015610de85780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112ef60219139604001848103825260268152602001806112a4602691396040019550505050505060006040518083038186803b158015610e3657600080fd5b505af4158015610e4a573d6000803e3d6000fd5b50505050600373__$5e3d4bda46c81e962f48c99e99f980d175$__63691d2b6c909184846040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610edc57600080fd5b505af4158015610ef0573d6000803e3d6000fd5b505050506040513d6020811015610f0657600080fd5b8101908080519060200190929190505050505050565b6000600280549050905090565b60006002805480602002602001604051908101604052809291908181526020018280548015610fad57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f63575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015611053578082015181840152602081019050611038565b50505050905001935050505060206040518083038186803b15801561107757600080fd5b505af415801561108b573d6000803e3d6000fd5b505050506040513d60208110156110a157600080fd5b81019080805190602001909291905050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600282815481106110f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002818154811061113057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600373__$5e3d4bda46c81e962f48c99e99f980d175$__63cd001d819091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156111bb57600080fd5b505af41580156111cf573d6000803e3d6000fd5b505050506040513d60208110156111e557600080fd5b81019080805190602001909291905050509050919050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b6000600190509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158208dcadf0bcd678d6080afe04db820b5b09cf16dce396ef5464a87f04421d9126a64736f6c63430005110032';
    export const deployedBytecode = '608060405234801561001057600080fd5b50600436106100a95760003560e01c8063665584a811610071578063665584a8146102925780636e81fc5d146102b05780637f692a2a1461030c578063b8cb251614610356578063d427d000146103c4578063fd72c2fa14610432576100a9565b80630a452ad6146100ae5780631101ec3b146100f2578063210f8a551461016a578063441f8116146101d85780635d8ff67814610244575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610478565b005b6101286004803603608081101561010857600080fd5b810190808035906020019092919080606001909192919290505050610875565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101966004803603602081101561018057600080fd5b8101908080359060200190929190505050610956565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61022e600480360360a08110156101ee57600080fd5b810190808035906020019092919080606001909192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109f4565b6040518082815260200191505060405180910390f35b6102906004803603604081101561025a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce7565b005b61029a610f1c565b6040518082815260200191505060405180910390f35b6102f2600480360360208110156102c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f29565b604051808215151515815260200191505060405180910390f35b6103146110b9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103826004803603602081101561036c57600080fd5b81019080803590602001909291905050506110e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103f0600480360360208110156103da57600080fd5b8101908080359060200190929190505050611123565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61045e6004803603602081101561044857600080fd5b810190808035906020019092919050505061115f565b604051808215151515815260200191505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104eb6111fd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561054c578082015181840152602081019050610531565b50505050905090810190601f1680156105795780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112ef60219139604001848103825260268152602001806112a4602691396040019550505050505060006040518083038186803b1580156105c757600080fd5b505af41580156105db573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461063161123a565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610692578082015181840152602081019050610677565b50505050905090810190601f1680156106bf5780820380516001836020036101000a031916815260200191505b508481038352602381526020018061128160239139604001848103825260258152602001806112ca602591396040019550505050505060006040518083038186803b15801561070d57600080fd5b505af4158015610721573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610872577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60006001600084815260200190815260200160002073__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce316909184604051602001808260036020028082843780830192505050915050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561091357600080fd5b505af4158015610927573d6000803e3d6000fd5b505050506040513d602081101561093d57600080fd5b8101908080519060200190929190505050905092915050565b6000600373__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce3169091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156109b257600080fd5b505af41580156109c6573d6000803e3d6000fd5b505050506040513d60208110156109dc57600080fd5b81019080805190602001909291905050509050919050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a696111fd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610aca578082015181840152602081019050610aaf565b50505050905090810190601f168015610af75780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112ef60219139604001848103825260268152602001806112a4602691396040019550505050505060006040518083038186803b158015610b4557600080fd5b505af4158015610b59573d6000803e3d6000fd5b505050506001600085815260200190815260200160002073__$5e3d4bda46c81e962f48c99e99f980d175$__63e9dc727990918560405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120856040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610c2d57600080fd5b505af4158015610c41573d6000803e3d6000fd5b505050506040513d6020811015610c5757600080fd5b81019080805190602001909291905050509050610c72611277565b811415610ce05760028290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b9392505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d5a6111fd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610dbb578082015181840152602081019050610da0565b50505050905090810190601f168015610de85780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112ef60219139604001848103825260268152602001806112a4602691396040019550505050505060006040518083038186803b158015610e3657600080fd5b505af4158015610e4a573d6000803e3d6000fd5b50505050600373__$5e3d4bda46c81e962f48c99e99f980d175$__63691d2b6c909184846040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610edc57600080fd5b505af4158015610ef0573d6000803e3d6000fd5b505050506040513d6020811015610f0657600080fd5b8101908080519060200190929190505050505050565b6000600280549050905090565b60006002805480602002602001604051908101604052809291908181526020018280548015610fad57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f63575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015611053578082015181840152602081019050611038565b50505050905001935050505060206040518083038186803b15801561107757600080fd5b505af415801561108b573d6000803e3d6000fd5b505050506040513d60208110156110a157600080fd5b81019080805190602001909291905050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600282815481106110f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002818154811061113057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600373__$5e3d4bda46c81e962f48c99e99f980d175$__63cd001d819091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156111bb57600080fd5b505af41580156111cf573d6000803e3d6000fd5b505050506040513d60208110156111e557600080fd5b81019080805190602001909291905050509050919050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b6000600190509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158208dcadf0bcd678d6080afe04db820b5b09cf16dce396ef5464a87f04421d9126a64736f6c63430005110032';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string, withContractMeta: boolean = false): Promise<string> {
        const codec = client.contractCodec(abi);
        const links = [{ name: "$ecfb6c4d3c3ceff197e19e585a0a53728c$", address: commons_base_ErrorsLib_sol_ErrorsLib }, { name: "$5e3d4bda46c81e962f48c99e99f980d175$", address: commons_collections_MappingsLib_sol_MappingsLib }, { name: "$6c578ef14ebe2070bb2319c6842ae291e1$", address: commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib }];
        const linkedBytecode = linker(bytecode, links);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        return client.deploy(data, withContractMeta ? [{ abi: ProcessModelRepositoryDb.abi, codeHash: new Keccak(256).update(linker(ProcessModelRepositoryDb.deployedBytecode, links), "hex").digest("binary") }] : undefined);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string, withContractMeta: boolean = false): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib, commons_collections_MappingsLib_sol_MappingsLib, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib, withContractMeta); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => unknown;
    const events = { LogSystemOwnerChanged: { signature: "0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogSystemOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { addModel(_id: Buffer, _version: [
                number,
                number,
                number
            ], _address: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addModel(_id, _version, _address);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addModel();
                });
            }, getActiveModel(_id: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getActiveModel(_id);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActiveModel();
                });
            }, getModel(_id: Buffer, _version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getModel(_id, _version);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getModel();
                });
            }, getModelAtIndex(_idx: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getModelAtIndex(_idx);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getModelAtIndex();
                });
            }, getNumberOfModels(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfModels();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfModels();
                });
            }, getSystemOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSystemOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSystemOwner();
                });
            }, modelAddresses(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).modelAddresses();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).modelAddresses();
                });
            }, modelIsActive(_id: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).modelIsActive(_id);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).modelIsActive();
                });
            }, modelIsRegistered(_model: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).modelIsRegistered(_model);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).modelIsRegistered();
                });
            }, registerActiveModel(_id: Buffer, _model: string, call = defaultCall): Promise<void> {
                const data = encode(client).registerActiveModel(_id, _model);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).registerActiveModel();
                });
            }, transferSystemOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferSystemOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferSystemOwnership();
                });
            } } as const, listeners: { LogSystemOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogSystemOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        addModel: (_id: Buffer, _version: [
            number,
            number,
            number
        ], _address: string) => { return codec.encodeFunctionData("441F8116", _id, _version, _address); },
        getActiveModel: (_id: Buffer) => { return codec.encodeFunctionData("210F8A55", _id); },
        getModel: (_id: Buffer, _version: [
            number,
            number,
            number
        ]) => { return codec.encodeFunctionData("1101EC3B", _id, _version); },
        getModelAtIndex: (_idx: number) => { return codec.encodeFunctionData("B8CB2516", _idx); },
        getNumberOfModels: () => { return codec.encodeFunctionData("665584A8"); },
        getSystemOwner: () => { return codec.encodeFunctionData("7F692A2A"); },
        modelAddresses: () => { return codec.encodeFunctionData("D427D000"); },
        modelIsActive: (_id: Buffer) => { return codec.encodeFunctionData("FD72C2FA", _id); },
        modelIsRegistered: (_model: string) => { return codec.encodeFunctionData("6E81FC5D", _model); },
        registerActiveModel: (_id: Buffer, _model: string) => { return codec.encodeFunctionData("5D8FF678", _id, _model); },
        transferSystemOwnership: (_newOwner: string) => { return codec.encodeFunctionData("0A452AD6", _newOwner); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogSystemOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        addModel: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("441F8116", data);
            return { error: error };
        },
        getActiveModel: (): [
            string
        ] => { return codec.decodeFunctionResult ("210F8A55", data); },
        getModel: (): [
            string
        ] => { return codec.decodeFunctionResult ("1101EC3B", data); },
        getModelAtIndex: (): [
            string
        ] => { return codec.decodeFunctionResult ("B8CB2516", data); },
        getNumberOfModels: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("665584A8", data);
            return { size: size };
        },
        getSystemOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("7F692A2A", data); },
        modelAddresses: (): [
            string
        ] => { return codec.decodeFunctionResult ("D427D000", data); },
        modelIsActive: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("FD72C2FA", data); },
        modelIsRegistered: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("6E81FC5D", data); },
        registerActiveModel: (): void => { return; },
        transferSystemOwnership: (): void => { return; }
    }; };
}