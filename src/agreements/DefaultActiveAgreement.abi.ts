//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultActiveAgreement {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_DataStorageUtils_sol_DataStorageUtils: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "60806040527f63726561746564000000000000000000000000000000000000000000000000006007557f75706461746564000000000000000000000000000000000000000000000000006008557f64656c657465640000000000000000000000000000000000000000000000000060095560016006600060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550826002600060038110620000d757fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200010757fe5b602091828204019190066101000a81548160ff021916908360ff16021790555080600280600381106200013657fe5b602091828204019190066101000a81548160ff021916908360ff160217905550620001ad60405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120620001b660201b60201c565b505050620002a3565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180620124b7602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6201220380620002b46000396000f3fe60806040523480156200001157600080fd5b5060043610620007365760003560e01c80637f91fb7d11620003c3578063d39c4faa116200020d578063f0a405271162000129578063f8d660d311620000bd578063fb1a14931162000093578063fb1a14931462002bd1578063fc344a731462002c1d578063fcb4862a1462002c3d578063fe3c84b21462002cc55762000736565b8063f8d660d31462002aa6578063f9f3f2831462002b25578063faff660e1462002bad5762000736565b8063f4b9d96e11620000ff578063f4b9d96e146200294f578063f5081e9f14620029dd578063f6ec229e1462002a66578063f76829c91462002a865762000736565b8063f0a40527146200281b578063f3420d1a14620028a3578063f364e37914620028de5762000736565b8063e703a9e411620001a1578063edec4c4f1162000177578063edec4c4f14620026c4578063eeb8b809146200274d578063f085f6dd14620027d5578063f0897db714620027fb5762000736565b8063e703a9e414620024ec578063ea8a1af01462002667578063ec9cb2ce14620026735762000736565b8063d779c8a111620001e3578063d779c8a11462002409578063e10533c61462002429578063e2be8fe11462002487578063e6f936f914620024cc5762000736565b8063d39c4faa1462002306578063d42ea9761462002361578063d734c53a14620023815762000736565b80639f75dfd911620002fd578063be60fc0c1162000291578063c4521ffb1162000267578063c4521ffb1462002186578063c6e8dfd014620021f7578063cfdc49421462002228578063d2e8a0fa14620022595762000736565b8063be60fc0c1462001fd3578063c0647c2e146200216e578063c3f0a895146200217a5762000736565b8063b20ba33711620002d3578063b20ba3371462001ed1578063b7d647771462001f04578063bc5864561462001f24578063bd9e06601462001f755762000736565b80639f75dfd91462001db3578063a6a8f17b1462001e3b578063aa0ac16f1462001e8c5762000736565b80638aaeff8c116200037557806391bec712116200034b57806391bec7121462001c0057806394e386241462001c2f57806394feb1521462001cb85780639561aa321462001d0d5762000736565b80638aaeff8c1462001bb05780638c2a4dae1462001bd45780639090fd851462001be05762000736565b80637f91fb7d14620019ca57806380c86ba71462001a2957806384a6cd4d1462001a49578063859360f51462001ae2578063893d20e81462001b295780638aa137f51462001b755762000736565b80634f7e37bb11620005855780636d6a7e8f11620004bf578063720e72e911620004535780637589adb711620004295780637589adb7146200189757806378bc0b0d14620018bd57806379ce3cb214620019395780637f80938114620019aa5762000736565b8063720e72e9146200180657806372ea18261462001841578063756b2e6c146200184d5762000736565b80636ea1944b11620004955780636ea1944b14620017325780636f78733b146200176357806370a9c99714620017835780637207b07f14620017e65762000736565b80636d6a7e8f14620015fa5780636d73c8bc14620016835780636dbbc67b14620017125762000736565b806359d585ee116200053757806363a84c04116200050d57806363a84c04146200143e578063641375ad14620014af57806368e7801114620015385780636a78a81514620015895762000736565b806359d585ee14620013915780635abf320214620013b75780635c03013814620013e35762000736565b80634f7e37bb14620011e057806351e213fc146200125f5780635666f9ac14620012e657806357e0ebca1462001306578063586ca7ab146200132c57806358892b86146200135d5762000736565b80632512e6f1116200067557806335ce1bd1116200060957806340514a1a11620005df57806340514a1a1462000f9c5780634773f6fc146200111057806347dd48e0146200118f5780634828c43b14620011c05762000736565b806335ce1bd11462000e86578063374b7d221462000ecb5780633c0e52451462000f175762000736565b80632ca15122116200064b5780632ca151221462000d5e57806330c676c91462000d6a578063311851821462000db357806331502f131462000e3b5762000736565b80632512e6f11462000c5f57806328545c0d1462000ca45780632a7cbfde1462000d0d5762000736565b80630ee2cb1011620006ed5780631314cf6611620006c35780631314cf661462000afe578063141b422a1462000b1e5780631c5422d21462000b995780631cb355401462000c225762000736565b80630ee2cb101462000a5b57806311ce58441462000aa7578063130c59851462000ac75762000736565b80630130b3e0146200073b57806301ffc9a714620008d657806304fce015146200093e5780630775cb0014620009625780630cb61b3414620009b35780630d9bfa801462000a3b575b600080fd5b620008d4600480360360c08110156200075357600080fd5b81019080803590602001906401000000008111156200077157600080fd5b8201836020820111156200078457600080fd5b80359060200191846020830284011164010000000083111715620007a757600080fd5b9091929391929390803590602001909291908035906020019092919080359060200190640100000000811115620007dd57600080fd5b820183602082011115620007f057600080fd5b803590602001918460018302840111640100000000831117156200081357600080fd5b9091929391929390803590602001906401000000008111156200083557600080fd5b8201836020820111156200084857600080fd5b803590602001918460018302840111640100000000831117156200086b57600080fd5b9091929391929390803590602001906401000000008111156200088d57600080fd5b820183602082011115620008a057600080fd5b80359060200191846001830284011164010000000083111715620008c357600080fd5b909192939192939050505062002d85565b005b6200092460048036036020811015620008ee57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050620036ac565b604051808215151515815260200191505060405180910390f35b6200094862003713565b604051808215151515815260200191505060405180910390f35b620009b1600480360360408110156200097a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200372a565b005b620009bd62003808565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620009ff578082015181840152602081019050620009e2565b50505050905090810190601f16801562000a2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000a45620039b1565b6040518082815260200191505060405180910390f35b62000a65620039be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000ab1620039e8565b6040518082815260200191505060405180910390f35b62000afc6004803603602081101562000adf57600080fd5b81019080803563ffffffff16906020019092919050505062003a0c565b005b62000b0862003ac8565b6040518082815260200191505060405180910390f35b62000b576004803603604081101562000b3657600080fd5b81019080803590602001909291908035906020019092919050505062003aec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000c206004803603604081101562000bb157600080fd5b81019080803590602001909291908035906020019064010000000081111562000bd957600080fd5b82018360208201111562000bec57600080fd5b8035906020019184600183028401116401000000008311171562000c0f57600080fd5b909192939192939050505062003b9d565b005b62000c5d6004803603604081101562000c3a57600080fd5b810190808035906020019092919080351515906020019092919050505062003cf6565b005b62000c8e6004803603602081101562000c7757600080fd5b810190808035906020019092919050505062003de9565b6040518082815260200191505060405180910390f35b62000cf36004803603604081101562000cbc57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062003e0c565b604051808215151515815260200191505060405180910390f35b62000d5c6004803603604081101562000d2557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620040b5565b005b62000d6862004193565b005b62000d996004803603602081101562000d8257600080fd5b81019080803590602001909291905050506200492a565b604051808215151515815260200191505060405180910390f35b62000de26004803603602081101562000dcb57600080fd5b81019080803590602001909291905050506200494d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000e2757808201518184015260208101905062000e0a565b505050509050019250505060405180910390f35b62000e6a6004803603602081101562000e5357600080fd5b810190808035906020019092919050505062004971565b604051808260ff1660ff16815260200191505060405180910390f35b62000eb56004803603602081101562000e9e57600080fd5b810190808035906020019092919050505062004a12565b6040518082815260200191505060405180910390f35b62000efa6004803603602081101562000ee357600080fd5b810190808035906020019092919050505062004a35565b604051808381526020018281526020019250505060405180910390f35b62000f866004803603606081101562000f2f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004ae6565b6040518082815260200191505060405180910390f35b62000fa662005011565b60405180868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101562000ffc57808201518184015260208101905062000fdf565b50505050905090810190601f1680156200102a5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156200106557808201518184015260208101905062001048565b50505050905090810190601f168015620010935780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015620010ce578082015181840152602081019050620010b1565b50505050905090810190601f168015620010fc5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6200118d600480360360208110156200112857600080fd5b81019080803590602001906401000000008111156200114657600080fd5b8201836020820111156200115957600080fd5b803590602001918460018302840111640100000000831117156200117c57600080fd5b90919293919293905050506200520d565b005b620011be60048036036020811015620011a757600080fd5b8101908080359060200190929190505050620053dc565b005b620011ca62005478565b6040518082815260200191505060405180910390f35b6200125d60048036036020811015620011f857600080fd5b81019080803590602001906401000000008111156200121657600080fd5b8201836020820111156200122957600080fd5b803590602001918460018302840111640100000000831117156200124c57600080fd5b90919293919293905050506200549c565b005b620012a4600480360360208110156200127757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200566b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620012f0620056d7565b6040518082815260200191505060405180910390f35b62001310620056e7565b604051808260ff1660ff16815260200191505060405180910390f35b6200135b600480360360208110156200134457600080fd5b810190808035906020019092919050505062005713565b005b6200138f600480360360208110156200137557600080fd5b81019080803560ff16906020019092919050505062005722565b005b6200139b62005972565b604051808260ff1660ff16815260200191505060405180910390f35b620013c162005995565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b6200142860048036036020811015620013fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620059af565b6040518082815260200191505060405180910390f35b6200146d600480360360208110156200145657600080fd5b810190808035906020019092919050505062005ab2565b60405180861515151581526020018515151515815260200184151515158152602001831515151581526020018281526020019550505050505060405180910390f35b6200153660048036036040811015620014c757600080fd5b810190808035906020019092919080359060200190640100000000811115620014ef57600080fd5b8201836020820111156200150257600080fd5b803590602001918460208302840111640100000000831117156200152557600080fd5b909192939192939050505062005b8e565b005b62001587600480360360408110156200155057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005c25565b005b620015b860048036036020811015620015a157600080fd5b810190808035906020019092919050505062005d68565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001681600480360360408110156200161257600080fd5b8101908080359060200190929190803590602001906401000000008111156200163a57600080fd5b8201836020820111156200164d57600080fd5b803590602001918460208302840111640100000000831117156200167057600080fd5b909192939192939050505062005dbf565b005b62001710600480360360c08110156200169b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005e56565b005b6200171c6200647b565b6040518082815260200191505060405180910390f35b62001761600480360360208110156200174a57600080fd5b81019080803590602001909291905050506200649f565b005b6200176d620064ae565b6040518082815260200191505060405180910390f35b6200178d620064b4565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620017d2578082015181840152602081019050620017b5565b505050509050019250505060405180910390f35b620017f06200650e565b6040518082815260200191505060405180910390f35b6200183f600480360360408110156200181e57600080fd5b81019080803590602001909291908035906020019092919050505062006514565b005b6200184b620065fd565b005b6200185762006b28565b6040518082600360200280838360005b838110156200188457808201518184015260208101905062001867565b5050505090500191505060405180910390f35b620018a162006b9d565b604051808260ff1660ff16815260200191505060405180910390f35b6200192360048036036060811015620018d557600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505062006bc9565b6040518082815260200191505060405180910390f35b62001968600480360360208110156200195157600080fd5b810190808035906020019092919050505062006c43565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620019b462006c9a565b6040518082815260200191505060405180910390f35b62001a0f60048036036020811015620019e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006ca7565b604051808215151515815260200191505060405180910390f35b62001a3362006db0565b6040518082815260200191505060405180910390f35b62001a8e6004803603602081101562001a6157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006dd4565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390f35b62001b276004803603602081101562001afa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006edc565b005b62001b3362007339565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001bae6004803603604081101562001b8d57600080fd5b81019080803590602001909291908035906020019092919050505062007444565b005b62001bba6200752d565b604051808215151515815260200191505060405180910390f35b62001bde62007544565b005b62001bea6200761e565b6040518082815260200191505060405180910390f35b62001c0a62007668565b6040518082600781111562001c1b57fe5b60ff16815260200191505060405180910390f35b62001cb66004803603604081101562001c4757600080fd5b81019080803590602001909291908035906020019064010000000081111562001c6f57600080fd5b82018360208201111562001c8257600080fd5b8035906020019184602083028401116401000000008311171562001ca557600080fd5b909192939192939050505062007f61565b005b62001d0b6004803603608081101562001cd057600080fd5b810190808035906020019092919080351515906020019092919080351515906020019092919080351515906020019092919050505062007ff8565b005b62001d5c6004803603604081101562001d2557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506200836e565b604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b62001dbd62008400565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001dff57808201518184015260208101905062001de2565b50505050905090810190601f16801562001e2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62001e8a6004803603604081101562001e5357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620085a9565b005b62001ebb6004803603602081101562001ea457600080fd5b810190808035906020019092919050505062008eba565b6040518082815260200191505060405180910390f35b62001f026004803603602081101562001ee957600080fd5b8101908080351515906020019092919050505062008f06565b005b62001f0e6200973a565b6040518082815260200191505060405180910390f35b62001f736004803603604081101562001f3c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200975e565b005b62001f7f62009fb0565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6200216c600480360360e081101562001feb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200206957600080fd5b8201836020820111156200207c57600080fd5b803590602001918460018302840111640100000000831117156200209f57600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115620020cd57600080fd5b820183602082011115620020e057600080fd5b803590602001918460208302840111640100000000831117156200210357600080fd5b9091929391929390803590602001906401000000008111156200212557600080fd5b8201836020820111156200213857600080fd5b803590602001918460208302840111640100000000831117156200215b57600080fd5b90919293919293905050506200a0aa565b005b620021786200b4ee565b005b620021846200b83b565b005b620021b5600480360360208110156200219e57600080fd5b81019080803590602001909291905050506200b917565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62002226600480360360208110156200220f57600080fd5b81019080803590602001909291905050506200b959565b005b62002257600480360360208110156200224057600080fd5b81019080803590602001909291905050506200b963565b005b62002288600480360360208110156200227157600080fd5b81019080803590602001909291905050506200ba90565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620022ca578082015181840152602081019050620022ad565b50505050905090810190601f168015620022f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200234b600480360360208110156200231e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200bab3565b6040518082815260200191505060405180910390f35b6200236b6200baff565b6040518082815260200191505060405180910390f35b620023b0600480360360208110156200239957600080fd5b81019080803590602001909291905050506200bb23565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620023f5578082015181840152602081019050620023d8565b505050509050019250505060405180910390f35b620024136200bb47565b6040518082815260200191505060405180910390f35b620024336200bb54565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b620024b6600480360360208110156200249f57600080fd5b81019080803590602001909291905050506200bb9e565b6040518082815260200191505060405180910390f35b620024d66200bbc1565b6040518082815260200191505060405180910390f35b62002665600480360360c08110156200250457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200256257600080fd5b8201836020820111156200257557600080fd5b803590602001918460018302840111640100000000831117156200259857600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115620025c657600080fd5b820183602082011115620025d957600080fd5b80359060200191846020830284011164010000000083111715620025fc57600080fd5b9091929391929390803590602001906401000000008111156200261e57600080fd5b8201836020820111156200263157600080fd5b803590602001918460208302840111640100000000831117156200265457600080fd5b90919293919293905050506200bc0b565b005b620026716200beab565b005b620026c2600480360360408110156200268b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200c5fc565b005b6200274b60048036036040811015620026dc57600080fd5b8101908080359060200190929190803590602001906401000000008111156200270457600080fd5b8201836020820111156200271757600080fd5b803590602001918460208302840111640100000000831117156200273a57600080fd5b90919293919293905050506200cf13565b005b6200277c600480360360208110156200276557600080fd5b81019080803590602001909291905050506200cfaa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620027c1578082015181840152602081019050620027a4565b505050509050019250505060405180910390f35b620027df6200d089565b604051808260ff1660ff16815260200191505060405180910390f35b620028056200d0b4565b6040518082815260200191505060405180910390f35b6200284a600480360360208110156200283357600080fd5b81019080803590602001909291905050506200d0ba565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200288f57808201518184015260208101905062002872565b505050509050019250505060405180910390f35b620028dc60048036036040811015620028bb57600080fd5b8101908080359060200190929190803590602001909291905050506200d0de565b005b6200290d60048036036020811015620028f657600080fd5b81019080803590602001909291905050506200d1c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62002994600480360360208110156200296757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200d1ea565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b62002a6460048036036040811015620029f557600080fd5b81019080803590602001909291908035906020019064010000000081111562002a1d57600080fd5b82018360208201111562002a3057600080fd5b8035906020019184602083028401116401000000008311171562002a5357600080fd5b90919293919293905050506200d29c565b005b62002a706200d333565b6040518082815260200191505060405180910390f35b62002a906200d357565b6040518082815260200191505060405180910390f35b62002b236004803603602081101562002abe57600080fd5b810190808035906020019064010000000081111562002adc57600080fd5b82018360208201111562002aef57600080fd5b8035906020019184600183028401116401000000008311171562002b1257600080fd5b90919293919293905050506200d3a1565b005b62002b2f6200d570565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562002b7157808201518184015260208101905062002b54565b50505050905090810190601f16801562002b9f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62002bb76200d719565b604051808215151515815260200191505060405180910390f35b62002bdb6200d730565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62002c276200d75a565b6040518082815260200191505060405180910390f35b62002c6c6004803603602081101562002c5557600080fd5b81019080803590602001909291905050506200d77e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562002cb157808201518184015260208101905062002c94565b505050509050019250505060405180910390f35b62002cf46004803603602081101562002cdd57600080fd5b81019080803590602001909291905050506200d7a2565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008c8c90501462002db06200d8cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002e1357808201518184015260208101905062002df6565b50505050905090810190601f16801562002e415780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d73000000815250602001848103825260388152602001806201209d603891396040019550505050505060006040518083038186803b15801562002eae57600080fd5b505af415801562002ec3573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b8b90508a1162002ef16200d8cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002f5457808201518184015260208101905062002f37565b50505050905090810190601f16801562002f825780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d730000008152506020018481038252604b815260200180620119c1604b91396060019550505050505060006040518083038186803b15801562002fef57600080fd5b505af415801562003004573d6000803e3d6000fd5b5050505086600c81905550898960139190620030229291906200fe40565b50876011819055508585600e91906200303d9291906200fee5565b508383600f9190620030519291906200fee5565b50818160109190620030659291906200fee5565b5062003070620065fd565b3073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045787069726174696f6e204461746500000000000000600c546040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015620030ee57600080fd5b505af115801562003103573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c204f70656e7320417400000000000000000000000000000000600e6040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620031e85780601f10620031bc57610100808354040283529160200191620031e8565b820191906000526020600020905b815481529060010190602001808311620031ca57829003601f168201915b50509350505050600060405180830381600087803b1580156200320a57600080fd5b505af11580156200321f573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c20436c6f736573204174000000000000000000000000000000600f6040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620033045780601f10620032d85761010080835404028352916020019162003304565b820191906000526020600020905b815481529060010190602001808311620032e657829003601f168201915b50509350505050600060405180830381600087803b1580156200332657600080fd5b505af11580156200333b573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f457874656e642045787069726174696f6e20427900000000000000000000000060106040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620034205780601f10620033f45761010080835404028352916020019162003420565b820191906000526020600020905b8154815290600101906020018083116200340257829003601f168201915b50509350505050600060405180830381600087803b1580156200344257600080fd5b505af115801562003457573d6000803e3d6000fd5b505050507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fa4607fdd9293c6f4b8b00c658e9537cb8c9962323efb992b43517d29d462fff730600c54601154600e600f6010604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018060200180602001806020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156200357d5780601f1062003551576101008083540402835291602001916200357d565b820191906000526020600020905b8154815290600101906020018083116200355f57829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620036045780601f10620035d85761010080835404028352916020019162003604565b820191906000526020600020905b815481529060010190602001808311620035e657829003601f168201915b50508481038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156200368b5780601f106200365f576101008083540402835291602001916200368b565b820191906000526020600020905b8154815290600101906020018083116200366d57829003601f168201915b5050995050505050505050505060405180910390a250505050505050505050565b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000601260019054906101000a900460ff16905090565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__63147abb7d9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b158015620037c657600080fd5b505af4158015620037db573d6000803e3d6000fd5b505050506040513d6020811015620037f257600080fd5b8101908080519060200190929190505050505050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e7369676e61747572654c6f670000000000000000000000008152506014019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b158015620038ab57600080fd5b505af4158015620038c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015620038eb57600080fd5b81019080805160405193929190846401000000008211156200390c57600080fd5b838201915060208201858111156200392357600080fd5b82518660018202830111640100000000821117156200394157600080fd5b8083526020830192505050908051906020019080838360005b83811015620039775780820151818401526020810190506200395a565b50505050905090810190601f168015620039a55780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601c80549050905090565b6000601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f41475245454d454e545f53544154455f4348414e47454400000000000000000081565b80601660156101000a81548163ffffffff021916908363ffffffff1602179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f9d21ab71e7e84fe89b2022ff8e6cc1ead2cbe7be8a637907ef2279d4b4d19bb43083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a250565b7f41677265656d656e74204566666563746976652044617465000000000000000081565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff16801562003b37575081601d600085815260200190815260200160002060000180549050115b1562003b9257601d6000848152602001908152602001600020600001828154811062003b5f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062003b97565b600090505b92915050565b62003ba76200ff6c565b8381600001818152505062003bbb6200d90a565b816020019060ff16908160ff168152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816060018190525062003c2f8160036200d91390919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007fddc3e5bf46fc6e7ffe2506d0f0dcba0625f68e6db07bf879110ea3419e47bc2930868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a250505050565b62003d006200ff6c565b8281600001818152505062003d146200e203565b816020019060ff16908160ff16815250508181604001901515908115158152505062003d4b8160036200d91390919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4000be176d38d7c89b64ced66d386475db613bf81ddc0f1e78d0fe91585cee3f308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a2505050565b600062003e018260036200e20c90919063ffffffff16565b60e001519050919050565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff1615620040af57601d600084815260200190815260200160002060010160009054906101000a900460ff1662003f09576000601d60008581526020019081526020016000206000018054905011801562003f0357508173ffffffffffffffffffffffffffffffffffffffff16601d600085815260200190815260200160002060000160008154811062003ec057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b620040ac565b601d600084815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801562003fa157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003f56575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015620040495780820151818401526020810190506200402c565b50505050905001935050505060206040518083038186803b1580156200406e57600080fd5b505af415801562004083573d6000803e3d6000fd5b505050506040513d60208110156200409a57600080fd5b81019080805190602001909291905050505b90505b92915050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__6357b1a3fb9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b1580156200415157600080fd5b505af415801562004166573d6000803e3d6000fd5b505050506040513d60208110156200417d57600080fd5b8101908080519060200190929190505050505050565b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156200421157600080fd5b505af415801562004226573d6000803e3d6000fd5b505050506040513d60408110156200423d57600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620042b46200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562004317578082015181840152602081019050620042fa565b50505050905090810190601f168015620043455780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f44656661756c7441637469766541677265656d656e742e7369676e28290000008152506020018481038252602481526020018062011be9602491396040019550505050505060006040518083038186803b158015620043b257600080fd5b505af4158015620043c7573d6000803e3d6000fd5b505050506000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415620049265781601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a273__$4bfedefce7d76215a620e01b46747fdc01$__6306fb063b306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200464f57600080fd5b505af415801562004664573d6000803e3d6000fd5b505050506040513d60208110156200467b57600080fd5b81019080805190602001909291905050501562004925576000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e019050604051602081830303815290604052805190602001208152602001908152602001600020600001805490501415620047d6576002601660196101000a81548160ff021916908360078111156200471b57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200477f57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a25b60003073ffffffffffffffffffffffffffffffffffffffff1663e2be8fe17f41677265656d656e7420456666656374697665204461746500000000000000006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200484a57600080fd5b505afa1580156200485f573d6000803e3d6000fd5b505050506040513d60208110156200487657600080fd5b8101908080519060200190929190505050141562004924573073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045666665637469766520446174650000000000000000426040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200490a57600080fd5b505af11580156200491f573d6000803e3d6000fd5b505050505b5b5b5050565b6000620049428260036200e20c90919063ffffffff16565b604001519050919050565b6060620049658260036200e20c90919063ffffffff16565b61020001519050919050565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__635db8e8dd9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015620049ce57600080fd5b505af4158015620049e3573d6000803e3d6000fd5b505050506040513d6020811015620049fa57600080fd5b81019080805190602001909291905050509050919050565b600062004a2a8260036200e20c90919063ffffffff16565b608001519050919050565b600080600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63dfabdf469091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801562004a9257600080fd5b505af415801562004aa7573d6000803e3d6000fd5b505050506040513d604081101562004abe57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000808484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001209050600060056000838152602001908152602001600020600101600101541462004b8e5760056000828152602001908152602001600020600101600101549150506200500a565b6005600082815260200190815260200160002060010160020160020160149054906101000a900460ff161562004fe557600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562004d9c5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161462004c846200d8cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562004ce757808201518184015260208101905062004cca565b50505050905090810190601f16801562004d155780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e67657453636f706500008152506020018481038252606581526020018062011f6d606591396080019550505050505060006040518083038186803b15801562004d8257600080fd5b505af415801562004d97573d6000803e3d6000fd5b505050505b6000806005600084815260200190815260200160002060010160020173__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__631dcb1e9a9091876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b15801562004e3c57600080fd5b505af415801562004e51573d6000803e3d6000fd5b505050506040513d604081101562004e6857600080fd5b8101908080519060200190929190805190602001909291905050509150915060008273ffffffffffffffffffffffffffffffffffffffff16632512e6f1836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562004edb57600080fd5b505afa15801562004ef0573d6000803e3d6000fd5b505050506040513d602081101562004f0757600080fd5b8101908080519060200190929190505050141562004f4b577f454d5054595f53434f504500000000000000000000000000000000000000000093505050506200500a565b8173ffffffffffffffffffffffffffffffffffffffff16632512e6f1826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562004f9d57600080fd5b505afa15801562004fb2573d6000803e3d6000fd5b505050506040513d602081101562004fc957600080fd5b810190808051906020019092919050505093505050506200500a565b7f454d5054595f53434f50450000000000000000000000000000000000000000009150505b9392505050565b60008060608060606011549450600c549350600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620050bd5780601f106200509157610100808354040283529160200191620050bd565b820191906000526020600020905b8154815290600101906020018083116200509f57829003601f168201915b50505050509250600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200515e5780601f1062005132576101008083540402835291602001916200515e565b820191906000526020600020905b8154815290600101906020018083116200514057829003601f168201915b5050505050915060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620051ff5780601f10620051d357610100808354040283529160200191620051ff565b820191906000526020600020905b815481529060010190602001808311620051e157829003601f168201915b505050505090509091929394565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d65746572730000000000000081525060190190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b158015620052e257600080fd5b505af4158015620052f7573d6000803e3d6000fd5b505050506040513d60208110156200530e57600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fc9690fead6289b57dc690e1c50cd5960bb3ec3d16c01dc445e9059d7c05a27c4308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63924e39759091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200543757600080fd5b505af41580156200544c573d6000803e3d6000fd5b505050506040513d60208110156200546357600080fd5b81019080805190602001909291905050505050565b7f414e3a2f2f61677265656d656e7473000000000000000000000000000000000081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e6576656e744c6f670000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200557157600080fd5b505af415801562005586573d6000803e3d6000fd5b505050506040513d60208110156200559d57600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fa59f1bdf986536320b730fb73d7d2707eb7b8312a743e1bdc144f0d785572683308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360010180549050905090565b60006002600060038110620056f857fe5b602091828204019190069054906101000a900460ff16905090565b6200571f81336200372a565b50565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6200578f833362003e0c565b156200579a6200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620057fd578082015181840152602081019050620057e0565b50505050905090810190601f1680156200582b5780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011875602b91396040018481038252603481526020018062011961603491396040019550505050505060006040518083038186803b1580156200587c57600080fd5b505af415801562005891573d6000803e3d6000fd5b5050505081601660196101000a81548160ff02191690836007811115620058b457fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200591857fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a25050565b6000601660199054906101000a900460ff1660078111156200599057fe5b905090565b6000601660159054906101000a900463ffffffff16905090565b600062005aab600260038060200260405190810160405280929190826003801562005a16576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620059de5790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801562005a6257600080fd5b505afa15801562005a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101562005a9d57600080fd5b81019080919050506200f10f565b9050919050565b6000806000806000601d600087815260200190815260200160002060010160039054906101000a900460ff169450841562005b7657601d600087815260200190815260200160002060010160009054906101000a900460ff169350601d600087815260200190815260200160002060010160019054906101000a900460ff169250601d600087815260200190815260200160002060010160029054906101000a900460ff169150601d60008781526020019081526020016000206000018054905090505b84848484849450945094509450945091939590929450565b62005b986200ff6c565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610120018190525062005bf76200f1d2565b816020019060ff16908160ff168152505062005c1e8160036200d91390919063ffffffff16565b5050505050565b62005c2f6200ff6c565b8281600001818152505062005c436200f1db565b816020019060ff16908160ff1681525050818160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505062005ca28160036200d91390919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f5f3782aabdded4c30d0e717eefa344f09585650af94f12a59e413c35c874aa6e308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b600060138054905082101562005db9576013828154811062005d8657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062005dba565b5b919050565b62005dc96200ff6c565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102c0018190525062005e286200f1e4565b816020019060ff16908160ff168152505062005e4f8160036200d91390919063ffffffff16565b5050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161462005eaa6200f1ed565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562005f0d57808201518184015260208101905062005ef0565b50505050905090810190601f16801562005f3b5780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603581526020018062012038603591396040019550505050505060006040518083038186803b15801562005fa857600080fd5b505af415801562005fbd573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008614801562005fec5750600085145b62005ff66200d8cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620060595780820151818401526020810190506200603c565b50505050905090810190601f168015620060875780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603681526020018062011b8a603691396040019550505050505060006040518083038186803b158015620060f457600080fd5b505af415801562006109573d6000803e3d6000fd5b5050505060008686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506005600082815260200190815260200160002060000160149054906101000a900460ff16620061c55760068190806001815401808255809150509060018203906000526020600020016000909192909190915055505b866005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600560008381526020019081526020016000206001016000018190555060008514620062655784600560008381526020019081526020016000206001016001018190555062006337565b60405180608001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060056000838152602001908152602001600020600101600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b60016005600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507f414e3a2f2f656e7469746965732f616464726573732d73636f706573000000007f757fff527744f487d9c9ec5df491336680ef60eccf50f97a494eb216e66725b930898989898989604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a250505050505050565b7f414e3a2f2f61677265656d656e742d746f2d706172747900000000000000000081565b620064ab8133620040b5565b50565b60095481565b606060068054806020026020016040519081016040528092919081815260200182805480156200650457602002820191906000526020600020905b815481526020019060010190808311620064ef575b5050505050905090565b60085481565b6200651e6200ff6c565b82816000018181525050620065326200f22a565b816020019060ff16908160ff1681525050818160a0018181525050620065638160036200d91390919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4fae6699eb0f881c4f8df1e7d66305898984bd24cb684f775238368f1d77acd3308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff16620066316200f23b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200669457808201518184015260208101905062006677565b50505050905090810190601f168015620066c25780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f416273747261637452656e657761626c652e7265736574566f746573282900008152506020018481038252602f81526020018062011ced602f91396040019550505050505060006040518083038186803b1580156200672f57600080fd5b505af415801562006744573d6000803e3d6000fd5b5050505060008090505b60138054905081101562006b1b576000601382815481106200676c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f76c512528b3348a170fce985b7603a2ba143bdf1e4645153b4d2952e99573e093083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a25080806001019150506200674e565b5062006b266200f278565b565b62006b3262010081565b600260038060200260405190810160405280929190826003801562006b93576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841162006b5b5790505b5050505050905090565b6000600260016003811062006bae57fe5b602091828204019190069054906101000a900460ff16905090565b600062006c3c600260038060200260405190810160405280929190826003801562006c30576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841162006bf85790505b5050505050836200f10f565b9050919050565b6000601b8054905082101562006c9457601b828154811062006c6157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062006c95565b5b919050565b6000601b80549050905090565b600080600090505b601b8054905081101562006da5578273ffffffffffffffffffffffffffffffffffffffff1660196000601b848154811062006ce657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562006d9757600191505062006dab565b808060010191505062006caf565b50600090505b919050565b7f41475245454d454e545f5041525449455300000000000000000000000000000081565b6000806000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169150601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490509193909250565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160039054906101000a900460ff1662006f6a6200f3f8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562006fcd57808201518184015260208101905062006fb0565b50505050905090810190601f16801562006ffb5780820380516001836020036101000a031916815260200191505b508481038352603281526020018062011eb9603291396040018481038252603f81526020018062011b27603f91396040019550505050505060006040518083038186803b1580156200704c57600080fd5b505af415801562007061573d6000803e3d6000fd5b50505050601d600060405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208152602001908152602001600020600001600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620070fd5781620070ff565b335b90806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555050565b600080601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000018054905011620073aa5760006200743f565b601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000016000815481106200741357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905090565b6200744e6200ff6c565b82816000018181525050620074626200f435565b816020019060ff16908160ff1681525050818160e0018181525050620074938160036200d91390919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f175284be8d23ffeaff64148e54dddf392131e21bde39e27d34c23925799a9d3b308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b6000601260009054906101000a900460ff16905090565b601260009054906101000a900460ff166200761c576001601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f38afd8082def1261a99c6531cd2d0f21a60d79baec07015b980d61457b75243430601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a25b565b60405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6007808111156200769157fe5b601660199054906101000a900460ff166007811115620076ad57fe5b14620076b86200d8cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200771b578082015181840152602081019050620076fe565b50505050905090810190601f168015620077495780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602a81526020018062011e8f602a91396040019550505050505060006040518083038186803b158015620077b657600080fd5b505af4158015620077cb573d6000803e3d6000fd5b5050505060003073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b1580156200781857600080fd5b505afa1580156200782d573d6000803e3d6000fd5b505050506040513d60208110156200784457600080fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050801580156200799d575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b8783620078b96200f43e565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b1580156200795f57600080fd5b505af415801562007974573d6000803e3d6000fd5b505050506040513d60208110156200798b57600080fd5b81019080805190602001909291905050505b1562007a89578173ffffffffffffffffffffffffffffffffffffffff1663ddc5dd51336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001807f454d5054595f53434f504500000000000000000000000000000000000000000081525060200191505060206040518083038186803b15801562007a4957600080fd5b505afa15801562007a5e573d6000803e3d6000fd5b505050506040513d602081101562007a7557600080fd5b810190808051906020019092919050505090505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef821562007aaf6200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007b1257808201518184015260208101905062007af5565b50505050905090810190601f16801562007b405780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602e81526020018062011a38602e91396040019550505050505060006040518083038186803b15801562007bad57600080fd5b505af415801562007bc2573d6000803e3d6000fd5b5050505060006005600781111562007bd657fe5b601660199054906101000a900460ff16600781111562007bf257fe5b1415801562007c2957506003600781111562007c0a57fe5b601660199054906101000a900460ff16600781111562007c2657fe5b14155b801562007c5e57506004600781111562007c3f57fe5b601660199054906101000a900460ff16600781111562007c5b57fe5b14155b9050801562007db65773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000601b805490501162007c946200f51c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007cf757808201518184015260208101905062007cda565b50505050905090810190601f16801562007d255780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252604d81526020018062011a66604d91396060019550505050505060006040518083038186803b15801562007d9257600080fd5b505af415801562007da7573d6000803e3d6000fd5b5050505062007db56200f559565b5b6007601660196101000a81548160ff0219169083600781111562007dd657fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff16600781111562007e3a57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a262007ebc7f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f661565b7f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f24b79a501d8660d52a906ddc5071c1494af214a1443ba687072557c16ef96142600030604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2601660199054906101000a900460ff16935050505090565b62007f6b6200ff6c565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081610200018190525062007fca6200f78f565b816020019060ff16908160ff168152505062007ff18160036200d91390919063ffffffff16565b5050505050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62008065833362003e0c565b15620080706200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620080d3578082015181840152602081019050620080b6565b50505050905090810190601f168015620081015780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011875602b91396040018481038252603481526020018062011961603491396040019550505050505060006040518083038186803b1580156200815257600080fd5b505af415801562008167573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600088815260200190815260200160002060010160039054906101000a900460ff16620081b36200f798565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008216578082015181840152602081019050620081f9565b50505050905090810190601f168015620082445780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011e6a6025913960400184810382526034815260200180620120d5603491396040019550505050505060006040518083038186803b1580156200829557600080fd5b505af4158015620082aa573d6000803e3d6000fd5b5050505083601d600087815260200190815260200160002060010160006101000a81548160ff02191690831515021790555082601d600087815260200190815260200160002060010160016101000a81548160ff02191690831515021790555081601d600087815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600087815260200190815260200160002060010160036101000a81548160ff0219169083151502179055505050505050565b600080600080620083dc8686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001206200d7a2565b90919293945090919293508094508195508296508397505050505092959194509250565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b158015620084a357600080fd5b505af4158015620084b8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015620084e357600080fd5b81019080805160405193929190846401000000008211156200850457600080fd5b838201915060208201858111156200851b57600080fd5b82518660018202830111640100000000821117156200853957600080fd5b8083526020830192505050908051906020019080838360005b838110156200856f57808201518184015260208101905062008552565b50505050905090810190601f1680156200859d5780820380516001836020036101000a031916815260200191505b50604052505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156200864f57506200864d60405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001203362003e0c565b155b620086596200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620086bc5780820151818401526020810190506200869f565b50505050905090810190601f168015620086ea5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011d51602591396040018481038252603481526020018062011961603491396040019550505050505060006040518083038186803b1580156200873b57600080fd5b505af415801562008750573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff16156200879d6200f7d5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008800578082015181840152602081019050620087e3565b50505050905090810190601f1680156200882e5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011d516025913960400184810382526039815260200180620117ff603991396040019550505050505060006040518083038186803b1580156200887f57600080fd5b505af415801562008894573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160019054906101000a900460ff1615620088e16200f51c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200894457808201518184015260208101905062008927565b50505050905090810190601f168015620089725780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011d51602591396040018481038252602981526020018062011bc0602991396040019550505050505060006040518083038186803b158015620089c357600080fd5b505af4158015620089d8573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208414801562008aab57506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b62008ab56200f51c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008b1857808201518184015260208101905062008afb565b50505050905090810190601f16801562008b465780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011d51602591396040018481038252602d81526020018062011e3d602d91396040019550505050505060006040518083038186803b15801562008b9757600080fd5b505af415801562008bac573d6000803e3d6000fd5b50505050600080600090505b601d60008581526020019081526020016000206000018054905081101562008d67578273ffffffffffffffffffffffffffffffffffffffff16601d6000868152602001908152602001600020600001828154811062008c1357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562008d59576001915060008190505b6001601d6000878152602001908152602001600020600001805490500381101562008d5257601d6000868152602001908152602001600020600001600182018154811062008caf57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601d6000878152602001908152602001600020600001828154811062008cfc57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808060010191505062008c65565b5062008d67565b808060010191505062008bb8565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef821562008d8e6200f7d5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008df157808201518184015260208101905062008dd4565b50505050905090810190601f16801562008e1f5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011d5160259139604001848103825260308152602001806201206d603091396040019550505050505060006040518083038186803b15801562008e7057600080fd5b505af415801562008e85573d6000803e3d6000fd5b50505050601d600084815260200190815260200160002060000180548091906001900362008eb49190620100a3565b50505050565b60007f41475245454d454e545f5041525449455300000000000000000000000000000082141562008ef357601b80549050905062008f01565b62008efe826200f812565b90505b919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff161562008f3b6200f23b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008f9e57808201518184015260208101905062008f81565b50505050905090810190601f16801562008fcc5780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252602381526020018062011df9602391396040019550505050505060006040518083038186803b1580156200903957600080fd5b505af41580156200904e573d6000803e3d6000fd5b5050505060008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015620090d057600080fd5b505af4158015620090e5573d6000803e3d6000fd5b505050506040513d6040811015620090fc57600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620091736200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620091d6578082015181840152602081019050620091b9565b50505050905090810190601f168015620092045780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252603081526020018062011f0e603091396040019550505050505060006040518083038186803b1580156200927157600080fd5b505af415801562009286573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615620092ff6200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200936257808201518184015260208101905062009345565b50505050905090810190601f168015620093905780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252604281526020018062011ab3604291396060019550505050505060006040518083038186803b158015620093fd57600080fd5b505af415801562009412573d6000803e3d6000fd5b5050505081601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555042601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f51b47958068fc9bea1acf9a821d66c2e1bd06eb6261035948b9185300cbcac5b3083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a2620097356200f278565b505050565b7f414e3a2f2f656e7469746965732f616464726573732d73636f7065730000000081565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef620097cb833362003e0c565b15620097d66200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620098395780820151818401526020810190506200981c565b50505050905090810190601f168015620098675780820380516001836020036101000a031916815260200191505b508481038352602b81526020018062011875602b91396040018481038252603481526020018062011961603491396040019550505050505060006040518083038186803b158015620098b857600080fd5b505af4158015620098cd573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600086815260200190815260200160002060010160039054906101000a900460ff16156200991a6200f7d5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200997d57808201518184015260208101905062009960565b50505050905090810190601f168015620099ab5780820380516001836020036101000a031916815260200191505b5084810383526024815260200180620117db6024913960400184810382526039815260200180620117ff603991396040019550505050505060006040518083038186803b158015620099fc57600080fd5b505af415801562009a11573d6000803e3d6000fd5b50505050601d600084815260200190815260200160002060010160009054906101000a900460ff161562009c6757601d600084815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801562009ad757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162009a8c575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b8381101562009b7f57808201518184015260208101905062009b62565b50505050905001935050505060206040518083038186803b15801562009ba457600080fd5b505af415801562009bb9573d6000803e3d6000fd5b505050506040513d602081101562009bd057600080fd5b810190808051906020019092919050505062009c6157601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b62009fab565b6000601d600085815260200190815260200160002060000180549050141562009d0a57601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062009faa565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369962009d2e6200f3f8565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562009d8757808201518184015260208101905062009d6a565b50505050905090810190601f16801562009db55780820380516001836020036101000a031916815260200191505b5084810383526024815260200180620117db60249139604001848103825260838152602001806201172c6083913960a00194505050505060006040518083038186803b15801562009e0557600080fd5b505af415801562009e1a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562009e4557600080fd5b810190808051604051939291908464010000000082111562009e6657600080fd5b8382019150602082018581111562009e7d57600080fd5b825186600182028301116401000000008211171562009e9b57600080fd5b8083526020830192505050908051906020019080838360005b8381101562009ed157808201518184015260208101905062009eb4565b50505050905090810190601f16801562009eff5780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562009f6e57808201518184015260208101905062009f51565b50505050905090810190601f16801562009f9c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b505050565b60405160200180807f6765744164647265737353636f70654b657973282900000000000000000000008152506015019050604051602081830303815290604052805190602001206040516020018080620121aa60259139602501905060405160208183030381529060405280519060200120604051602001808062011d9d60279139602701905060405160208183030381529060405280519060200120604051602001808062011a0c602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011c33604091396040019050604051602081830303815290604052805190602001201818181881565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900460ff166200a0de6200f51c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a1415780820151818401526020810190506200a124565b50505050905090810190601f1680156200a16f5780820380516001836020036101000a031916815260200191505b508481038352602a81526020018062011702602a91396040018481038252602981526020018062011938602991396040019550505050505060006040518083038186803b1580156200a1c057600080fd5b505af41580156200a1d5573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16146200a22d6200f1ed565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a2905780820151818401526020810190506200a273565b50505050905090810190601f1680156200a2be5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062012189602191396040018481038252602e8152602001806201215b602e91396040019550505050505060006040518083038186803b1580156200a30f57600080fd5b505af41580156200a324573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146200a37c6200f1ed565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a3df5780820151818401526020810190506200a3c2565b50505050905090810190601f1680156200a40d5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062012189602191396040018481038252602c815260200180620117af602c91396040019550505050505060006040518083038186803b1580156200a45e57600080fd5b505af41580156200a473573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16146200a4cb6200f1ed565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a52e5780820151818401526020810190506200a511565b50505050905090810190601f1680156200a55c5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062012189602191396040018481038252602381526020018062011eeb602391396040019550505050505060006040518083038186803b1580156200a5ad57600080fd5b505af41580156200a5c2573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b73ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200a62757600080fd5b505afa1580156200a63c573d6000803e3d6000fd5b505050506040513d60208110156200a65357600080fd5b8101908080519060200190929190505050156200a66f6200f23b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a6d25780820151818401526020810190506200a6b5565b50505050905090810190601f1680156200a7005780820380516001836020036101000a031916815260200191505b50848103835260218152602001806201218960219139604001848103825260188152602001807f417263686574797065206d7573742062652061637469766500000000000000008152506020019550505050505060006040518083038186803b1580156200a76d57600080fd5b505af41580156200a782573d6000803e3d6000fd5b505050506200a8f5828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b73ffffffffffffffffffffffffffffffffffffffff1663a1da76d96040518163ffffffff1660e01b815260040160006040518083038186803b1580156200a81357600080fd5b505afa1580156200a828573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200a85357600080fd5b81019080805160405193929190846401000000008211156200a87457600080fd5b838201915060208201858111156200a88b57600080fd5b82518660208202830111640100000000821117156200a8a957600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200a8e25780820151818401526020810190506200a8c5565b505050509050016040525050506200f8b3565b6200a9f660405160200180807f6765744164647265737353636f70654b657973282900000000000000000000008152506015019050604051602081830303815290604052805190602001206040516020018080620121aa60259139602501905060405160208183030381529060405280519060200120604051602001808062011d9d60279139602701905060405160208183030381529060405280519060200120604051602001808062011a0c602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011c3360409139604001905060405160208183030381529060405280519060200120181818186200fcc0565b89601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008787905011156200ab9957601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001208a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200ab5a57600080fd5b505af41580156200ab6f573d6000803e3d6000fd5b505050506040513d60208110156200ab8657600080fd5b8101908080519060200190929190505050505b84601660146101000a81548160ff0219169083151502179055508383601b91906200abc69291906200fe40565b508181601c91906200abda9291906200fe40565b506001601660196101000a81548160ff021916908360078111156200abfb57fe5b02179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001816200ae3f9190620100a3565b5087601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000016000815481106200aeaa57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007faf1209150c79d19135c2cbf62ba482ac99586079247aa53c0e25423693da5d1e308c8c8c8c8c8c601660199054906101000a900460ff1660078111156200b12b57fe5b601660159054906101000a900463ffffffff16604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001861515151581526020018560ff1660ff1681526020018463ffffffff1663ffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252600081526020016020019b50505050505050505050505060405180910390a260008090505b848490508110156200b3c7577f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc308787858181106200b2eb57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16600080604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a280806001019150506200b28f565b600090505b828290508110156200b4c7577f414e3a2f2f676f7665726e696e672d61677265656d656e7473000000000000007fe7a1c84892a680b6fb7a2d501b58329e31a92d1af2cd03e6b97c3e74dec3dffd308585858181106200b42857fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a280806001019150506200b3cc565b5060018060006101000a81548160ff02191690831515021790555050505050505050505050565b601260009054906101000a900460ff16156200b839576000601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fd999895ef4e74c2e812b1770fc1d6fb3b5cd235ba2acb0429f95846e6ca99a6f30601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a2601260019054906101000a900460ff16156200b8385773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000600d54146200b6066200f51c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200b6695780820151818401526020810190506200b64c565b50505050905090810190601f1680156200b6975780820380516001836020036101000a031916815260200191505b508481038352602481526020018062011b66602491396040018481038252603d81526020018062011838603d91396040019550505050505060006040518083038186803b1580156200b6e857600080fd5b505af41580156200b6fd573d6000803e3d6000fd5b50505050600d54600c819055506000600d819055503073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045787069726174696f6e204461746500000000000000600c546040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200b79057600080fd5b505af11580156200b7a5573d6000803e3d6000fd5b505050507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f065060ddcc74fdb42bd83d60625128b9acef117e3fe99b8a50cdfeb0d12b791c30600c54604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a25b5b565b6003601660196101000a81548160ff021916908360078111156200b85b57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200b8bf57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a2565b6000601c82815481106200b92757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600d8190555050565b80600c819055503073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045787069726174696f6e204461746500000000000000836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200b9e657600080fd5b505af11580156200b9fb573d6000803e3d6000fd5b505050507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f065060ddcc74fdb42bd83d60625128b9acef117e3fe99b8a50cdfeb0d12b791c30600c54604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a250565b60606200baa88260036200e20c90919063ffffffff16565b606001519050919050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b7f414e3a2f2f646174612d73746f7261676500000000000000000000000000000081565b60606200bb3b8260036200e20c90919063ffffffff16565b61014001519050919050565b6000601380549050905090565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60006200bbb68260036200e20c90919063ffffffff16565b60a001519050919050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200bc2f6200f51c565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200bc885780820151818401526020810190506200bc6b565b50505050905090810190601f1680156200bcb65780820380516001836020036101000a031916815260200191505b5084810383526052815260200180620121096052913960600184810382526098815260200180620118a06098913960a00194505050505060006040518083038186803b1580156200bd0657600080fd5b505af41580156200bd1b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200bd4657600080fd5b81019080805160405193929190846401000000008211156200bd6757600080fd5b838201915060208201858111156200bd7e57600080fd5b82518660018202830111640100000000821117156200bd9c57600080fd5b8083526020830192505050908051906020019080838360005b838110156200bdd25780820151818401526020810190506200bdb5565b50505050905090810190601f1680156200be005780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200be6f5780820151818401526020810190506200be52565b50505050905090810190601f1680156200be9d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156200bf2957600080fd5b505af41580156200bf3e573d6000803e3d6000fd5b505050506040513d60408110156200bf5557600080fd5b8101908080519060200190929190805190602001909291905050509150915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146200bfc86200f0d2565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c02b5780820151818401526020810190506200c00e565b50505050905090810190601f1680156200c0595780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011e1c602191396040018481038252602681526020018062011c0d602691396040019550505050505060006040518083038186803b1580156200c0aa57600080fd5b505af41580156200c0bf573d6000803e3d6000fd5b50505050600060078111156200c0d157fe5b601660199054906101000a900460ff1660078111156200c0ed57fe5b14806200c1215750600160078111156200c10357fe5b601660199054906101000a900460ff1660078111156200c11f57fe5b145b156200c2f35781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200c1f96200f559565b7f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a26200c5f8565b600260078111156200c30157fe5b601660199054906101000a900460ff1660078111156200c31d57fe5b14156200c5f7576000601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c5f65781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a260008090505b601b805490508110156200c5f4576000601a6000601b84815481106200c55457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c5ca576200c5f4565b6001601b80549050038114156200c5e6576200c5e56200f559565b5b80806001019150506200c532565b505b5b5b5050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff16156200c6456200f7d5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c6a85780820151818401526020810190506200c68b565b50505050905090810190601f1680156200c6d65780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011d766027913960400184810382526039815260200180620117ff603991396040019550505050505060006040518083038186803b1580156200c72757600080fd5b505af41580156200c73c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160029054906101000a900460ff16156200c7896200f51c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c7ec5780820151818401526020810190506200c7cf565b50505050905090810190601f1680156200c81a5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011d76602791396040018481038252602c81526020018062011995602c91396040019550505050505060006040518083038186803b1580156200c86b57600080fd5b505af41580156200c880573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d60008581526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200c93657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200c8eb575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091856040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156200c9de5780820151818401526020810190506200c9c1565b50505050905001935050505060206040518083038186803b1580156200ca0357600080fd5b505af41580156200ca18573d6000803e3d6000fd5b505050506040513d60208110156200ca2f57600080fd5b81019080805190602001909291905050506200ca4a6200f798565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200caad5780820151818401526020810190506200ca90565b50505050905090810190601f1680156200cadb5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011d76602791396040018481038252603581526020018062011d1c603591396040019550505050505060006040518083038186803b1580156200cb2c57600080fd5b505af41580156200cb41573d6000803e3d6000fd5b5050505060008090505b601d6000848152602001908152602001600020600001805490508110156200cc6e573373ffffffffffffffffffffffffffffffffffffffff16601d600085815260200190815260200160002060000182815481106200cba657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200cc605781601d600085815260200190815260200160002060000182815481106200cc1157fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200cf0f565b80806001019150506200cb4b565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200cc936200f0d2565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200ccec5780820151818401526020810190506200cccf565b50505050905090810190601f1680156200cd1a5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011d76602791396040018481038252603581526020018062011dc46035913960400194505050505060006040518083038186803b1580156200cd6a57600080fd5b505af41580156200cd7f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200cdaa57600080fd5b81019080805160405193929190846401000000008211156200cdcb57600080fd5b838201915060208201858111156200cde257600080fd5b82518660018202830111640100000000821117156200ce0057600080fd5b8083526020830192505050908051906020019080838360005b838110156200ce365780820151818401526020810190506200ce19565b50505050905090810190601f1680156200ce645780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200ced35780820151818401526020810190506200ceb6565b50505050905090810190601f1680156200cf015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b6200cf1d6200ff6c565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161040001819052506200cf7c6200fdad565b816020019060ff16908160ff16815250506200cfa38160036200d91390919063ffffffff16565b5050505050565b60607f41475245454d454e545f504152544945530000000000000000000000000000008214156200d06657601b8054806020026020016040519081016040528092919081815260200182805480156200d05957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200d00e575b505050505090506200d084565b6200d07c8260036200e20c90919063ffffffff16565b610120015190505b919050565b6000600280600381106200d09957fe5b602091828204019190069054906101000a900460ff16905090565b60075481565b60606200d0d28260036200e20c90919063ffffffff16565b6102c001519050919050565b6200d0e86200ff6c565b828160000181815250506200d0fc6200fdb6565b816020019060ff16908160ff1681525050818160800181815250506200d12d8160036200d91390919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f07b481cbeaa4e99fd6638d014c6a9a7459f10e4fdf29e537f41d5fb037c30f35308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b60006200d1df8260036200e20c90919063ffffffff16565b60c001519050919050565b600080601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b6200d2a66200ff6c565b838160000181815250506200d2ba6200fdc7565b816020019060ff16908160ff1681525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161014001819052506200d32c8160036200d91390919063ffffffff16565b5050505050565b7f454d5054595f53434f504500000000000000000000000000000000000000000081565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e7369676e61747572654c6f6700000000000000000000000081525060140190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200d47657600080fd5b505af41580156200d48b573d6000803e3d6000fd5b505050506040513d60208110156200d4a257600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f4f5146e170ce6c18993979384e01f6a3bf0d482e0c024ff728f019e70a7a024a308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e6576656e744c6f67000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156200d61357600080fd5b505af41580156200d628573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200d65357600080fd5b81019080805160405193929190846401000000008211156200d67457600080fd5b838201915060208201858111156200d68b57600080fd5b82518660018202830111640100000000821117156200d6a957600080fd5b8083526020830192505050908051906020019080838360005b838110156200d6df5780820151818401526020810190506200d6c2565b50505050905090810190601f1680156200d70d5780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601660149054906101000a900460ff16905090565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f414e3a2f2f676f7665726e696e672d61677265656d656e74730000000000000081565b60606200d7968260036200e20c90919063ffffffff16565b61040001519050919050565b6000806000806000806005600088815260200190815260200160002060000160149054906101000a900460ff16156200d8c4576005600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169550600560008881526020019081526020016000206001016000015494506005600088815260200190815260200160002060010160010154935060056000888152602001908152602001600020600101600201600001549250600560008881526020019081526020016000206001016002016001015491506005600088815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b91939550919395565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60006002905090565b60008260000160008360000151815260200190815260200160002060000160009054906101000a900460ff16156200dd5a5781836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200d9cb929190620100d2565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200da5092919062010159565b506101208201518160080190805190602001906200da70929190620101c0565b506101408201518160090190805190602001906200da909291906201024f565b5061016082015181600a0190805190602001906200dab0929190620102fc565b5061018082015181600b0190805190602001906200dad0929190620103aa565b506101a082015181600c0190805190602001906200daf09291906201045b565b506101c082015181600d0190805190602001906200db1092919062010512565b506101e082015181600e0190805190602001906200db30929190620105d5565b5061020082015181600f0190805190602001906200db50929190620106b0565b506102208201518160100190805190602001906200db7092919062010702565b506102408201518160110190805190602001906200db90929190620107b3565b506102608201518160120190805190602001906200dbb092919062010867565b506102808201518160130190805190602001906200dbd092919062010921565b506102a08201518160140190805190602001906200dbf0929190620109e7565b506102c08201518160150190805190602001906200dc1092919062010ac5565b506102e08201518160160190805190602001906200dc3092919062010b17565b506103008201518160170190805190602001906200dc5092919062010bc5565b506103208201518160180190805190602001906200dc7092919062010c75565b506103408201518160190190805190602001906200dc9092919062010d27565b5061036082015181601a0190805190602001906200dcb092919062010ddb565b5061038082015181601b0190805190602001906200dcd092919062010e97565b506103a082015181601c0190805190602001906200dcf092919062010f63565b506103c082015181601d0190805190602001906200dd1092919062010fdf565b506103e082015181601e0190805190602001906200dd309291906201105f565b5061040082015181601f0190805190602001906200dd50929190620110e3565b509050506200e1f3565b60018360010183600001519080600181540180825580915050906001820390600052602060002001600090919290919091505503836000016000846000015181526020019081526020016000206001018190555081836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200de34929190620100d2565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200deb992919062010159565b506101208201518160080190805190602001906200ded9929190620101c0565b506101408201518160090190805190602001906200def99291906201024f565b5061016082015181600a0190805190602001906200df19929190620102fc565b5061018082015181600b0190805190602001906200df39929190620103aa565b506101a082015181600c0190805190602001906200df599291906201045b565b506101c082015181600d0190805190602001906200df7992919062010512565b506101e082015181600e0190805190602001906200df99929190620105d5565b5061020082015181600f0190805190602001906200dfb9929190620106b0565b506102208201518160100190805190602001906200dfd992919062010702565b506102408201518160110190805190602001906200dff9929190620107b3565b506102608201518160120190805190602001906200e01992919062010867565b506102808201518160130190805190602001906200e03992919062010921565b506102a08201518160140190805190602001906200e059929190620109e7565b506102c08201518160150190805190602001906200e07992919062010ac5565b506102e08201518160160190805190602001906200e09992919062010b17565b506103008201518160170190805190602001906200e0b992919062010bc5565b506103208201518160180190805190602001906200e0d992919062010c75565b506103408201518160190190805190602001906200e0f992919062010d27565b5061036082015181601a0190805190602001906200e11992919062010ddb565b5061038082015181601b0190805190602001906200e13992919062010e97565b506103a082015181601c0190805190602001906200e15992919062010f63565b506103c082015181601d0190805190602001906200e17992919062010fdf565b506103e082015181601e0190805190602001906200e1999291906201105f565b5061040082015181601f0190805190602001906200e1b9929190620110e3565b5090505060018360000160008460000151815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b8260010180549050905092915050565b60006001905090565b6200e2166200ff6c565b82600001600083815260200190815260200160002060020160405180610420016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff16151515158152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e3195780601f106200e2ed576101008083540402835291602001916200e319565b820191906000526020600020905b8154815290600101906020018083116200e2fb57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156200e47d578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e4685780601f106200e43c576101008083540402835291602001916200e468565b820191906000526020600020905b8154815290600101906020018083116200e44a57829003601f168201915b5050505050815260200190600101906200e3bb565b505050508152602001600882018054806020026020016040519081016040528092919081815260200182805480156200e50c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200e4c1575b50505050508152602001600982018054806020026020016040519081016040528092919081815260200182805480156200e58b57602002820191906000526020600020906000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116200e5545790505b50505050508152602001600a82018054806020026020016040519081016040528092919081815260200182805480156200e60b57602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116200e5d35790505b50505050508152602001600b82018054806020026020016040519081016040528092919081815260200182805480156200e68d57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116200e6535790505b50505050508152602001600c82018054806020026020016040519081016040528092919081815260200182805480156200e71357602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116200e6d55790505b50505050508152602001600d82018054806020026020016040519081016040528092919081815260200182805480156200e7a157602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff16815260200190600801906020826007010492830192600103820291508084116200e75b5790505b50505050508152602001600e82018054806020026020016040519081016040528092919081815260200182805480156200e83f57602002820191906000526020600020906000905b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f010492830192600103820291508084116200e7e95790505b50505050508152602001600f82018054806020026020016040519081016040528092919081815260200182805480156200e89957602002820191906000526020600020905b8154815260200190600101908083116200e884575b50505050508152602001601082018054806020026020016040519081016040528092919081815260200182805480156200e91957602002820191906000526020600020906000905b82829054906101000a900460000b60000b815260200190600101906020826000010492830192600103820291508084116200e8e15790505b50505050508152602001601182018054806020026020016040519081016040528092919081815260200182805480156200e99957602002820191906000526020600020906000905b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116200e9615790505b50505050508152602001601282018054806020026020016040519081016040528092919081815260200182805480156200ea1957602002820191906000526020600020906000905b82829054906101000a900460030b60030b815260200190600401906020826003010492830192600103820291508084116200e9e15790505b50505050508152602001601382018054806020026020016040519081016040528092919081815260200182805480156200ea9957602002820191906000526020600020906000905b82829054906101000a900460070b60070b815260200190600801906020826007010492830192600103820291508084116200ea615790505b50505050508152602001601482018054806020026020016040519081016040528092919081815260200182805480156200eb1957602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f010492830192600103820291508084116200eae15790505b50505050508152602001601582018054806020026020016040519081016040528092919081815260200182805480156200eb7357602002820191906000526020600020905b8154815260200190600101908083116200eb5e575b50505050508152602001601682018054806020026020016040519081016040528092919081815260200182805480156200ec1257602002820191906000526020600020906000905b82829054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600101906020826000010492830192600103820291508084116200ebbb5790505b50505050508152602001601782018054806020026020016040519081016040528092919081815260200182805480156200ecb057602002820191906000526020600020906000905b82829054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600201906020826001010492830192600103820291508084116200ec5a5790505b50505050508152602001601882018054806020026020016040519081016040528092919081815260200182805480156200ed4d57602002820191906000526020600020906000905b82829054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600301906020826002010492830192600103820291508084116200ecf85790505b50505050508152602001601982018054806020026020016040519081016040528092919081815260200182805480156200ede957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200ed955790505b50505050508152602001601a82018054806020026020016040519081016040528092919081815260200182805480156200ee8157602002820191906000526020600020906000905b82829054906101000a900460c01b77ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600801906020826007010492830192600103820291508084116200ee315790505b50505050508152602001601b82018054806020026020016040519081016040528092919081815260200182805480156200ef1157602002820191906000526020600020906000905b82829054906101000a900460801b6fffffffffffffffffffffffffffffffff191681526020019060100190602082600f010492830192600103820291508084116200eec95790505b50505050508152602001601c82018054806020026020016040519081016040528092919081815260200182805480156200ef8757602002820191906000526020600020905b8160009054906101000a900460601b6bffffffffffffffffffffffff1916815260200190600101908083116200ef56575b50505050508152602001601d82018054806020026020016040519081016040528092919081815260200182805480156200eff957602002820191906000526020600020905b8160009054906101000a900460401b67ffffffffffffffff1916815260200190600101908083116200efcc575b50505050508152602001601e82018054806020026020016040519081016040528092919081815260200182805480156200f06757602002820191906000526020600020905b8160009054906101000a900460201b63ffffffff1916815260200190600101908083116200f03e575b50505050508152602001601f82018054806020026020016040519081016040528092919081815260200182805480156200f0c157602002820191906000526020600020905b8154815260200190600101908083116200f0ac575b505050505081525050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60006200f141836000600381106200f12357fe5b6020020151836000600381106200f13657fe5b60200201516200fdd0565b9050600081146200f155578090506200f1cc565b6200f185836001600381106200f16757fe5b6020020151836001600381106200f17a57fe5b60200201516200fdd0565b9050600081146200f199578090506200f1cc565b6200f1c9836002600381106200f1ab57fe5b6020020151836002600381106200f1be57fe5b60200201516200fdd0565b90505b92915050565b6000608c905090565b60006028905090565b60006076905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006200f2366200fe2e565b905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b600080905060008090505b6013805490508110156200f3365760146000601383815481106200f2a357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16156200f3285781806001019250505b80806001019150506200f283565b50601154811015601260016101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fb943efb3fc1da02bb1e14eed2ee64f5394e1f6f800ee4ea04c80cefe3a79bc7530601260019054906101000a900460ff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a250565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b6000603b905090565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f61646455736572286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001201818905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b6005601660196101000a81548160ff021916908360078111156200f57957fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200f5dd57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a26200f65f7f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f661565b565b60008090505b600a6000016000848152602001908152602001600020600101805490508110156200f78a57600a600001600084815260200190815260200160002060010181815481106200f6b157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311551ee784846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200f76357600080fd5b505af11580156200f778573d6000803e3d6000fd5b5050505080806001019150506200f667565b505050565b6000606c905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63ecec72709091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200f86f57600080fd5b505af41580156200f884573d6000803e3d6000fd5b505050506040513d60208110156200f89b57600080fd5b81019080805190602001909291905050509050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8251845114156200f8dd6200d8cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200f9405780820151818401526020810190506200f923565b50505050905090810190601f1680156200f96e5780820380516001836020036101000a031916815260200191505b508481038352603281526020018062011af5603291396040018481038252606681526020018062011fd2606691396080019550505050505060006040518083038186803b1580156200f9bf57600080fd5b505af41580156200f9d4573d6000803e3d6000fd5b50505050600080905060008090505b83518110156200fb885760008090505b83518110156200fb7957600073ffffffffffffffffffffffffffffffffffffffff168482815181106200fa2257fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200fa4d576200fb6b565b8482815181106200fa5a57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663fb1a14936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200faa857600080fd5b505afa1580156200fabd573d6000803e3d6000fd5b505050506040513d60208110156200fad457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168482815181106200fb0857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200fb6a578381815181106200fb3a57fe5b60200260200101600073ffffffffffffffffffffffffffffffffffffffff1681525082806001019350506200fb79565b5b80806001019150506200f9f3565b5080806001019150506200f9e3565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600084511180156200fbb6575083518314155b6200fbc06200d8cd565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200fc235780820151818401526020810190506200fc06565b50505050905090810190601f1680156200fc515780820380516001836020036101000a031916815260200191505b508481038352603281526020018062011af5603291396040018481038252607a81526020018062011c73607a91396080019550505050505060006040518083038186803b1580156200fca257600080fd5b505af41580156200fcb7573d6000803e3d6000fd5b50505050505050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200fd41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062011f3e602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000609f905090565b60006200fdc26200fe37565b905090565b60006065905090565b60008260ff168260ff1614156200fdeb57600090506200fe28565b8260ff168260ff1610156200fe23577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506200fe28565b600190505b92915050565b60006012905090565b60006008905090565b8280548282559060005260206000209081019282156200fed2579160200282015b828111156200fed157823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200fe61565b5b5090506200fee1919062011135565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200ff2857803560ff19168380011785556200ff59565b828001600101855582156200ff59579182015b828111156200ff585782358255916020019190600101906200ff3b565b5b5090506200ff6891906201117b565b5090565b60405180610420016040528060008019168152602001600060ff168152602001600015158152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008019168152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6040518060600160405280600390602082028038833980820191505090505090565b815481835581811115620100cd57818360005260206000209182019101620100cc91906201117b565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106201011557805160ff191683800117855562010146565b8280016001018555821562010146579182015b828111156201014557825182559160200191906001019062010128565b5b5090506201015591906201117b565b5090565b828054828255906000526020600020908101928215620101ad579160200282015b82811115620101ac5782518290805190602001906201019b929190620100d2565b50916020019190600101906201017a565b5b509050620101bc9190620111a3565b5090565b8280548282559060005260206000209081019282156201023c579160200282015b828111156201023b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620101e1565b5b5090506201024b919062011135565b5090565b82805482825590600052602060002090601f01602090048101928215620102e95791602002820160005b83821115620102b857835183826101000a81548160ff021916908315150217905550926020019260010160208160000104928301926001030262010279565b8015620102e75782816101000a81549060ff0219169055600101602081600001049283019260010302620102b8565b505b509050620102f89190620111d4565b5090565b82805482825590600052602060002090601f01602090048101928215620103975791602002820160005b838211156201036657835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030262010326565b8015620103955782816101000a81549060ff021916905560010160208160000104928301926001030262010366565b505b509050620103a6919062011207565b5090565b82805482825590600052602060002090600f01601090048101928215620104485791602002820160005b838211156201041657835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302620103d4565b8015620104465782816101000a81549061ffff021916905560020160208160010104928301926001030262010416565b505b5090506201045791906201123a565b5090565b82805482825590600052602060002090600701600890048101928215620104ff5791602002820160005b83821115620104cb57835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262010485565b8015620104fd5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620104cb565b505b5090506201050e91906201126e565b5090565b82805482825590600052602060002090600301600490048101928215620105c25791602002820160005b838211156201058a57835183826101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555092602001926008016020816007010492830192600103026201053c565b8015620105c05782816101000a81549067ffffffffffffffff02191690556008016020816007010492830192600103026201058a565b505b509050620105d19190620112a4565b5090565b828054828255906000526020600020906001016002900481019282156201069d5791602002820160005b838211156201065d57835183826101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f01049283019260010302620105ff565b80156201069b5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f010492830192600103026201065d565b505b509050620106ac9190620112de565b5090565b828054828255906000526020600020908101928215620106ef579160200282015b82811115620106ee578251825591602001919060010190620106d1565b5b509050620106fe91906201117b565b5090565b82805482825590600052602060002090601f01602090048101928215620107a05791602002820160005b838211156201076f57835183826101000a81548160ff021916908360000b60ff16021790555092602001926001016020816000010492830192600103026201072c565b80156201079e5782816101000a81549060ff02191690556001016020816000010492830192600103026201076f565b505b509050620107af919062011320565b5090565b82805482825590600052602060002090600f01601090048101928215620108545791602002820160005b838211156201082257835183826101000a81548161ffff021916908360010b61ffff1602179055509260200192600201602081600101049283019260010302620107dd565b8015620108525782816101000a81549061ffff021916905560020160208160010104928301926001030262010822565b505b50905062010863919062011353565b5090565b828054828255906000526020600020906007016008900481019282156201090e5791602002820160005b83821115620108da57835183826101000a81548163ffffffff021916908360030b63ffffffff160217905550926020019260040160208160030104928301926001030262010891565b80156201090c5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620108da565b505b5090506201091d919062011387565b5090565b82805482825590600052602060002090600301600490048101928215620109d45791602002820160005b838211156201099c57835183826101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555092602001926008016020816007010492830192600103026201094b565b8015620109d25782816101000a81549067ffffffffffffffff02191690556008016020816007010492830192600103026201099c565b505b509050620109e39190620113bd565b5090565b8280548282559060005260206000209060010160029004810192821562010ab25791602002820160005b8382111562010a7257835183826101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff1602179055509260200192601001602081600f0104928301926001030262010a11565b801562010ab05782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030262010a72565b505b50905062010ac19190620113f7565b5090565b82805482825590600052602060002090810192821562010b04579160200282015b8281111562010b0357825182559160200191906001019062010ae6565b5b50905062010b13919062011439565b5090565b82805482825590600052602060002090601f0160209004810192821562010bb25791602002820160005b8382111562010b8157835183826101000a81548160ff021916908360f81c0217905550926020019260010160208160000104928301926001030262010b41565b801562010bb05782816101000a81549060ff021916905560010160208160000104928301926001030262010b81565b505b50905062010bc1919062011461565b5090565b82805482825590600052602060002090600f0160109004810192821562010c625791602002820160005b8382111562010c3057835183826101000a81548161ffff021916908360f01c0217905550926020019260020160208160010104928301926001030262010bef565b801562010c605782816101000a81549061ffff021916905560020160208160010104928301926001030262010c30565b505b50905062010c71919062011494565b5090565b82805482825590600052602060002090600901600a9004810192821562010d145791602002820160005b8382111562010ce157835183826101000a81548162ffffff021916908360e81c0217905550926020019260030160208160020104928301926001030262010c9f565b801562010d125782816101000a81549062ffffff021916905560030160208160020104928301926001030262010ce1565b505b50905062010d239190620114c8565b5090565b8280548282559060005260206000209060070160089004810192821562010dc85791602002820160005b8382111562010d9457835183826101000a81548163ffffffff021916908360e01c0217905550926020019260040160208160030104928301926001030262010d51565b801562010dc65782816101000a81549063ffffffff021916905560040160208160030104928301926001030262010d94565b505b50905062010dd79190620114fd565b5090565b8280548282559060005260206000209060030160049004810192821562010e845791602002820160005b8382111562010e4c57835183826101000a81548167ffffffffffffffff021916908360c01c0217905550926020019260080160208160070104928301926001030262010e05565b801562010e825782816101000a81549067ffffffffffffffff021916905560080160208160070104928301926001030262010e4c565b505b50905062010e93919062011533565b5090565b8280548282559060005260206000209060010160029004810192821562010f505791602002820160005b8382111562010f1057835183826101000a8154816fffffffffffffffffffffffffffffffff021916908360801c02179055509260200192601001602081600f0104928301926001030262010ec1565b801562010f4e5782816101000a8154906fffffffffffffffffffffffffffffffff0219169055601001602081600f0104928301926001030262010f10565b505b50905062010f5f91906201156d565b5090565b82805482825590600052602060002090810192821562010fcc579160200282015b8281111562010fcb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c02179055509160200191906001019062010f84565b5b50905062010fdb9190620115af565b5090565b8280548282559060005260206000209081019282156201104c579160200282015b828111156201104b5782518260006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908360401c02179055509160200191906001019062011000565b5b5090506201105b9190620115f5565b5090565b828054828255906000526020600020908101928215620110d0579160200282015b82811115620110cf5782518260006101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff021916908360201c02179055509160200191906001019062011080565b5b509050620110df91906201163f565b5090565b82805482825590600052602060002090810192821562011122579160200282015b828111156201112157825182559160200191906001019062011104565b5b5090506201113191906201168d565b5090565b6201117891905b808211156201117457600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016201113c565b5090565b90565b620111a091905b808211156201119c57600081600090555060010162011182565b5090565b90565b620111d191905b80821115620111cd5760008181620111c39190620116b5565b50600101620111aa565b5090565b90565b6201120491905b808211156201120057600081816101000a81549060ff021916905550600101620111db565b5090565b90565b6201123791905b808211156201123357600081816101000a81549060ff0219169055506001016201120e565b5090565b90565b6201126b91905b808211156201126757600081816101000a81549061ffff02191690555060010162011241565b5090565b90565b620112a191905b808211156201129d57600081816101000a81549063ffffffff02191690555060010162011275565b5090565b90565b620112db91905b80821115620112d757600081816101000a81549067ffffffffffffffff021916905550600101620112ab565b5090565b90565b6201131d91905b808211156201131957600081816101000a8154906fffffffffffffffffffffffffffffffff021916905550600101620112e5565b5090565b90565b6201135091905b808211156201134c57600081816101000a81549060ff02191690555060010162011327565b5090565b90565b6201138491905b808211156201138057600081816101000a81549061ffff0219169055506001016201135a565b5090565b90565b620113ba91905b80821115620113b657600081816101000a81549063ffffffff0219169055506001016201138e565b5090565b90565b620113f491905b80821115620113f057600081816101000a81549067ffffffffffffffff021916905550600101620113c4565b5090565b90565b6201143691905b808211156201143257600081816101000a8154906fffffffffffffffffffffffffffffffff021916905550600101620113fe565b5090565b90565b6201145e91905b808211156201145a57600081600090555060010162011440565b5090565b90565b6201149191905b808211156201148d57600081816101000a81549060ff02191690555060010162011468565b5090565b90565b620114c591905b80821115620114c157600081816101000a81549061ffff0219169055506001016201149b565b5090565b90565b620114fa91905b80821115620114f657600081816101000a81549062ffffff021916905550600101620114cf565b5090565b90565b6201153091905b808211156201152c57600081816101000a81549063ffffffff02191690555060010162011504565b5090565b90565b6201156a91905b808211156201156657600081816101000a81549067ffffffffffffffff0219169055506001016201153a565b5090565b90565b620115ac91905b80821115620115a857600081816101000a8154906fffffffffffffffffffffffffffffffff02191690555060010162011574565b5090565b90565b620115f291905b80821115620115ee57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101620115b6565b5090565b90565b6201163c91905b808211156201163857600081816101000a81549077ffffffffffffffffffffffffffffffffffffffffffffffff021916905550600101620115fc565b5090565b90565b6201168a91905b808211156201168657600081816101000a8154907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690555060010162011646565b5090565b90565b620116b291905b80821115620116ae57600081600090555060010162011694565b5090565b90565b50805460018160011615610100020316600290046000825580601f10620116dd5750620116fe565b601f016020900490600052602060002090810190620116fd91906201117b565b5b5056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a6553696e676c652d68656c64207065726d697373696f6e20746861742068617320616c7265616479206265656e206772616e7465642063616e6e6f74206265206f7665727772697474656e20627920746865207065726d697373696f6e2061646d696e2e20557365207472616e736665725065726d697373696f6e20696e73746561642e5468652070726f7669646564206f776e65722061646472657373206d757374206e6f7420626520656d70747941627374726163745065726d697373696f6e65642e6772616e745065726d697373696f6e54686520737065636966696564207065726d697373696f6e20646f6573206e6f742065786973742e204372656174652069742066697273742e41677265656d656e742069732073657420746f2072656e65772c20627574206e6f20757064617465642065787069726174696f6e20646174652073657441627374726163745065726d697373696f6e65642e7072655f72657175697265735065726d697373696f6e546869732076657273696f6e206f6620696e697469616c697a65206973206e6f206c6f6e67657220737570706f727465642e20506c65617365207573652044656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d2954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a6564546865206d73672e73656e64657220646f6573206e6f74206861766520746865207265717569726564207065726d697373696f6e54686520737065636966696564207065726d697373696f6e206973206e6f74207472616e7366657261626c655468726573686f6c64206d6179206e6f742062652067726561746572207468616e20746f74616c206e756d626572206f66206672616e636869736565732061626c6520746f2072656e65777265736f6c76654164647265737353636f706528616464726573732c627974657333322c61646472657373294f6e6c79207468652061677265656d656e74206f776e6572206d6179207265717565737420726564616374696f6e5468652061677265656d656e742063616e6e6f742062652072656461637465642e2054686520726567697374657265642070617274696573206d7573742063616e63656c206974206669727374546865206672616e6368697365652064657269657665642066726f6d20746869732063616c6c6572206973206e6f7420617574686f72697a656420746f20766f746544656661756c7441637469766541677265656d656e742e76616c6964617465476f7665726e696e6741677265656d656e7473546865206f626a6563742061646d696e2068617320616c7265616479206265656e2073657420616e642063616e6e6f74206265206f7665727772697474656e416273747261637452656e657761626c652e636c6f736552656e6577616c57696e646f7746697865642073636f706520616e6420436f6e646974696f6e616c44617461206d757374206e6f7420626f746820626520656d70747954686520737065636966696564207065726d697373696f6e206973206e6f74207265766f6361626c655468652063616c6c6572206973206e6f7420617574686f72697a656420746f207369676e5468652063616c6c6572206973206e6f7420617574686f72697a656420746f2063616e63656c7365744164647265737353636f706528616464726573732c627974657333322c627974657333322c627974657333322c627974657333322c61646472657373295468652070726f766964656420676f7665726e696e672061677265656d656e747320646f206e6f74206d6174636820616c6c206f662074686520676f7665726e696e6720617263686574797065732072657175697265642062792074686520617263686574797065206f6620746869732061677265656d656e7443616e6e6f7420726573657420766f746573207768696c652072656e6577616c2077696e646f77206973206f70656e546865206e657720686f6c64657220616c726561647920686f6c64732074686520737065636966696564207065726d697373696f6e41627374726163745065726d697373696f6e65642e7265766f6b655065726d697373696f6e41627374726163745065726d697373696f6e65642e7472616e736665725065726d697373696f6e6765744164647265737353636f706544657461696c7328616464726573732c6279746573333229546865206d73672e73656e64657220646f6573206e6f7420686f6c642074686520737065636966696564207065726d697373696f6e5468652072656e6577616c20766f74696e672077696e646f7720697320636c6f73656444656661756c7441637469766541677265656d656e742e646f43616e63656c282941646d696e207065726d697373696f6e20686f6c646572732063616e6e6f74206265206c65667420656d70747941627374726163745065726d697373696f6e65642e6372656174655065726d697373696f6e5468652061677265656d656e7420697320616c726561647920696e20737461746520524544414354454441627374726163745065726d697373696f6e65642e696e697469616c697a654f626a65637441646d696e6973747261746f724172636865747970652061646472657373206d757374206e6f7420626520656d7074795468652063616c6c6572206973206e6f7420617574686f72697a656420746f20766f746520666f722072656e6577616c466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365546865204461746153746f7261676520706172616d6574657220697320726571756972656420666f72206120436f6e646974696f6e616c446174612073636f706520776974686f75742061206669786564206461746153746f726167652061646472657373546865206e756d626572206f662070726f766964656420676f7665726e696e672061677265656d656e747320646f6573206e6f74206d6174636820746865207265717569726564206e756d626572206f6620676f7665726e696e672061726368657479706573546865206164647265737320746f20776869636820746f2061646420612073636f7065206d757374206e6f7420626520656d70747954686520676976656e206163636f756e7420646f6573206e6f7420686f6c642074686973207065726d697373696f6e2e4174206c65617374206f6e65206672616e63686973656520726571756972656420746f20646566696e652072656e6577616c207465726d7341207065726d697373696f6e207769746820746865206964656e746966696572206e616d6520616c72656164792065786973747344656661756c7441637469766541677265656d656e742e696e697469616c697a6528616464726573732c616464726573732c737472696e672c626f6f6c2c616464726573735b5d2c616464726573735b5d295468652070726f76696465642063726561746f722061646472657373206d757374206e6f7420626520656d70747944656661756c7441637469766541677265656d656e742e696e697469616c697a656765744164647265737353636f706544657461696c73466f724b6579286279746573333229a265627a7a723158204997c8ae0daa2c3674e1066d077c8f7256176ae03f692b96c181ce31ff7b840264736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$b57d6bac5d25edb57dfc5dd3520b6e9fc5$", commons_collections_DataStorageUtils_sol_DataStorageUtils);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActiveAgreementToPartyCancelationsUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartyCancelationsUpdate", this.address, callback); }
        LogActiveAgreementToPartySignaturesUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartySignaturesUpdate", this.address, callback); }
        LogAgreementCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation", this.address, callback); }
        LogAgreementCreation_v1_1_0(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation_v1_1_0", this.address, callback); }
        LogAgreementEventLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementEventLogReference", this.address, callback); }
        LogAgreementLegalStateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementLegalStateUpdate", this.address, callback); }
        LogAgreementMaxEventCountUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementMaxEventCountUpdate", this.address, callback); }
        LogAgreementOwnerUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementOwnerUpdate", this.address, callback); }
        LogAgreementPrivateParametersReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementPrivateParametersReference", this.address, callback); }
        LogAgreementRedaction(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRedaction", this.address, callback); }
        LogAgreementRenewalExpirationDateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalExpirationDateUpdate", this.address, callback); }
        LogAgreementRenewalFranchiseeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalFranchiseeUpdate", this.address, callback); }
        LogAgreementRenewalResultUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalResultUpdate", this.address, callback); }
        LogAgreementRenewalTermsDefined(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalTermsDefined", this.address, callback); }
        LogAgreementRenewalVoteCast(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalVoteCast", this.address, callback); }
        LogAgreementRenewalWindowClosed(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowClosed", this.address, callback); }
        LogAgreementRenewalWindowOpened(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowOpened", this.address, callback); }
        LogAgreementSignatureLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementSignatureLogReference", this.address, callback); }
        LogDataStorageUpdateAddress(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddress", this.address, callback); }
        LogDataStorageUpdateAddressArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddressArray", this.address, callback); }
        LogDataStorageUpdateBool(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBool", this.address, callback); }
        LogDataStorageUpdateBoolArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBoolArray", this.address, callback); }
        LogDataStorageUpdateBytes32(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32", this.address, callback); }
        LogDataStorageUpdateBytes32Array(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32Array", this.address, callback); }
        LogDataStorageUpdateInt(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateInt", this.address, callback); }
        LogDataStorageUpdateIntArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateIntArray", this.address, callback); }
        LogDataStorageUpdateString(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateString", this.address, callback); }
        LogDataStorageUpdateUint(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUint", this.address, callback); }
        LogDataStorageUpdateUintArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUintArray", this.address, callback); }
        LogEntityAddressScopeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogEntityAddressScopeUpdate", this.address, callback); }
        LogGoverningAgreementUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogGoverningAgreementUpdate", this.address, callback); }
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            });
        }
        DATA_FIELD_AGREEMENT_PARTIES() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_PARTIES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_PARTIES();
            });
        }
        EMPTY_SCOPE() {
            const data = Encode(this.client).EMPTY_SCOPE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EMPTY_SCOPE();
            });
        }
        ERC165_ID_Address_Scopes() {
            const data = Encode(this.client).ERC165_ID_Address_Scopes();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Address_Scopes();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_CREATED() {
            const data = Encode(this.client).EVENT_CREATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_CREATED();
            });
        }
        EVENT_DELETED() {
            const data = Encode(this.client).EVENT_DELETED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_DELETED();
            });
        }
        EVENT_ID_AGREEMENTS() {
            const data = Encode(this.client).EVENT_ID_AGREEMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENTS();
            });
        }
        EVENT_ID_AGREEMENT_PARTY_MAP() {
            const data = Encode(this.client).EVENT_ID_AGREEMENT_PARTY_MAP();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENT_PARTY_MAP();
            });
        }
        EVENT_ID_DATA_STORAGE() {
            const data = Encode(this.client).EVENT_ID_DATA_STORAGE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_STORAGE();
            });
        }
        EVENT_ID_ENTITIES_ADDRESS_SCOPES() {
            const data = Encode(this.client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            });
        }
        EVENT_ID_GOVERNING_AGREEMENT() {
            const data = Encode(this.client).EVENT_ID_GOVERNING_AGREEMENT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_GOVERNING_AGREEMENT();
            });
        }
        EVENT_ID_STATE_CHANGED() {
            const data = Encode(this.client).EVENT_ID_STATE_CHANGED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_STATE_CHANGED();
            });
        }
        EVENT_UPDATED() {
            const data = Encode(this.client).EVENT_UPDATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_UPDATED();
            });
        }
        ROLE_ID_LEGAL_STATE_CONTROLLER() {
            const data = Encode(this.client).ROLE_ID_LEGAL_STATE_CONTROLLER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_LEGAL_STATE_CONTROLLER();
            });
        }
        ROLE_ID_OBJECT_ADMIN() {
            const data = Encode(this.client).ROLE_ID_OBJECT_ADMIN();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OBJECT_ADMIN();
            });
        }
        ROLE_ID_OWNER() {
            const data = Encode(this.client).ROLE_ID_OWNER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OWNER();
            });
        }
        addEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).addEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addEventListener();
            });
        }
        cancel() {
            const data = Encode(this.client).cancel();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).cancel();
            });
        }
        castRenewalVote(_renew: boolean) {
            const data = Encode(this.client).castRenewalVote(_renew);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).castRenewalVote();
            });
        }
        closeRenewalWindow() {
            const data = Encode(this.client).closeRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).closeRenewalWindow();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) {
            const data = Encode(this.client).createPermission(_permission, _multiHolder, _revocable, _transferable);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createPermission();
            });
        }
        defineRenewalTerms(_franchisees: string[], _threshold: number, _expirationDate: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) {
            const data = Encode(this.client).defineRenewalTerms(_franchisees, _threshold, _expirationDate, _opensAtOffset, _closesAtOffset, _extensionOffset);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).defineRenewalTerms();
            });
        }
        getAddressScopeDetails(_address: string, _context: Buffer) {
            const data = Encode(this.client).getAddressScopeDetails(_address, _context);
            return Call<Tx, {
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetails();
            });
        }
        getAddressScopeDetailsForKey(_key: Buffer) {
            const data = Encode(this.client).getAddressScopeDetailsForKey(_key);
            return Call<Tx, {
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetailsForKey();
            });
        }
        getAddressScopeKeys() {
            const data = Encode(this.client).getAddressScopeKeys();
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeKeys();
            });
        }
        getArchetype() {
            const data = Encode(this.client).getArchetype();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArchetype();
            });
        }
        getArrayLength(_id: Buffer) {
            const data = Encode(this.client).getArrayLength(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArrayLength();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getCreator() {
            const data = Encode(this.client).getCreator();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getCreator();
            });
        }
        getDataIdAtIndex(_index: number) {
            const data = Encode(this.client).getDataIdAtIndex(_index);
            return Call<Tx, {
                error: number;
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataIdAtIndex();
            });
        }
        getDataType(_id: Buffer) {
            const data = Encode(this.client).getDataType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataType();
            });
        }
        getDataValueAsAddress(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddress(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddress();
            });
        }
        getDataValueAsAddressArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddressArray(_id);
            return Call<Tx, [string[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddressArray();
            });
        }
        getDataValueAsBool(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBool(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBool();
            });
        }
        getDataValueAsBoolArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBoolArray(_id);
            return Call<Tx, [boolean[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBoolArray();
            });
        }
        getDataValueAsBytes32(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32(_id);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32();
            });
        }
        getDataValueAsBytes32Array(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32Array(_id);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32Array();
            });
        }
        getDataValueAsInt(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsInt(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsInt();
            });
        }
        getDataValueAsIntArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsIntArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsIntArray();
            });
        }
        getDataValueAsString(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsString(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsString();
            });
        }
        getDataValueAsUint(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUint(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUint();
            });
        }
        getDataValueAsUintArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUintArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUintArray();
            });
        }
        getEventLogReference() {
            const data = Encode(this.client).getEventLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getEventLogReference();
            });
        }
        getGoverningAgreementAtIndex(_index: number) {
            const data = Encode(this.client).getGoverningAgreementAtIndex(_index);
            return Call<Tx, {
                agreementAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGoverningAgreementAtIndex();
            });
        }
        getHolder(_permission: Buffer, _index: number) {
            const data = Encode(this.client).getHolder(_permission, _index);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getHolder();
            });
        }
        getLegalState() {
            const data = Encode(this.client).getLegalState();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getLegalState();
            });
        }
        getMaxNumberOfEvents() {
            const data = Encode(this.client).getMaxNumberOfEvents();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getMaxNumberOfEvents();
            });
        }
        getNumberOfData() {
            const data = Encode(this.client).getNumberOfData();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfData();
            });
        }
        getNumberOfGoverningAgreements() {
            const data = Encode(this.client).getNumberOfGoverningAgreements();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfGoverningAgreements();
            });
        }
        getNumberOfParties() {
            const data = Encode(this.client).getNumberOfParties();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfParties();
            });
        }
        getNumberOfRenewalFranchisees() {
            const data = Encode(this.client).getNumberOfRenewalFranchisees();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfRenewalFranchisees();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getPartyAtIndex(_index: number) {
            const data = Encode(this.client).getPartyAtIndex(_index);
            return Call<Tx, {
                party: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPartyAtIndex();
            });
        }
        getPermissionDetails(_permission: Buffer) {
            const data = Encode(this.client).getPermissionDetails(_permission);
            return Call<Tx, {
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPermissionDetails();
            });
        }
        getPrivateParametersReference() {
            const data = Encode(this.client).getPrivateParametersReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPrivateParametersReference();
            });
        }
        getRenewalFranchiseeAtIndex(_index: number) {
            const data = Encode(this.client).getRenewalFranchiseeAtIndex(_index);
            return Call<Tx, {
                franchisee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalFranchiseeAtIndex();
            });
        }
        getRenewalState() {
            const data = Encode(this.client).getRenewalState();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalState();
            });
        }
        getRenewalTerms() {
            const data = Encode(this.client).getRenewalTerms();
            return Call<Tx, {
                renewalThreshold: number;
                agreementExpirationDate: number;
                renewalOpensAtOffset: string;
                renewalClosesAtOffset: string;
                renewalExtensionOffset: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalTerms();
            });
        }
        getRenewalVoteDetails(_franchisee: string) {
            const data = Encode(this.client).getRenewalVoteDetails(_franchisee);
            return Call<Tx, {
                renewalVoter: string;
                renewVote: boolean;
                voteTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalVoteDetails();
            });
        }
        getSignatureDetails(_party: string) {
            const data = Encode(this.client).getSignatureDetails(_party);
            return Call<Tx, {
                signee: string;
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureDetails();
            });
        }
        getSignatureLogReference() {
            const data = Encode(this.client).getSignatureLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureLogReference();
            });
        }
        getSignatureTimestamp(_party: string) {
            const data = Encode(this.client).getSignatureTimestamp(_party);
            return Call<Tx, {
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureTimestamp();
            });
        }
        getSignee(_party: string) {
            const data = Encode(this.client).getSignee(_party);
            return Call<Tx, {
                signee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignee();
            });
        }
        grantPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).grantPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).grantPermission();
            });
        }
        hasPermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).hasPermission(_permission, _holder);
            return Call<Tx, {
                result: boolean;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).hasPermission();
            });
        }
        initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) {
            const data = Encode(this.client).initialize(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        initializeObjectAdministrator(_admin: string) {
            const data = Encode(this.client).initializeObjectAdministrator(_admin);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initializeObjectAdministrator();
            });
        }
        isPrivate() {
            const data = Encode(this.client).isPrivate();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isPrivate();
            });
        }
        isRenewalWindowOpen() {
            const data = Encode(this.client).isRenewalWindowOpen();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isRenewalWindowOpen();
            });
        }
        isSignedBy(_signee: string) {
            const data = Encode(this.client).isSignedBy(_signee);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isSignedBy();
            });
        }
        openRenewalWindow() {
            const data = Encode(this.client).openRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).openRenewalWindow();
            });
        }
        redact() {
            const data = Encode(this.client).redact();
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).redact();
            });
        }
        removeData(_id: Buffer) {
            const data = Encode(this.client).removeData(_id);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeData();
            });
        }
        removeEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).removeEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeEventListener();
            });
        }
        resetRenewalVotes() {
            const data = Encode(this.client).resetRenewalVotes();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).resetRenewalVotes();
            });
        }
        resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveAddressScope(_address, _context, _dataStorage);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveAddressScope();
            });
        }
        revokePermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).revokePermission(_permission, _holder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).revokePermission();
            });
        }
        setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setAddressScope();
            });
        }
        setCurrentExpirationDate(_expirationDate: number) {
            const data = Encode(this.client).setCurrentExpirationDate(_expirationDate);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setCurrentExpirationDate();
            });
        }
        setDataValueAsAddress(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsAddress(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddress();
            });
        }
        setDataValueAsAddressArray(_id: Buffer, _value: string[]) {
            const data = Encode(this.client).setDataValueAsAddressArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddressArray();
            });
        }
        setDataValueAsBool(_id: Buffer, _value: boolean) {
            const data = Encode(this.client).setDataValueAsBool(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBool();
            });
        }
        setDataValueAsBoolArray(_id: Buffer, _value: boolean[]) {
            const data = Encode(this.client).setDataValueAsBoolArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBoolArray();
            });
        }
        setDataValueAsBytes32(_id: Buffer, _value: Buffer) {
            const data = Encode(this.client).setDataValueAsBytes32(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32();
            });
        }
        setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[]) {
            const data = Encode(this.client).setDataValueAsBytes32Array(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32Array();
            });
        }
        setDataValueAsInt(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsInt(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsInt();
            });
        }
        setDataValueAsIntArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsIntArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsIntArray();
            });
        }
        setDataValueAsString(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsString(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsString();
            });
        }
        setDataValueAsUint(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsUint(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUint();
            });
        }
        setDataValueAsUintArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsUintArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUintArray();
            });
        }
        setEventLogReference(_eventLogFileReference: string) {
            const data = Encode(this.client).setEventLogReference(_eventLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setEventLogReference();
            });
        }
        setFulfilled() {
            const data = Encode(this.client).setFulfilled();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setFulfilled();
            });
        }
        setLegalState(_legalState: number) {
            const data = Encode(this.client).setLegalState(_legalState);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setLegalState();
            });
        }
        setMaxNumberOfEvents(_maxNumberOfEvents: number) {
            const data = Encode(this.client).setMaxNumberOfEvents(_maxNumberOfEvents);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setMaxNumberOfEvents();
            });
        }
        setNextExpirationDate(_expirationDate: number) {
            const data = Encode(this.client).setNextExpirationDate(_expirationDate);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setNextExpirationDate();
            });
        }
        setPrivateParametersReference(_privateParametersFileReference: string) {
            const data = Encode(this.client).setPrivateParametersReference(_privateParametersFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setPrivateParametersReference();
            });
        }
        setSignatureLogReference(_signatureLogFileReference: string) {
            const data = Encode(this.client).setSignatureLogReference(_signatureLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setSignatureLogReference();
            });
        }
        sign() {
            const data = Encode(this.client).sign();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).sign();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).transferPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferPermission();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: () => { return client.encode("1314CF66", []); },
        DATA_FIELD_AGREEMENT_PARTIES: () => { return client.encode("80C86BA7", []); },
        EMPTY_SCOPE: () => { return client.encode("F6EC229E", []); },
        ERC165_ID_Address_Scopes: () => { return client.encode("BD9E0660", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_CREATED: () => { return client.encode("F0897DB7", []); },
        EVENT_DELETED: () => { return client.encode("6F78733B", []); },
        EVENT_ID_AGREEMENTS: () => { return client.encode("4828C43B", []); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return client.encode("6DBBC67B", []); },
        EVENT_ID_DATA_STORAGE: () => { return client.encode("D42EA976", []); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return client.encode("B7D64777", []); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return client.encode("FC344A73", []); },
        EVENT_ID_STATE_CHANGED: () => { return client.encode("11CE5844", []); },
        EVENT_UPDATED: () => { return client.encode("7207B07F", []); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return client.encode("F76829C9", []); },
        ROLE_ID_OBJECT_ADMIN: () => { return client.encode("E6F936F9", []); },
        ROLE_ID_OWNER: () => { return client.encode("9090FD85", []); },
        addEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("2A7CBFDE", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("6EA1944B", ["bytes32"], _event);
        },
        cancel: () => { return client.encode("EA8A1AF0", []); },
        castRenewalVote: (_renew: boolean) => { return client.encode("B20BA337", ["bool"], _renew); },
        closeRenewalWindow: () => { return client.encode("C0647C2E", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return client.encode("94FEB152", ["bytes32", "bool", "bool", "bool"], _permission, _multiHolder, _revocable, _transferable); },
        defineRenewalTerms: (_franchisees: string[], _threshold: number, _expirationDate: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) => { return client.encode("0130B3E0", ["address[]", "uint256", "int256", "string", "string", "string"], _franchisees, _threshold, _expirationDate, _opensAtOffset, _closesAtOffset, _extensionOffset); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return client.encode("9561AA32", ["address", "bytes32"], _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return client.encode("FE3C84B2", ["bytes32"], _key); },
        getAddressScopeKeys: () => { return client.encode("70A9C997", []); },
        getArchetype: () => { return client.encode("FB1A1493", []); },
        getArrayLength: (_id: Buffer) => { return client.encode("AA0AC16F", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getCreator: () => { return client.encode("0EE2CB10", []); },
        getDataIdAtIndex: (_index: number) => { return client.encode("374B7D22", ["uint256"], _index); },
        getDataType: (_id: Buffer) => { return client.encode("31502F13", ["bytes32"], _id); },
        getDataValueAsAddress: (_id: Buffer) => { return client.encode("F364E379", ["bytes32"], _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return client.encode("EEB8B809", ["bytes32"], _id); },
        getDataValueAsBool: (_id: Buffer) => { return client.encode("30C676C9", ["bytes32"], _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return client.encode("D734C53A", ["bytes32"], _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return client.encode("2512E6F1", ["bytes32"], _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return client.encode("FCB4862A", ["bytes32"], _id); },
        getDataValueAsInt: (_id: Buffer) => { return client.encode("E2BE8FE1", ["bytes32"], _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return client.encode("F0A40527", ["bytes32"], _id); },
        getDataValueAsString: (_id: Buffer) => { return client.encode("D2E8A0FA", ["bytes32"], _id); },
        getDataValueAsUint: (_id: Buffer) => { return client.encode("35CE1BD1", ["bytes32"], _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return client.encode("31185182", ["bytes32"], _id); },
        getEventLogReference: () => { return client.encode("F9F3F283", []); },
        getGoverningAgreementAtIndex: (_index: number) => { return client.encode("C4521FFB", ["uint256"], _index); },
        getHolder: (_permission: Buffer, _index: number) => { return client.encode("141B422A", ["bytes32", "uint256"], _permission, _index); },
        getLegalState: () => { return client.encode("59D585EE", []); },
        getMaxNumberOfEvents: () => { return client.encode("5ABF3202", []); },
        getNumberOfData: () => { return client.encode("5666F9AC", []); },
        getNumberOfGoverningAgreements: () => { return client.encode("0D9BFA80", []); },
        getNumberOfParties: () => { return client.encode("7F809381", []); },
        getNumberOfRenewalFranchisees: () => { return client.encode("D779C8A1", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getPartyAtIndex: (_index: number) => { return client.encode("79CE3CB2", ["uint256"], _index); },
        getPermissionDetails: (_permission: Buffer) => { return client.encode("63A84C04", ["bytes32"], _permission); },
        getPrivateParametersReference: () => { return client.encode("9F75DFD9", []); },
        getRenewalFranchiseeAtIndex: (_index: number) => { return client.encode("6A78A815", ["uint256"], _index); },
        getRenewalState: () => { return client.encode("04FCE015", []); },
        getRenewalTerms: () => { return client.encode("40514A1A", []); },
        getRenewalVoteDetails: (_franchisee: string) => { return client.encode("84A6CD4D", ["address"], _franchisee); },
        getSignatureDetails: (_party: string) => { return client.encode("F4B9D96E", ["address"], _party); },
        getSignatureLogReference: () => { return client.encode("0CB61B34", []); },
        getSignatureTimestamp: (_party: string) => { return client.encode("D39C4FAA", ["address"], _party); },
        getSignee: (_party: string) => { return client.encode("51E213FC", ["address"], _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("BC586456", ["bytes32", "address"], _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return client.encode("28545C0D", ["bytes32", "address"], _permission, _holder); },
        initialize: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => {
            if (typeof _archetype === "string" && typeof _creator === "string" && typeof _owner === "string" && typeof _privateParametersFileReference === "string" && typeof _isPrivate === "string" && typeof _parties === "string" && typeof _governingAgreements === "string")
                return client.encode("BE60FC0C", ["address", "address", "address", "string", "bool", "address[]", "address[]"], _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
        },
        initializeObjectAdministrator: (_admin: string) => { return client.encode("859360F5", ["address"], _admin); },
        isPrivate: () => { return client.encode("FAFF660E", []); },
        isRenewalWindowOpen: () => { return client.encode("8AAEFF8C", []); },
        isSignedBy: (_signee: string) => { return client.encode("7F91FB7D", ["address"], _signee); },
        openRenewalWindow: () => { return client.encode("8C2A4DAE", []); },
        redact: () => { return client.encode("91BEC712", []); },
        removeData: (_id: Buffer) => { return client.encode("47DD48E0", ["bytes32"], _id); },
        removeEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("0775CB00", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("586CA7AB", ["bytes32"], _event);
        },
        resetRenewalVotes: () => { return client.encode("72EA1826", []); },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return client.encode("3C0E5245", ["address", "bytes32", "address"], _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return client.encode("A6A8F17B", ["bytes32", "address"], _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("6D73C8BC", ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"], _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setCurrentExpirationDate: (_expirationDate: number) => { return client.encode("CFDC4942", ["int256"], _expirationDate); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return client.encode("68E78011", ["bytes32", "address"], _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return client.encode("641375AD", ["bytes32", "address[]"], _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return client.encode("1CB35540", ["bytes32", "bool"], _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return client.encode("F5081E9F", ["bytes32", "bool[]"], _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return client.encode("8AA137F5", ["bytes32", "bytes32"], _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return client.encode("EDEC4C4F", ["bytes32", "bytes32[]"], _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return client.encode("720E72E9", ["bytes32", "int256"], _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return client.encode("6D6A7E8F", ["bytes32", "int256[]"], _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return client.encode("1C5422D2", ["bytes32", "string"], _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return client.encode("F3420D1A", ["bytes32", "uint256"], _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return client.encode("94E38624", ["bytes32", "uint256[]"], _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return client.encode("4F7E37BB", ["string"], _eventLogFileReference); },
        setFulfilled: () => { return client.encode("C3F0A895", []); },
        setLegalState: (_legalState: number) => { return client.encode("58892B86", ["uint8"], _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return client.encode("130C5985", ["uint32"], _maxNumberOfEvents); },
        setNextExpirationDate: (_expirationDate: number) => { return client.encode("C6E8DFD0", ["int256"], _expirationDate); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return client.encode("4773F6FC", ["string"], _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return client.encode("F8D660D3", ["string"], _signatureLogFileReference); },
        sign: () => { return client.encode("2CA15122", []); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("EC9CB2CE", ["bytes32", "address"], _permission, _newHolder); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        DATA_FIELD_AGREEMENT_PARTIES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EMPTY_SCOPE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ERC165_ID_Address_Scopes: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_CREATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_DELETED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_STORAGE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_STATE_CHANGED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_UPDATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OBJECT_ADMIN: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OWNER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addEventListener: (): void => { return; },
        cancel: (): void => { return; },
        castRenewalVote: (): void => { return; },
        closeRenewalWindow: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createPermission: (): void => { return; },
        defineRenewalTerms: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "address"]);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getArchetype: (): [string] => { return client.decode(data, ["address"]); },
        getArrayLength: (): [number] => { return client.decode(data, ["uint256"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getCreator: (): [string] => { return client.decode(data, ["address"]); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = client.decode(data, ["uint256", "bytes32"]);
            return { error: error, id: id };
        },
        getDataType: (): [number] => { return client.decode(data, ["uint8"]); },
        getDataValueAsAddress: (): [string] => { return client.decode(data, ["address"]); },
        getDataValueAsAddressArray: (): [string[]] => { return client.decode(data, ["address[]"]); },
        getDataValueAsBool: (): [boolean] => { return client.decode(data, ["bool"]); },
        getDataValueAsBoolArray: (): [boolean[]] => { return client.decode(data, ["bool[]"]); },
        getDataValueAsBytes32: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDataValueAsBytes32Array: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getDataValueAsInt: (): [number] => { return client.decode(data, ["int256"]); },
        getDataValueAsIntArray: (): [number[]] => { return client.decode(data, ["int256[]"]); },
        getDataValueAsString: (): [string] => { return client.decode(data, ["string"]); },
        getDataValueAsUint: (): [number] => { return client.decode(data, ["uint256"]); },
        getDataValueAsUintArray: (): [number[]] => { return client.decode(data, ["uint256[]"]); },
        getEventLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = client.decode(data, ["address"]);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [string] => { return client.decode(data, ["address"]); },
        getLegalState: (): [number] => { return client.decode(data, ["uint8"]); },
        getMaxNumberOfEvents: (): [number] => { return client.decode(data, ["uint32"]); },
        getNumberOfData: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfRenewalFranchisees: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = client.decode(data, ["address"]);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = client.decode(data, ["bool", "bool", "bool", "bool", "uint256"]);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [string] => { return client.decode(data, ["string"]); },
        getRenewalFranchiseeAtIndex: (): {
            franchisee: string;
        } => {
            const [franchisee] = client.decode(data, ["address"]);
            return { franchisee: franchisee };
        },
        getRenewalState: (): [boolean] => { return client.decode(data, ["bool"]); },
        getRenewalTerms: (): {
            renewalThreshold: number;
            agreementExpirationDate: number;
            renewalOpensAtOffset: string;
            renewalClosesAtOffset: string;
            renewalExtensionOffset: string;
        } => {
            const [renewalThreshold, agreementExpirationDate, renewalOpensAtOffset, renewalClosesAtOffset, renewalExtensionOffset] = client.decode(data, ["uint256", "int256", "string", "string", "string"]);
            return { renewalThreshold: renewalThreshold, agreementExpirationDate: agreementExpirationDate, renewalOpensAtOffset: renewalOpensAtOffset, renewalClosesAtOffset: renewalClosesAtOffset, renewalExtensionOffset: renewalExtensionOffset };
        },
        getRenewalVoteDetails: (): {
            renewalVoter: string;
            renewVote: boolean;
            voteTimestamp: number;
        } => {
            const [renewalVoter, renewVote, voteTimestamp] = client.decode(data, ["address", "bool", "uint256"]);
            return { renewalVoter: renewalVoter, renewVote: renewVote, voteTimestamp: voteTimestamp };
        },
        getSignatureDetails: (): {
            signee: string;
            signatureTimestamp: number;
        } => {
            const [signee, signatureTimestamp] = client.decode(data, ["address", "uint256"]);
            return { signee: signee, signatureTimestamp: signatureTimestamp };
        },
        getSignatureLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = client.decode(data, ["uint256"]);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = client.decode(data, ["address"]);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): {
            result: boolean;
        } => {
            const [result] = client.decode(data, ["bool"]);
            return { result: result };
        },
        initialize: (): void => { return; },
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [boolean] => { return client.decode(data, ["bool"]); },
        isRenewalWindowOpen: (): [boolean] => { return client.decode(data, ["bool"]); },
        isSignedBy: (): [boolean] => { return client.decode(data, ["bool"]); },
        openRenewalWindow: (): void => { return; },
        redact: (): [number] => { return client.decode(data, ["uint8"]); },
        removeData: (): void => { return; },
        removeEventListener: (): void => { return; },
        resetRenewalVotes: (): void => { return; },
        resolveAddressScope: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setCurrentExpirationDate: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setNextExpirationDate: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferPermission: (): void => { return; }
    }; };
}