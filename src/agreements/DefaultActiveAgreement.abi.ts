//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultActiveAgreement {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_DataStorageUtils_sol_DataStorageUtils: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_standards_ERC165Utils_sol_ERC165Utils: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string): Promise<string> {
        let bytecode = "60806040527f63726561746564000000000000000000000000000000000000000000000000006007557f75706461746564000000000000000000000000000000000000000000000000006008557f64656c657465640000000000000000000000000000000000000000000000000060095560016008600060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550826002600060038110620000d757fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200010757fe5b602091828204019190066101000a81548160ff021916908360ff16021790555080600280600381106200013657fe5b602091828204019190066101000a81548160ff021916908360ff160217905550620001ad60405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120620001b660201b60201c565b505050620002a3565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180620123f3602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6201213f80620002b46000396000f3fe60806040523480156200001157600080fd5b5060043610620007545760003560e01c806384a6cd4d11620003c3578063d39c4faa116200020d578063f0a405271162000129578063f8d660d311620000bd578063fb1a14931162000093578063fb1a14931462002bf4578063fc344a731462002c40578063fcb4862a1462002c60578063fe3c84b21462002ce85762000754565b8063f8d660d31462002ac9578063f9f3f2831462002b48578063faff660e1462002bd05762000754565b8063f4b9d96e11620000ff578063f4b9d96e1462002972578063f5081e9f1462002a00578063f6ec229e1462002a89578063f76829c91462002aa95762000754565b8063f0a40527146200283e578063f3420d1a14620028c6578063f364e37914620029015762000754565b8063e703a9e411620001a1578063edec4c4f1162000177578063edec4c4f14620026e7578063eeb8b8091462002770578063f085f6dd14620027f8578063f0897db7146200281e5762000754565b8063e703a9e4146200250f578063ea8a1af0146200268a578063ec9cb2ce14620026965762000754565b8063d779c8a111620001e3578063d779c8a1146200242c578063e10533c6146200244c578063e2be8fe114620024aa578063e6f936f914620024ef5762000754565b8063d39c4faa1462002329578063d42ea9761462002384578063d734c53a14620023a45762000754565b8063aa0ac16f11620002fd578063c0647c2e1162000291578063c6e8dfd01162000267578063c6e8dfd0146200220b578063ca66f015146200223c578063cb1dc8cb146200225c578063d2e8a0fa146200227c5762000754565b8063c0647c2e1462002182578063c3f0a895146200218e578063c4521ffb146200219a5762000754565b8063b7d6477711620002d3578063b7d647771462001f18578063bc5864561462001f38578063bd9e06601462001f89578063be60fc0c1462001fe75762000754565b8063aa0ac16f1462001d0f578063b00b64281462001d54578063b20ba3371462001ee55762000754565b80639090fd85116200037557806394feb152116200034b57806394feb1521462001b3b5780639561aa321462001b905780639f75dfd91462001c36578063a6a8f17b1462001cbe5762000754565b80639090fd851462001a6357806391bec7121462001a8357806394e386241462001ab25762000754565b806384a6cd4d14620018cc578063859360f51462001965578063893d20e814620019ac5780638aa137f514620019f85780638aaeff8c1462001a335780638c2a4dae1462001a575762000754565b806351e213fc11620005a35780636dbbc67b11620004bf578063756b2e6c116200045357806379ce3cb2116200042957806379ce3cb214620017bc5780637f809381146200182d5780637f91fb7d146200184d57806380c86ba714620018ac5762000754565b8063756b2e6c14620016d05780637589adb7146200171a57806378bc0b0d14620017405762000754565b806370a9c997116200049557806370a9c99714620016065780637207b07f1462001669578063720e72e9146200168957806372ea182614620016c45762000754565b80636dbbc67b14620015955780636ea1944b14620015b55780636f78733b14620015e65762000754565b80635c030138116200053757806368e78011116200050d57806368e7801114620013bb5780636a78a815146200140c5780636d6a7e8f146200147d5780636d73c8bc14620015065762000754565b80635c030138146200126657806363a84c0414620012c1578063641375ad14620013325762000754565b8063586ca7ab1162000579578063586ca7ab14620011af57806358892b8614620011e057806359d585ee14620012145780635abf3202146200123a5762000754565b806351e213fc14620010e25780635666f9ac146200116957806357e0ebca14620011895762000754565b806328545c0d1162000693578063374b7d2211620006275780634773f6fc11620005fd5780634773f6fc1462000f9357806347dd48e014620010125780634828c43b14620010435780634f7e37bb14620010635762000754565b8063374b7d221462000d4e5780633c0e52451462000d9a57806340514a1a1462000e1f5762000754565b806330c676c9116200066957806330c676c91462000bed578063311851821462000c3657806331502f131462000cbe57806335ce1bd11462000d095762000754565b806328545c0d1462000b275780632a7cbfde1462000b905780632ca151221462000be15762000754565b806311ce5844116200070b578063141b422a11620006e1578063141b422a14620009a15780631c5422d21462000a1c5780631cb355401462000aa55780632512e6f11462000ae25762000754565b806311ce5844146200092a578063130c5985146200094a5780631314cf6614620009815762000754565b806301ffc9a7146200075957806304fce01514620007c15780630775cb0014620007e55780630cb61b3414620008365780630d9bfa8014620008be5780630ee2cb1014620008de575b600080fd5b620007a7600480360360208110156200077157600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062002da8565b604051808215151515815260200191505060405180910390f35b620007cb62002e0f565b604051808215151515815260200191505060405180910390f35b6200083460048036036040811015620007fd57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002e26565b005b6200084062002f04565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200088257808201518184015260208101905062000865565b50505050905090810190601f168015620008b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620008c8620030ad565b6040518082815260200191505060405180910390f35b620008e8620030ba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000934620030e4565b6040518082815260200191505060405180910390f35b6200097f600480360360208110156200096257600080fd5b81019080803563ffffffff16906020019092919050505062003108565b005b6200098b620031c4565b6040518082815260200191505060405180910390f35b620009da60048036036040811015620009b957600080fd5b810190808035906020019092919080359060200190929190505050620031e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000aa36004803603604081101562000a3457600080fd5b81019080803590602001909291908035906020019064010000000081111562000a5c57600080fd5b82018360208201111562000a6f57600080fd5b8035906020019184600183028401116401000000008311171562000a9257600080fd5b909192939192939050505062003299565b005b62000ae06004803603604081101562000abd57600080fd5b8101908080359060200190929190803515159060200190929190505050620033f2565b005b62000b116004803603602081101562000afa57600080fd5b8101908080359060200190929190505050620034e5565b6040518082815260200191505060405180910390f35b62000b766004803603604081101562000b3f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062003508565b604051808215151515815260200191505060405180910390f35b62000bdf6004803603604081101562000ba857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620037b1565b005b62000beb6200388f565b005b62000c1c6004803603602081101562000c0557600080fd5b810190808035906020019092919050505062003ed8565b604051808215151515815260200191505060405180910390f35b62000c656004803603602081101562000c4e57600080fd5b810190808035906020019092919050505062003efb565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000caa57808201518184015260208101905062000c8d565b505050509050019250505060405180910390f35b62000ced6004803603602081101562000cd657600080fd5b810190808035906020019092919050505062003f1f565b604051808260ff1660ff16815260200191505060405180910390f35b62000d386004803603602081101562000d2157600080fd5b810190808035906020019092919050505062003fc0565b6040518082815260200191505060405180910390f35b62000d7d6004803603602081101562000d6657600080fd5b810190808035906020019092919050505062003fe3565b604051808381526020018281526020019250505060405180910390f35b62000e096004803603606081101562000db257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004094565b6040518082815260200191505060405180910390f35b62000e29620045bf565b60405180868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101562000e7f57808201518184015260208101905062000e62565b50505050905090810190601f16801562000ead5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101562000ee857808201518184015260208101905062000ecb565b50505050905090810190601f16801562000f165780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101562000f5157808201518184015260208101905062000f34565b50505050905090810190601f16801562000f7f5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b620010106004803603602081101562000fab57600080fd5b810190808035906020019064010000000081111562000fc957600080fd5b82018360208201111562000fdc57600080fd5b8035906020019184600183028401116401000000008311171562000fff57600080fd5b9091929391929390505050620047c2565b005b62001041600480360360208110156200102a57600080fd5b810190808035906020019092919050505062004991565b005b6200104d62004a2d565b6040518082815260200191505060405180910390f35b620010e0600480360360208110156200107b57600080fd5b81019080803590602001906401000000008111156200109957600080fd5b820183602082011115620010ac57600080fd5b80359060200191846001830284011164010000000083111715620010cf57600080fd5b909192939192939050505062004a51565b005b6200112760048036036020811015620010fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004c20565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200117362004c8c565b6040518082815260200191505060405180910390f35b6200119362004c9c565b604051808260ff1660ff16815260200191505060405180910390f35b620011de60048036036020811015620011c757600080fd5b810190808035906020019092919050505062004cc8565b005b6200121260048036036020811015620011f857600080fd5b81019080803560ff16906020019092919050505062004cd7565b005b6200121e62004f27565b604051808260ff1660ff16815260200191505060405180910390f35b6200124462004f4a565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b620012ab600480360360208110156200127e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004f64565b6040518082815260200191505060405180910390f35b620012f060048036036020811015620012d957600080fd5b810190808035906020019092919050505062005067565b60405180861515151581526020018515151515815260200184151515158152602001831515151581526020018281526020019550505050505060405180910390f35b620013b9600480360360408110156200134a57600080fd5b8101908080359060200190929190803590602001906401000000008111156200137257600080fd5b8201836020820111156200138557600080fd5b80359060200191846020830284011164010000000083111715620013a857600080fd5b909192939192939050505062005143565b005b6200140a60048036036040811015620013d357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620051da565b005b6200143b600480360360208110156200142457600080fd5b81019080803590602001909291905050506200531d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001504600480360360408110156200149557600080fd5b810190808035906020019092919080359060200190640100000000811115620014bd57600080fd5b820183602082011115620014d057600080fd5b80359060200191846020830284011164010000000083111715620014f357600080fd5b909192939192939050505062005374565b005b62001593600480360360c08110156200151e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200540b565b005b6200159f62005a30565b6040518082815260200191505060405180910390f35b620015e460048036036020811015620015cd57600080fd5b810190808035906020019092919050505062005a54565b005b620015f062005a63565b6040518082815260200191505060405180910390f35b6200161062005a69565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200165557808201518184015260208101905062001638565b505050509050019250505060405180910390f35b6200167362005ac3565b6040518082815260200191505060405180910390f35b620016c260048036036040811015620016a157600080fd5b81019080803590602001909291908035906020019092919050505062005ac9565b005b620016ce62005bb2565b005b620016da620060dd565b6040518082600360200280838360005b8381101562001707578082015181840152602081019050620016ea565b5050505090500191505060405180910390f35b6200172462006152565b604051808260ff1660ff16815260200191505060405180910390f35b620017a6600480360360608110156200175857600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f82011690508083019250505050505091929192905050506200617e565b6040518082815260200191505060405180910390f35b620017eb60048036036020811015620017d457600080fd5b8101908080359060200190929190505050620061f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620018376200624f565b6040518082815260200191505060405180910390f35b62001892600480360360208110156200186557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200625c565b604051808215151515815260200191505060405180910390f35b620018b662006365565b6040518082815260200191505060405180910390f35b6200191160048036036020811015620018e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006389565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390f35b620019aa600480360360208110156200197d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062006491565b005b620019b6620068ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001a316004803603604081101562001a1057600080fd5b810190808035906020019092919080359060200190929190505050620069f9565b005b62001a3d62006ae2565b604051808215151515815260200191505060405180910390f35b62001a6162006af9565b005b62001a6d62006bd3565b6040518082815260200191505060405180910390f35b62001a8d62006c1d565b6040518082600781111562001a9e57fe5b60ff16815260200191505060405180910390f35b62001b396004803603604081101562001aca57600080fd5b81019080803590602001909291908035906020019064010000000081111562001af257600080fd5b82018360208201111562001b0557600080fd5b8035906020019184602083028401116401000000008311171562001b2857600080fd5b909192939192939050505062007516565b005b62001b8e6004803603608081101562001b5357600080fd5b8101908080359060200190929190803515159060200190929190803515159060200190929190803515159060200190929190505050620075ad565b005b62001bdf6004803603604081101562001ba857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062007923565b604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b62001c40620079b5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001c8257808201518184015260208101905062001c65565b50505050905090810190601f16801562001cb05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62001d0d6004803603604081101562001cd657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062007b5e565b005b62001d3e6004803603602081101562001d2757600080fd5b81019080803590602001909291905050506200846f565b6040518082815260200191505060405180910390f35b62001ee3600480360360a081101562001d6c57600080fd5b810190808035906020019064010000000081111562001d8a57600080fd5b82018360208201111562001d9d57600080fd5b8035906020019184602083028401116401000000008311171562001dc057600080fd5b9091929391929390803590602001909291908035906020019064010000000081111562001dec57600080fd5b82018360208201111562001dff57600080fd5b8035906020019184600183028401116401000000008311171562001e2257600080fd5b90919293919293908035906020019064010000000081111562001e4457600080fd5b82018360208201111562001e5757600080fd5b8035906020019184600183028401116401000000008311171562001e7a57600080fd5b90919293919293908035906020019064010000000081111562001e9c57600080fd5b82018360208201111562001eaf57600080fd5b8035906020019184600183028401116401000000008311171562001ed257600080fd5b9091929391929390505050620084bb565b005b62001f166004803603602081101562001efd57600080fd5b8101908080351515906020019092919050505062008d4a565b005b62001f226200957e565b6040518082815260200191505060405180910390f35b62001f876004803603604081101562001f5057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620095a2565b005b62001f9362009df4565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62002180600480360360e081101562001fff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200207d57600080fd5b8201836020820111156200209057600080fd5b80359060200191846001830284011164010000000083111715620020b357600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115620020e157600080fd5b820183602082011115620020f457600080fd5b803590602001918460208302840111640100000000831117156200211757600080fd5b9091929391929390803590602001906401000000008111156200213957600080fd5b8201836020820111156200214c57600080fd5b803590602001918460208302840111640100000000831117156200216f57600080fd5b909192939192939050505062009eee565b005b6200218c6200b3c7565b005b620021986200b712565b005b620021c960048036036020811015620021b257600080fd5b81019080803590602001909291905050506200b7ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200223a600480360360208110156200222357600080fd5b81019080803590602001909291905050506200b830565b005b620022466200b83a565b6040518082815260200191505060405180910390f35b620022666200b85e565b6040518082815260200191505060405180910390f35b620022ab600480360360208110156200229457600080fd5b81019080803590602001909291905050506200b882565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620022ed578082015181840152602081019050620022d0565b50505050905090810190601f1680156200231b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200236e600480360360208110156200234157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200b8a5565b6040518082815260200191505060405180910390f35b6200238e6200b8f1565b6040518082815260200191505060405180910390f35b620023d360048036036020811015620023bc57600080fd5b81019080803590602001909291905050506200b915565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562002418578082015181840152602081019050620023fb565b505050509050019250505060405180910390f35b620024366200b939565b6040518082815260200191505060405180910390f35b620024566200b946565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b620024d960048036036020811015620024c257600080fd5b81019080803590602001909291905050506200b990565b6040518082815260200191505060405180910390f35b620024f96200b9b3565b6040518082815260200191505060405180910390f35b62002688600480360360c08110156200252757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156200258557600080fd5b8201836020820111156200259857600080fd5b80359060200191846001830284011164010000000083111715620025bb57600080fd5b909192939192939080351515906020019092919080359060200190640100000000811115620025e957600080fd5b820183602082011115620025fc57600080fd5b803590602001918460208302840111640100000000831117156200261f57600080fd5b9091929391929390803590602001906401000000008111156200264157600080fd5b8201836020820111156200265457600080fd5b803590602001918460208302840111640100000000831117156200267757600080fd5b90919293919293905050506200b9fd565b005b620026946200bc9d565b005b620026e560048036036040811015620026ae57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200c3ee565b005b6200276e60048036036040811015620026ff57600080fd5b8101908080359060200190929190803590602001906401000000008111156200272757600080fd5b8201836020820111156200273a57600080fd5b803590602001918460208302840111640100000000831117156200275d57600080fd5b90919293919293905050506200cd05565b005b6200279f600480360360208110156200278857600080fd5b81019080803590602001909291905050506200cd9c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620027e4578082015181840152602081019050620027c7565b505050509050019250505060405180910390f35b620028026200ce7b565b604051808260ff1660ff16815260200191505060405180910390f35b620028286200cea6565b6040518082815260200191505060405180910390f35b6200286d600480360360208110156200285657600080fd5b81019080803590602001909291905050506200ceac565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620028b257808201518184015260208101905062002895565b505050509050019250505060405180910390f35b620028ff60048036036040811015620028de57600080fd5b8101908080359060200190929190803590602001909291905050506200ced0565b005b62002930600480360360208110156200291957600080fd5b81019080803590602001909291905050506200cfb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620029b7600480360360208110156200298a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200cfdc565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b62002a876004803603604081101562002a1857600080fd5b81019080803590602001909291908035906020019064010000000081111562002a4057600080fd5b82018360208201111562002a5357600080fd5b8035906020019184602083028401116401000000008311171562002a7657600080fd5b90919293919293905050506200d08e565b005b62002a936200d125565b6040518082815260200191505060405180910390f35b62002ab36200d149565b6040518082815260200191505060405180910390f35b62002b466004803603602081101562002ae157600080fd5b810190808035906020019064010000000081111562002aff57600080fd5b82018360208201111562002b1257600080fd5b8035906020019184600183028401116401000000008311171562002b3557600080fd5b90919293919293905050506200d193565b005b62002b526200d362565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562002b9457808201518184015260208101905062002b77565b50505050905090810190601f16801562002bc25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62002bda6200d50b565b604051808215151515815260200191505060405180910390f35b62002bfe6200d522565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62002c4a6200d54c565b6040518082815260200191505060405180910390f35b62002c8f6004803603602081101562002c7857600080fd5b81019080803590602001909291905050506200d570565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562002cd457808201518184015260208101905062002cb7565b505050509050019250505060405180910390f35b62002d176004803603602081101562002d0057600080fd5b81019080803590602001909291905050506200d594565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000601260019054906101000a900460ff16905090565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__63147abb7d9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b15801562002ec257600080fd5b505af415801562002ed7573d6000803e3d6000fd5b505050506040513d602081101562002eee57600080fd5b8101908080519060200190929190505050505050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e7369676e61747572654c6f670000000000000000000000008152506014019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801562002fa757600080fd5b505af415801562002fbc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562002fe757600080fd5b81019080805160405193929190846401000000008211156200300857600080fd5b838201915060208201858111156200301f57600080fd5b82518660018202830111640100000000821117156200303d57600080fd5b8083526020830192505050908051906020019080838360005b838110156200307357808201518184015260208101905062003056565b50505050905090810190601f168015620030a15780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601c80549050905090565b6000601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f41475245454d454e545f53544154455f4348414e47454400000000000000000081565b80601660156101000a81548163ffffffff021916908363ffffffff1602179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f9d21ab71e7e84fe89b2022ff8e6cc1ead2cbe7be8a637907ef2279d4b4d19bb43083604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a250565b7f41677265656d656e74204566666563746976652044617465000000000000000081565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff16801562003233575081601d600085815260200190815260200160002060000180549050115b156200328e57601d600084815260200190815260200160002060000182815481106200325b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062003293565b600090505b92915050565b620032a36200fd7d565b83816000018181525050620032b76200d6bf565b816020019060ff16908160ff168152505082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506200332b8160036200d6c890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007fddc3e5bf46fc6e7ffe2506d0f0dcba0625f68e6db07bf879110ea3419e47bc2930868686604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a250505050565b620033fc6200fd7d565b82816000018181525050620034106200dfb8565b816020019060ff16908160ff168152505081816040019015159081151581525050620034478160036200d6c890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4000be176d38d7c89b64ced66d386475db613bf81ddc0f1e78d0fe91585cee3f308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a2505050565b6000620034fd8260036200dfc190919063ffffffff16565b60e001519050919050565b6000601d600084815260200190815260200160002060010160039054906101000a900460ff1615620037ab57601d600084815260200190815260200160002060010160009054906101000a900460ff1662003605576000601d600085815260200190815260200160002060000180549050118015620035ff57508173ffffffffffffffffffffffffffffffffffffffff16601d6000858152602001908152602001600020600001600081548110620035bc57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b620037a8565b601d60008481526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200369d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003652575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156200374557808201518184015260208101905062003728565b50505050905001935050505060206040518083038186803b1580156200376a57600080fd5b505af41580156200377f573d6000803e3d6000fd5b505050506040513d60208110156200379657600080fd5b81019080805190602001909291905050505b90505b92915050565b600a73__$5e3d4bda46c81e962f48c99e99f980d175$__6357b1a3fb9091848460016040518563ffffffff1660e01b8152600401808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018215151515815260200194505050505060206040518083038186803b1580156200384d57600080fd5b505af415801562003862573d6000803e3d6000fd5b505050506040513d60208110156200387957600080fd5b8101908080519060200190929190505050505050565b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156200390d57600080fd5b505af415801562003922573d6000803e3d6000fd5b505050506040513d60408110156200393957600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620039b06200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562003a13578082015181840152602081019050620039f6565b50505050905090810190601f16801562003a415780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f44656661756c7441637469766541677265656d656e742e7369676e28290000008152506020018481038252602481526020018062011ae4602491396040019550505050505060006040518083038186803b15801562003aae57600080fd5b505af415801562003ac3573d6000803e3d6000fd5b505050506000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141562003ed45781601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a273__$4bfedefce7d76215a620e01b46747fdc01$__6306fb063b306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801562003d4b57600080fd5b505af415801562003d60573d6000803e3d6000fd5b505050506040513d602081101562003d7757600080fd5b81019080805190602001909291905050501562003ed3576000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050141562003ed2576002601660196101000a81548160ff0219169083600781111562003e1757fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff16600781111562003e7b57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a25b5b5b5050565b600062003ef08260036200dfc190919063ffffffff16565b604001519050919050565b606062003f138260036200dfc190919063ffffffff16565b61020001519050919050565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__635db8e8dd9091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801562003f7c57600080fd5b505af415801562003f91573d6000803e3d6000fd5b505050506040513d602081101562003fa857600080fd5b81019080805190602001909291905050509050919050565b600062003fd88260036200dfc190919063ffffffff16565b608001519050919050565b600080600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63dfabdf469091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156200404057600080fd5b505af415801562004055573d6000803e3d6000fd5b505050506040513d60408110156200406c57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000808484604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019250505060405160208183030381529060405280519060200120905060006005600083815260200190815260200160002060010160010154146200413c576005600082815260200190815260200160002060010160010154915050620045b8565b6005600082815260200190815260200160002060010160020160020160149054906101000a900460ff16156200459357600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200434a5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614620042326200eec4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200429557808201518184015260208101905062004278565b50505050905090810190601f168015620042c35780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e67657453636f706500008152506020018481038252606581526020018062011ea9606591396080019550505050505060006040518083038186803b1580156200433057600080fd5b505af415801562004345573d6000803e3d6000fd5b505050505b6000806005600084815260200190815260200160002060010160020173__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__631dcb1e9a9091876040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604080518083038186803b158015620043ea57600080fd5b505af4158015620043ff573d6000803e3d6000fd5b505050506040513d60408110156200441657600080fd5b8101908080519060200190929190805190602001909291905050509150915060008273ffffffffffffffffffffffffffffffffffffffff16632512e6f1836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200448957600080fd5b505afa1580156200449e573d6000803e3d6000fd5b505050506040513d6020811015620044b557600080fd5b81019080805190602001909291905050501415620044f9577f454d5054595f53434f50450000000000000000000000000000000000000000009350505050620045b8565b8173ffffffffffffffffffffffffffffffffffffffff16632512e6f1826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200454b57600080fd5b505afa15801562004560573d6000803e3d6000fd5b505050506040513d60208110156200457757600080fd5b81019080805190602001909291905050509350505050620045b8565b7f454d5054595f53434f50450000000000000000000000000000000000000000009150505b9392505050565b60008060608060606011549450620045d66200ef01565b9350600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620046725780601f10620046465761010080835404028352916020019162004672565b820191906000526020600020905b8154815290600101906020018083116200465457829003601f168201915b50505050509250600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620047135780601f10620046e75761010080835404028352916020019162004713565b820191906000526020600020905b815481529060010190602001808311620046f557829003601f168201915b5050505050915060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620047b45780601f106200478857610100808354040283529160200191620047b4565b820191906000526020600020905b8154815290600101906020018083116200479657829003601f168201915b505050505090509091929394565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d65746572730000000000000081525060190190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200489757600080fd5b505af4158015620048ac573d6000803e3d6000fd5b505050506040513d6020811015620048c357600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fc9690fead6289b57dc690e1c50cd5960bb3ec3d16c01dc445e9059d7c05a27c4308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63924e39759091836040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015620049ec57600080fd5b505af415801562004a01573d6000803e3d6000fd5b505050506040513d602081101562004a1857600080fd5b81019080805190602001909291905050505050565b7f414e3a2f2f61677265656d656e7473000000000000000000000000000000000081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e6576656e744c6f670000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b15801562004b2657600080fd5b505af415801562004b3b573d6000803e3d6000fd5b505050506040513d602081101562004b5257600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007fa59f1bdf986536320b730fb73d7d2707eb7b8312a743e1bdc144f0d785572683308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600360010180549050905090565b6000600260006003811062004cad57fe5b602091828204019190069054906101000a900460ff16905090565b62004cd4813362002e26565b50565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62004d44833362003508565b1562004d4f6200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562004db257808201518184015260208101905062004d95565b50505050905090810190601f16801562004de05780820380516001836020036101000a031916815260200191505b508481038352602b815260200180620117b2602b9139604001848103825260348152602001806201189e603491396040019550505050505060006040518083038186803b15801562004e3157600080fd5b505af415801562004e46573d6000803e3d6000fd5b5050505081601660196101000a81548160ff0219169083600781111562004e6957fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff16600781111562004ecd57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a25050565b6000601660199054906101000a900460ff16600781111562004f4557fe5b905090565b6000601660159054906101000a900463ffffffff16905090565b600062005060600260038060200260405190810160405280929190826003801562004fcb576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841162004f935790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156200501757600080fd5b505afa1580156200502c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060608110156200505257600080fd5b81019080919050506200efb7565b9050919050565b6000806000806000601d600087815260200190815260200160002060010160039054906101000a900460ff16945084156200512b57601d600087815260200190815260200160002060010160009054906101000a900460ff169350601d600087815260200190815260200160002060010160019054906101000a900460ff169250601d600087815260200190815260200160002060010160029054906101000a900460ff169150601d60008781526020019081526020016000206000018054905090505b84848484849450945094509450945091939590929450565b6200514d6200fd7d565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816101200181905250620051ac6200f07a565b816020019060ff16908160ff1681525050620051d38160036200d6c890919063ffffffff16565b5050505050565b620051e46200fd7d565b82816000018181525050620051f86200f083565b816020019060ff16908160ff1681525050818160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050620052578160036200d6c890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f5f3782aabdded4c30d0e717eefa344f09585650af94f12a59e413c35c874aa6e308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a2505050565b60006013805490508210156200536e57601382815481106200533b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506200536f565b5b919050565b6200537e6200fd7d565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050816102c00181905250620053dd6200f08c565b816020019060ff16908160ff1681525050620054048160036200d6c890919063ffffffff16565b5050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146200545f6200f095565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620054c2578082015181840152602081019050620054a5565b50505050905090810190601f168015620054f05780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603581526020018062011f74603591396040019550505050505060006040518083038186803b1580156200555d57600080fd5b505af415801562005572573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600086148015620055a15750600085145b620055ab6200eec4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200560e578082015181840152602081019050620055f1565b50505050905090810190601f1680156200563c5780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f41627374726163744164647265737353636f7065732e73657453636f706500008152506020018481038252603681526020018062011a85603691396040019550505050505060006040518083038186803b158015620056a957600080fd5b505af4158015620056be573d6000803e3d6000fd5b5050505060008686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001925050506040516020818303038152906040528051906020012090506005600082815260200190815260200160002060000160149054906101000a900460ff166200577a5760068190806001815401808255809150509060018203906000526020600020016000909192909190915055505b866005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550856005600083815260200190815260200160002060010160000181905550600085146200581a57846005600083815260200190815260200160002060010160010181905550620058ec565b60405180608001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525060056000838152602001908152602001600020600101600201600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff0219169083151502179055509050505b60016005600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507f414e3a2f2f656e7469746965732f616464726573732d73636f706573000000007f757fff527744f487d9c9ec5df491336680ef60eccf50f97a494eb216e66725b930898989898989604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200197505050505050505060405180910390a250505050505050565b7f414e3a2f2f61677265656d656e742d746f2d706172747900000000000000000081565b62005a608133620037b1565b50565b60095481565b6060600680548060200260200160405190810160405280929190818152602001828054801562005ab957602002820191906000526020600020905b81548152602001906001019080831162005aa4575b5050505050905090565b60085481565b62005ad36200fd7d565b8281600001818152505062005ae76200f0d2565b816020019060ff16908160ff1681525050818160a001818152505062005b188160036200d6c890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f4fae6699eb0f881c4f8df1e7d66305898984bd24cb684f775238368f1d77acd3308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff1662005be66200f0e3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562005c4957808201518184015260208101905062005c2c565b50505050905090810190601f16801562005c775780820380516001836020036101000a031916815260200191505b508481038352601e8152602001807f416273747261637452656e657761626c652e7265736574566f746573282900008152506020018481038252602f81526020018062011c29602f91396040019550505050505060006040518083038186803b15801562005ce457600080fd5b505af415801562005cf9573d6000803e3d6000fd5b5050505060008090505b601380549050811015620060d05760006013828154811062005d2157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055506000601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f76c512528b3348a170fce985b7603a2ba143bdf1e4645153b4d2952e99573e093083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a250808060010191505062005d03565b50620060db6200f120565b565b620060e76200fe92565b600260038060200260405190810160405280929190826003801562006148576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620061105790505b5050505050905090565b600060026001600381106200616357fe5b602091828204019190069054906101000a900460ff16905090565b6000620061f16002600380602002604051908101604052809291908260038015620061e5576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620061ad5790505b5050505050836200efb7565b9050919050565b6000601b805490508210156200624957601b82815481106200621657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506200624a565b5b919050565b6000601b80549050905090565b600080600090505b601b805490508110156200635a578273ffffffffffffffffffffffffffffffffffffffff1660196000601b84815481106200629b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200634c57600191505062006360565b808060010191505062006264565b50600090505b919050565b7f41475245454d454e545f5041525449455300000000000000000000000000000081565b6000806000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169150601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490509193909250565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160039054906101000a900460ff166200651f6200f2a0565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200658257808201518184015260208101905062006565565b50505050905090810190601f168015620065b05780820380516001836020036101000a031916815260200191505b508481038352603281526020018062011df5603291396040018481038252603f81526020018062011a22603f91396040019550505050505060006040518083038186803b1580156200660157600080fd5b505af415801562006616573d6000803e3d6000fd5b50505050601d600060405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001208152602001908152602001600020600001600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620066b25781620066b4565b335b90806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff02191690831515021790555050565b600080601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050116200695f576000620069f4565b601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001600081548110620069c857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b905090565b62006a036200fd7d565b8281600001818152505062006a176200f2dd565b816020019060ff16908160ff1681525050818160e001818152505062006a488160036200d6c890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f175284be8d23ffeaff64148e54dddf392131e21bde39e27d34c23925799a9d3b308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b6000601260009054906101000a900460ff16905090565b601260009054906101000a900460ff1662006bd1576001601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f38afd8082def1261a99c6531cd2d0f21a60d79baec07015b980d61457b75243430601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a25b565b60405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60078081111562006c4657fe5b601660199054906101000a900460ff16600781111562006c6257fe5b1462006c6d6200eec4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562006cd057808201518184015260208101905062006cb3565b50505050905090810190601f16801562006cfe5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602a81526020018062011dcb602a91396040019550505050505060006040518083038186803b15801562006d6b57600080fd5b505af415801562006d80573d6000803e3d6000fd5b5050505060003073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801562006dcd57600080fd5b505afa15801562006de2573d6000803e3d6000fd5b505050506040513d602081101562006df957600080fd5b8101908080519060200190929190505050905060003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490508015801562006f52575073__$fdd731fada9905693765f0d2a681d4c856$__6392302b878362006e6e6200f2e6565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801562006f1457600080fd5b505af415801562006f29573d6000803e3d6000fd5b505050506040513d602081101562006f4057600080fd5b81019080805190602001909291905050505b156200703e578173ffffffffffffffffffffffffffffffffffffffff1663ddc5dd51336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001807f454d5054595f53434f504500000000000000000000000000000000000000000081525060200191505060206040518083038186803b15801562006ffe57600080fd5b505afa15801562007013573d6000803e3d6000fd5b505050506040513d60208110156200702a57600080fd5b810190808051906020019092919050505090505b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215620070646200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620070c7578082015181840152602081019050620070aa565b50505050905090810190601f168015620070f55780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252602e81526020018062011975602e91396040019550505050505060006040518083038186803b1580156200716257600080fd5b505af415801562007177573d6000803e3d6000fd5b505050506000600560078111156200718b57fe5b601660199054906101000a900460ff166007811115620071a757fe5b14158015620071de575060036007811115620071bf57fe5b601660199054906101000a900460ff166007811115620071db57fe5b14155b801562007213575060046007811115620071f457fe5b601660199054906101000a900460ff1660078111156200721057fe5b14155b905080156200736b5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000601b8054905011620072496200f3c4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620072ac5780820151818401526020810190506200728f565b50505050905090810190601f168015620072da5780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f44656661756c7441637469766541677265656d656e742e7265646163742829008152506020018481038252604d815260200180620119a3604d91396060019550505050505060006040518083038186803b1580156200734757600080fd5b505af41580156200735c573d6000803e3d6000fd5b505050506200736a6200f401565b5b6007601660196101000a81548160ff021916908360078111156200738b57fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff166007811115620073ef57fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a2620074717f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f59e565b7f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f24b79a501d8660d52a906ddc5071c1494af214a1443ba687072557c16ef96142600030604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2601660199054906101000a900460ff16935050505090565b620075206200fd7d565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161020001819052506200757f6200f6cc565b816020019060ff16908160ff1681525050620075a68160036200d6c890919063ffffffff16565b5050505050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6200761a833362003508565b15620076256200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620076885780820151818401526020810190506200766b565b50505050905090810190601f168015620076b65780820380516001836020036101000a031916815260200191505b508481038352602b815260200180620117b2602b9139604001848103825260348152602001806201189e603491396040019550505050505060006040518083038186803b1580156200770757600080fd5b505af41580156200771c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600088815260200190815260200160002060010160039054906101000a900460ff16620077686200f6d5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620077cb578082015181840152602081019050620077ae565b50505050905090810190601f168015620077f95780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011da6602591396040018481038252603481526020018062012011603491396040019550505050505060006040518083038186803b1580156200784a57600080fd5b505af41580156200785f573d6000803e3d6000fd5b5050505083601d600087815260200190815260200160002060010160006101000a81548160ff02191690831515021790555082601d600087815260200190815260200160002060010160016101000a81548160ff02191690831515021790555081601d600087815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600087815260200190815260200160002060010160036101000a81548160ff0219169083151502179055505050505050565b600080600080620079918686604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200192505050604051602081830303815290604052805190602001206200d594565b90919293945090919293508094508195508296508397505050505092959194509250565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b15801562007a5857600080fd5b505af415801562007a6d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562007a9857600080fd5b810190808051604051939291908464010000000082111562007ab957600080fd5b8382019150602082018581111562007ad057600080fd5b825186600182028301116401000000008211171562007aee57600080fd5b8083526020830192505050908051906020019080838360005b8381101562007b2457808201518184015260208101905062007b07565b50505050905090810190601f16801562007b525780820380516001836020036101000a031916815260200191505b50604052505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801562007c04575062007c0260405160200180807f6f626a6563742e61646d696e6973747261746f720000000000000000000000008152506014019050604051602081830303815290604052805190602001203362003508565b155b62007c0e6200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007c7157808201518184015260208101905062007c54565b50505050905090810190601f16801562007c9f5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011c8d60259139604001848103825260348152602001806201189e603491396040019550505050505060006040518083038186803b15801562007cf057600080fd5b505af415801562007d05573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff161562007d526200f712565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007db557808201518184015260208101905062007d98565b50505050905090810190601f16801562007de35780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011c8d60259139604001848103825260398152602001806201173c603991396040019550505050505060006040518083038186803b15801562007e3457600080fd5b505af415801562007e49573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160019054906101000a900460ff161562007e966200f3c4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562007ef957808201518184015260208101905062007edc565b50505050905090810190601f16801562007f275780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011c8d602591396040018481038252602981526020018062011abb602991396040019550505050505060006040518083038186803b15801562007f7857600080fd5b505af415801562007f8d573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120841480156200806057506001601d600060405160200180807f6f626a6563742e61646d696e6973747261746f72000000000000000000000000815250601401905060405160208183030381529060405280519060200120815260200190815260200160002060000180549050145b6200806a6200f3c4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620080cd578082015181840152602081019050620080b0565b50505050905090810190601f168015620080fb5780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011c8d602591396040018481038252602d81526020018062011d79602d91396040019550505050505060006040518083038186803b1580156200814c57600080fd5b505af415801562008161573d6000803e3d6000fd5b50505050600080600090505b601d6000858152602001908152602001600020600001805490508110156200831c578273ffffffffffffffffffffffffffffffffffffffff16601d60008681526020019081526020016000206000018281548110620081c857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200830e576001915060008190505b6001601d600087815260200190815260200160002060000180549050038110156200830757601d600086815260200190815260200160002060000160018201815481106200826457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601d60008781526020019081526020016000206000018281548110620082b157fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806001019150506200821a565b506200831c565b80806001019150506200816d565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8215620083436200f712565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620083a657808201518184015260208101905062008389565b50505050905090810190601f168015620083d45780820380516001836020036101000a031916815260200191505b508481038352602581526020018062011c8d602591396040018481038252603081526020018062011fa9603091396040019550505050505060006040518083038186803b1580156200842557600080fd5b505af41580156200843a573d6000803e3d6000fd5b50505050601d60008481526020019081526020016000206000018054809190600190036200846991906200feb4565b50505050565b60007f41475245454d454e545f50415254494553000000000000000000000000000000821415620084a857601b805490509050620084b6565b620084b3826200f74f565b90505b919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef60008b8b905014620084e66200eec4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620085495780820151818401526020810190506200852c565b50505050905090810190601f168015620085775780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d730000008152506020018481038252603881526020018062011fd9603891396040019550505050505060006040518083038186803b158015620085e457600080fd5b505af4158015620085f9573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8a8a90508911620086276200eec4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200868a5780820151818401526020810190506200866d565b50505050905090810190601f168015620086b85780820380516001836020036101000a031916815260200191505b508481038352601d8152602001807f416273747261637452656e657761626c652e646566696e655465726d730000008152506020018481038252604b815260200180620118fe604b91396060019550505050505060006040518083038186803b1580156200872557600080fd5b505af41580156200873a573d6000803e3d6000fd5b50505050888860139190620087519291906200fee3565b50866011819055508585600e91906200876c9291906200ff88565b508383600f9190620087809291906200ff88565b50818160109190620087949291906200ff88565b506200879f62005bb2565b3073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c204f70656e7320417400000000000000000000000000000000600e6040518363ffffffff1660e01b81526004018083815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015620088805780601f10620088545761010080835404028352916020019162008880565b820191906000526020600020905b8154815290600101906020018083116200886257829003601f168201915b50509350505050600060405180830381600087803b158015620088a257600080fd5b505af1158015620088b7573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f52656e6577616c20436c6f736573204174000000000000000000000000000000600f6040518363ffffffff1660e01b815260040180838152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156200899c5780601f1062008970576101008083540402835291602001916200899c565b820191906000526020600020905b8154815290600101906020018083116200897e57829003601f168201915b50509350505050600060405180830381600087803b158015620089be57600080fd5b505af1158015620089d3573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16631c5422d27f457874656e642045787069726174696f6e20427900000000000000000000000060106040518363ffffffff1660e01b8152600401808381526020018060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008ab85780601f1062008a8c5761010080835404028352916020019162008ab8565b820191906000526020600020905b81548152906001019060200180831162008a9a57829003601f168201915b50509350505050600060405180830381600087803b15801562008ada57600080fd5b505af115801562008aef573d6000803e3d6000fd5b505050507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fa4607fdd9293c6f4b8b00c658e9537cb8c9962323efb992b43517d29d462fff73062008b406200ef01565b601154600e600f6010604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200180602001806020018060200184810384528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008c1c5780601f1062008bf05761010080835404028352916020019162008c1c565b820191906000526020600020905b81548152906001019060200180831162008bfe57829003601f168201915b505084810383528681815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008ca35780601f1062008c775761010080835404028352916020019162008ca3565b820191906000526020600020905b81548152906001019060200180831162008c8557829003601f168201915b505084810382528581815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801562008d2a5780601f1062008cfe5761010080835404028352916020019162008d2a565b820191906000526020600020905b81548152906001019060200180831162008d0c57829003601f168201915b5050995050505050505050505060405180910390a2505050505050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601260009054906101000a900460ff161562008d7f6200f0e3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562008de257808201518184015260208101905062008dc5565b50505050905090810190601f16801562008e105780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252602381526020018062011d35602391396040019550505050505060006040518083038186803b15801562008e7d57600080fd5b505af415801562008e92573d6000803e3d6000fd5b5050505060008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801562008f1457600080fd5b505af415801562008f29573d6000803e3d6000fd5b505050506040513d604081101562008f4057600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161462008fb76200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200901a57808201518184015260208101905062008ffd565b50505050905090810190601f168015620090485780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252603081526020018062011e4a603091396040019550505050505060006040518083038186803b158015620090b557600080fd5b505af4158015620090ca573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615620091436200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620091a657808201518184015260208101905062009189565b50505050905090810190601f168015620091d45780820380516001836020036101000a031916815260200191505b508481038352601c8152602001807f416273747261637452656e657761626c652e63617374566f74652829000000008152506020018481038252604181526020018062011b2e604191396060019550505050505060006040518083038186803b1580156200924157600080fd5b505af415801562009256573d6000803e3d6000fd5b5050505081601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555042601460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d6672616e636869736565000000007f51b47958068fc9bea1acf9a821d66c2e1bd06eb6261035948b9185300cbcac5b3083601460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16601460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16601460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281526020019550505050505060405180910390a2620095796200f120565b505050565b7f414e3a2f2f656e7469746965732f616464726573732d73636f7065730000000081565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6200960f833362003508565b156200961a6200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200967d57808201518184015260208101905062009660565b50505050905090810190601f168015620096ab5780820380516001836020036101000a031916815260200191505b508481038352602b815260200180620117b2602b9139604001848103825260348152602001806201189e603491396040019550505050505060006040518083038186803b158015620096fc57600080fd5b505af415801562009711573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600086815260200190815260200160002060010160039054906101000a900460ff16156200975e6200f712565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620097c1578082015181840152602081019050620097a4565b50505050905090810190601f168015620097ef5780820380516001836020036101000a031916815260200191505b50848103835260248152602001806201171860249139604001848103825260398152602001806201173c603991396040019550505050505060006040518083038186803b1580156200984057600080fd5b505af415801562009855573d6000803e3d6000fd5b50505050601d600084815260200190815260200160002060010160009054906101000a900460ff161562009aab57601d60008481526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200991b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620098d0575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b83811015620099c3578082015181840152602081019050620099a6565b50505050905001935050505060206040518083038186803b158015620099e857600080fd5b505af4158015620099fd573d6000803e3d6000fd5b505050506040513d602081101562009a1457600080fd5b810190808051906020019092919050505062009aa557601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b62009def565b6000601d600085815260200190815260200160002060000180549050141562009b4e57601d60008481526020019081526020016000206000018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062009dee565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a1369962009b726200f2a0565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562009bcb57808201518184015260208101905062009bae565b50505050905090810190601f16801562009bf95780820380516001836020036101000a031916815260200191505b5084810383526024815260200180620117186024913960400184810382526083815260200180620116696083913960a00194505050505060006040518083038186803b15801562009c4957600080fd5b505af415801562009c5e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101562009c8957600080fd5b810190808051604051939291908464010000000082111562009caa57600080fd5b8382019150602082018581111562009cc157600080fd5b825186600182028301116401000000008211171562009cdf57600080fd5b8083526020830192505050908051906020019080838360005b8381101562009d1557808201518184015260208101905062009cf8565b50505050905090810190601f16801562009d435780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562009db257808201518184015260208101905062009d95565b50505050905090810190601f16801562009de05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5b505050565b60405160200180807f6765744164647265737353636f70654b657973282900000000000000000000008152506015019050604051602081830303815290604052805190602001206040516020018080620120e660259139602501905060405160208183030381529060405280519060200120604051602001808062011cd960279139602701905060405160208183030381529060405280519060200120604051602001808062011949602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011b6f604091396040019050604051602081830303815290604052805190602001201818181881565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600160009054906101000a900460ff1662009f226200f3c4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562009f8557808201518184015260208101905062009f68565b50505050905090810190601f16801562009fb35780820380516001836020036101000a031916815260200191505b508481038352602a8152602001806201163f602a91396040018481038252602981526020018062011875602991396040019550505050505060006040518083038186803b1580156200a00457600080fd5b505af41580156200a019573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff16146200a0716200f095565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a0d45780820151818401526020810190506200a0b7565b50505050905090810190601f1680156200a1025780820380516001836020036101000a031916815260200191505b5084810383526021815260200180620120c5602191396040018481038252602e81526020018062012097602e91396040019550505050505060006040518083038186803b1580156200a15357600080fd5b505af41580156200a168573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146200a1c06200f095565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a2235780820151818401526020810190506200a206565b50505050905090810190601f1680156200a2515780820380516001836020036101000a031916815260200191505b5084810383526021815260200180620120c5602191396040018481038252602c815260200180620116ec602c91396040019550505050505060006040518083038186803b1580156200a2a257600080fd5b505af41580156200a2b7573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff16146200a30f6200f095565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a3725780820151818401526020810190506200a355565b50505050905090810190601f1680156200a3a05780820380516001836020036101000a031916815260200191505b5084810383526021815260200180620120c5602191396040018481038252602381526020018062011e27602391396040019550505050505060006040518083038186803b1580156200a3f157600080fd5b505af41580156200a406573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8b73ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200a46b57600080fd5b505afa1580156200a480573d6000803e3d6000fd5b505050506040513d60208110156200a49757600080fd5b8101908080519060200190929190505050156200a4b36200f0e3565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200a5165780820151818401526020810190506200a4f9565b50505050905090810190601f1680156200a5445780820380516001836020036101000a031916815260200191505b5084810383526021815260200180620120c560219139604001848103825260188152602001807f417263686574797065206d7573742062652061637469766500000000000000008152506020019550505050505060006040518083038186803b1580156200a5b157600080fd5b505af41580156200a5c6573d6000803e3d6000fd5b505050506200a739828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b73ffffffffffffffffffffffffffffffffffffffff1663a1da76d96040518163ffffffff1660e01b815260040160006040518083038186803b1580156200a65757600080fd5b505afa1580156200a66c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200a69757600080fd5b81019080805160405193929190846401000000008211156200a6b857600080fd5b838201915060208201858111156200a6cf57600080fd5b82518660208202830111640100000000821117156200a6ed57600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200a7265780820151818401526020810190506200a709565b505050509050016040525050506200f7f0565b6200a83a60405160200180807f6765744164647265737353636f70654b657973282900000000000000000000008152506015019050604051602081830303815290604052805190602001206040516020018080620120e660259139602501905060405160208183030381529060405280519060200120604051602001808062011cd960279139602701905060405160208183030381529060405280519060200120604051602001808062011949602c9139602c01905060405160208183030381529060405280519060200120604051602001808062011b6f60409139604001905060405160208183030381529060405280519060200120181818186200fbfd565b89601560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555088601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008787905011156200a9dd57601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e70726976617465506172616d6574657273000000000000008152506019019050604051602081830303815290604052805190602001208a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200a99e57600080fd5b505af41580156200a9b3573d6000803e3d6000fd5b505050506040513d60208110156200a9ca57600080fd5b8101908080519060200190929190505050505b84601660146101000a81548160ff0219169083151502179055508383601b91906200aa0a9291906200fee3565b508181601c91906200aa1e9291906200fee3565b506001601660196101000a81548160ff021916908360078111156200aa3f57fe5b02179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506000601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f019050604051602081830303815290604052805190602001208152602001908152602001600020600001816200ac8391906200feb4565b5087601d600060405160200180807f61677265656d656e742e6f776e65720000000000000000000000000000000000815250600f0190506040516020818303038152906040528051906020012081526020019081526020016000206000016000815481106200acee57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160026101000a81548160ff0219169083151502179055506001601d600060405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e01905060405160208183030381529060405280519060200120815260200190815260200160002060010160036101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007faf1209150c79d19135c2cbf62ba482ac99586079247aa53c0e25423693da5d1e308c8c8c8c8c8c601660199054906101000a900460ff1660078111156200af6f57fe5b601660159054906101000a900463ffffffff16604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001861515151581526020018560ff1660ff1681526020018463ffffffff1663ffffffff1681526020018381038352888882818152602001925080828437600081840152601f19601f8201169050808301925050508381038252600081526020016020019b50505050505050505050505060405180910390a260008090505b848490508110156200b20b577f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007f426746c69dc5d87db25ff2f3ade2f69ac26e1c759cf6be9a11becea41e605ddc308787858181106200b12f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16600080604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a280806001019150506200b0d3565b600090505b828290508110156200b30b577f414e3a2f2f676f7665726e696e672d61677265656d656e7473000000000000007fe7a1c84892a680b6fb7a2d501b58329e31a92d1af2cd03e6b97c3e74dec3dffd308585858181106200b26c57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a280806001019150506200b210565b3073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e74204372656174696f6e2044617465000000000000000000426040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200b38757600080fd5b505af11580156200b39c573d6000803e3d6000fd5b505050505060018060006101000a81548160ff02191690831515021790555050505050505050505050565b601260009054906101000a900460ff16156200b710576000601260006101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fd999895ef4e74c2e812b1770fc1d6fb3b5cd235ba2acb0429f95846e6ca99a6f30601260009054906101000a900460ff1642604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390a2601260019054906101000a900460ff16156200b70f5773__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000600d54146200b4df6200f3c4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200b5425780820151818401526020810190506200b525565b50505050905090810190601f1680156200b5705780820380516001836020036101000a031916815260200191505b508481038352602481526020018062011a61602491396040018481038252603d81526020018062011775603d91396040019550505050505060006040518083038186803b1580156200b5c157600080fd5b505af41580156200b5d6573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742045787069726174696f6e204461746500000000000000600d546040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200b65857600080fd5b505af11580156200b66d573d6000803e3d6000fd5b505050506000600d819055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007f065060ddcc74fdb42bd83d60625128b9acef117e3fe99b8a50cdfeb0d12b791c306200b6c66200ef01565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a25b5b565b6003601660196101000a81548160ff021916908360078111156200b73257fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200b79657fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a2565b6000601c82815481106200b7fe57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600d8190555050565b7f41677265656d656e74204372656174696f6e204461746500000000000000000081565b7f41677265656d656e742043616e63656c6174696f6e204461746500000000000081565b60606200b89a8260036200dfc190919063ffffffff16565b606001519050919050565b6000601960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b7f414e3a2f2f646174612d73746f7261676500000000000000000000000000000081565b60606200b92d8260036200dfc190919063ffffffff16565b61014001519050919050565b6000601380549050905090565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b60006200b9a88260036200dfc190919063ffffffff16565b60a001519050919050565b60405160200180807f6f626a6563742e61646d696e6973747261746f7200000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200ba216200f3c4565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200ba7a5780820151818401526020810190506200ba5d565b50505050905090810190601f1680156200baa85780820380516001836020036101000a031916815260200191505b5084810383526052815260200180620120456052913960600184810382526098815260200180620117dd6098913960a00194505050505060006040518083038186803b1580156200baf857600080fd5b505af41580156200bb0d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200bb3857600080fd5b81019080805160405193929190846401000000008211156200bb5957600080fd5b838201915060208201858111156200bb7057600080fd5b82518660018202830111640100000000821117156200bb8e57600080fd5b8083526020830192505050908051906020019080838360005b838110156200bbc45780820151818401526020810190506200bba7565b50505050905090810190601f1680156200bbf25780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200bc615780820151818401526020810190506200bc44565b50505050905090810190601f1680156200bc8f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156200bd1b57600080fd5b505af41580156200bd30573d6000803e3d6000fd5b505050506040513d60408110156200bd4757600080fd5b8101908080519060200190929190805190602001909291905050509150915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146200bdba6200ee87565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200be1d5780820151818401526020810190506200be00565b50505050905090810190601f1680156200be4b5780820380516001836020036101000a031916815260200191505b508481038352602181526020018062011d58602191396040018481038252602681526020018062011b08602691396040019550505050505060006040518083038186803b1580156200be9c57600080fd5b505af41580156200beb1573d6000803e3d6000fd5b50505050600060078111156200bec357fe5b601660199054906101000a900460ff1660078111156200bedf57fe5b14806200bf135750600160078111156200bef557fe5b601660199054906101000a900460ff1660078111156200bf1157fe5b145b156200c0e55781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200bfeb6200f401565b7f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a26200c3ea565b600260078111156200c0f357fe5b601660199054906101000a900460ff1660078111156200c10f57fe5b14156200c3e9576000601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c3e85781601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042601a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f414e3a2f2f61677265656d656e742d746f2d70617274790000000000000000007fb1f29906146cc7d490b7c500db434c32bb685a3b4ab06c858a51eb601f134f3e30838542604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a260008090505b601b805490508110156200c3e6576000601a6000601b84815481106200c34657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156200c3bc576200c3e6565b6001601b80549050038114156200c3d8576200c3d76200f401565b5b80806001019150506200c324565b505b5b5b5050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160039054906101000a900460ff16156200c4376200f712565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c49a5780820151818401526020810190506200c47d565b50505050905090810190601f1680156200c4c85780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011cb260279139604001848103825260398152602001806201173c603991396040019550505050505060006040518083038186803b1580156200c51957600080fd5b505af41580156200c52e573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d600085815260200190815260200160002060010160029054906101000a900460ff16156200c57b6200f3c4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c5de5780820151818401526020810190506200c5c1565b50505050905090810190601f1680156200c60c5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011cb2602791396040018481038252602c815260200180620118d2602c91396040019550505050505060006040518083038186803b1580156200c65d57600080fd5b505af41580156200c672573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef601d60008581526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156200c72857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200c6dd575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091856040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156200c7d05780820151818401526020810190506200c7b3565b50505050905001935050505060206040518083038186803b1580156200c7f557600080fd5b505af41580156200c80a573d6000803e3d6000fd5b505050506040513d60208110156200c82157600080fd5b81019080805190602001909291905050506200c83c6200f6d5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200c89f5780820151818401526020810190506200c882565b50505050905090810190601f1680156200c8cd5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011cb2602791396040018481038252603581526020018062011c58603591396040019550505050505060006040518083038186803b1580156200c91e57600080fd5b505af41580156200c933573d6000803e3d6000fd5b5050505060008090505b601d6000848152602001908152602001600020600001805490508110156200ca60573373ffffffffffffffffffffffffffffffffffffffff16601d600085815260200190815260200160002060000182815481106200c99857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200ca525781601d600085815260200190815260200160002060000182815481106200ca0357fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200cd01565b80806001019150506200c93d565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6359a136996200ca856200ee87565b6040518263ffffffff1660e01b815260040180806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200cade5780820151818401526020810190506200cac1565b50505050905090810190601f1680156200cb0c5780820380516001836020036101000a031916815260200191505b508481038352602781526020018062011cb2602791396040018481038252603581526020018062011d006035913960400194505050505060006040518083038186803b1580156200cb5c57600080fd5b505af41580156200cb71573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200cb9c57600080fd5b81019080805160405193929190846401000000008211156200cbbd57600080fd5b838201915060208201858111156200cbd457600080fd5b82518660018202830111640100000000821117156200cbf257600080fd5b8083526020830192505050908051906020019080838360005b838110156200cc285780820151818401526020810190506200cc0b565b50505050905090810190601f1680156200cc565780820380516001836020036101000a031916815260200191505b506040525050506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200ccc55780820151818401526020810190506200cca8565b50505050905090810190601f1680156200ccf35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050565b6200cd0f6200fd7d565b83816000018181525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161040001819052506200cd6e6200fcea565b816020019060ff16908160ff16815250506200cd958160036200d6c890919063ffffffff16565b5050505050565b60607f41475245454d454e545f504152544945530000000000000000000000000000008214156200ce5857601b8054806020026020016040519081016040528092919081815260200182805480156200ce4b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200ce00575b505050505090506200ce76565b6200ce6e8260036200dfc190919063ffffffff16565b610120015190505b919050565b6000600280600381106200ce8b57fe5b602091828204019190069054906101000a900460ff16905090565b60075481565b60606200cec48260036200dfc190919063ffffffff16565b6102c001519050919050565b6200ceda6200fd7d565b828160000181815250506200ceee6200fcf3565b816020019060ff16908160ff1681525050818160800181815250506200cf1f8160036200d6c890919063ffffffff16565b507f414e3a2f2f646174612d73746f726167650000000000000000000000000000007f07b481cbeaa4e99fd6638d014c6a9a7459f10e4fdf29e537f41d5fb037c30f35308585604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a2505050565b60006200cfd18260036200dfc190919063ffffffff16565b60c001519050919050565b600080601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150601960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050915091565b6200d0986200fd7d565b838160000181815250506200d0ac6200fd04565b816020019060ff16908160ff1681525050828280806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508161014001819052506200d11e8160036200d6c890919063ffffffff16565b5050505050565b7f454d5054595f53434f504500000000000000000000000000000000000000000081565b60405160200180807f61677265656d656e742e6c6567616c5374617465436f6e74726f6c6c65720000815250601e0190506040516020818303038152906040528051906020012081565b601773__$5e3d4bda46c81e962f48c99e99f980d175$__63a8782970909160405160200180807f66696c654b65792e7369676e61747572654c6f6700000000000000000000000081525060140190506040516020818303038152906040528051906020012085856040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060206040518083038186803b1580156200d26857600080fd5b505af41580156200d27d573d6000803e3d6000fd5b505050506040513d60208110156200d29457600080fd5b8101908080519060200190929190505050507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f4f5146e170ce6c18993979384e01f6a3bf0d482e0c024ff728f019e70a7a024a308484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a25050565b6060601773__$5e3d4bda46c81e962f48c99e99f980d175$__63b74b12ad909160405160200180807f66696c654b65792e6576656e744c6f67000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401808381526020018281526020019250505060006040518083038186803b1580156200d40557600080fd5b505af41580156200d41a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200d44557600080fd5b81019080805160405193929190846401000000008211156200d46657600080fd5b838201915060208201858111156200d47d57600080fd5b82518660018202830111640100000000821117156200d49b57600080fd5b8083526020830192505050908051906020019080838360005b838110156200d4d15780820151818401526020810190506200d4b4565b50505050905090810190601f1680156200d4ff5780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000601660149054906101000a900460ff16905090565b6000601560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f414e3a2f2f676f7665726e696e672d61677265656d656e74730000000000000081565b60606200d5888260036200dfc190919063ffffffff16565b61040001519050919050565b6000806000806000806005600088815260200190815260200160002060000160149054906101000a900460ff16156200d6b6576005600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169550600560008881526020019081526020016000206001016000015494506005600088815260200190815260200160002060010160010154935060056000888152602001908152602001600020600101600201600001549250600560008881526020019081526020016000206001016002016001015491506005600088815260200190815260200160002060010160020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b91939550919395565b60006002905090565b60008260000160008360000151815260200190815260200160002060000160009054906101000a900460ff16156200db0f5781836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200d7809291906201000f565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200d80592919062010096565b506101208201518160080190805190602001906200d825929190620100fd565b506101408201518160090190805190602001906200d8459291906201018c565b5061016082015181600a0190805190602001906200d86592919062010239565b5061018082015181600b0190805190602001906200d885929190620102e7565b506101a082015181600c0190805190602001906200d8a592919062010398565b506101c082015181600d0190805190602001906200d8c59291906201044f565b506101e082015181600e0190805190602001906200d8e592919062010512565b5061020082015181600f0190805190602001906200d905929190620105ed565b506102208201518160100190805190602001906200d9259291906201063f565b506102408201518160110190805190602001906200d945929190620106f0565b506102608201518160120190805190602001906200d965929190620107a4565b506102808201518160130190805190602001906200d9859291906201085e565b506102a08201518160140190805190602001906200d9a592919062010924565b506102c08201518160150190805190602001906200d9c592919062010a02565b506102e08201518160160190805190602001906200d9e592919062010a54565b506103008201518160170190805190602001906200da0592919062010b02565b506103208201518160180190805190602001906200da2592919062010bb2565b506103408201518160190190805190602001906200da4592919062010c64565b5061036082015181601a0190805190602001906200da6592919062010d18565b5061038082015181601b0190805190602001906200da8592919062010dd4565b506103a082015181601c0190805190602001906200daa592919062010ea0565b506103c082015181601d0190805190602001906200dac592919062010f1c565b506103e082015181601e0190805190602001906200dae592919062010f9c565b5061040082015181601f0190805190602001906200db0592919062011020565b509050506200dfa8565b60018360010183600001519080600181540180825580915050906001820390600052602060002001600090919290919091505503836000016000846000015181526020019081526020016000206001018190555081836000016000846000015181526020019081526020016000206002016000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160020190805190602001906200dbe99291906201000f565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e082015181600601556101008201518160070190805190602001906200dc6e92919062010096565b506101208201518160080190805190602001906200dc8e929190620100fd565b506101408201518160090190805190602001906200dcae9291906201018c565b5061016082015181600a0190805190602001906200dcce92919062010239565b5061018082015181600b0190805190602001906200dcee929190620102e7565b506101a082015181600c0190805190602001906200dd0e92919062010398565b506101c082015181600d0190805190602001906200dd2e9291906201044f565b506101e082015181600e0190805190602001906200dd4e92919062010512565b5061020082015181600f0190805190602001906200dd6e929190620105ed565b506102208201518160100190805190602001906200dd8e9291906201063f565b506102408201518160110190805190602001906200ddae929190620106f0565b506102608201518160120190805190602001906200ddce929190620107a4565b506102808201518160130190805190602001906200ddee9291906201085e565b506102a08201518160140190805190602001906200de0e92919062010924565b506102c08201518160150190805190602001906200de2e92919062010a02565b506102e08201518160160190805190602001906200de4e92919062010a54565b506103008201518160170190805190602001906200de6e92919062010b02565b506103208201518160180190805190602001906200de8e92919062010bb2565b506103408201518160190190805190602001906200deae92919062010c64565b5061036082015181601a0190805190602001906200dece92919062010d18565b5061038082015181601b0190805190602001906200deee92919062010dd4565b506103a082015181601c0190805190602001906200df0e92919062010ea0565b506103c082015181601d0190805190602001906200df2e92919062010f1c565b506103e082015181601e0190805190602001906200df4e92919062010f9c565b5061040082015181601f0190805190602001906200df6e92919062011020565b5090505060018360000160008460000151815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b8260010180549050905092915050565b60006001905090565b6200dfcb6200fd7d565b82600001600083815260200190815260200160002060020160405180610420016040529081600082015481526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900460ff16151515158152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e0ce5780601f106200e0a2576101008083540402835291602001916200e0ce565b820191906000526020600020905b8154815290600101906020018083116200e0b057829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156200e232578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200e21d5780601f106200e1f1576101008083540402835291602001916200e21d565b820191906000526020600020905b8154815290600101906020018083116200e1ff57829003601f168201915b5050505050815260200190600101906200e170565b505050508152602001600882018054806020026020016040519081016040528092919081815260200182805480156200e2c157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200e276575b50505050508152602001600982018054806020026020016040519081016040528092919081815260200182805480156200e34057602002820191906000526020600020906000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116200e3095790505b50505050508152602001600a82018054806020026020016040519081016040528092919081815260200182805480156200e3c057602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116200e3885790505b50505050508152602001600b82018054806020026020016040519081016040528092919081815260200182805480156200e44257602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116200e4085790505b50505050508152602001600c82018054806020026020016040519081016040528092919081815260200182805480156200e4c857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116200e48a5790505b50505050508152602001600d82018054806020026020016040519081016040528092919081815260200182805480156200e55657602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff16815260200190600801906020826007010492830192600103820291508084116200e5105790505b50505050508152602001600e82018054806020026020016040519081016040528092919081815260200182805480156200e5f457602002820191906000526020600020906000905b82829054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019060100190602082600f010492830192600103820291508084116200e59e5790505b50505050508152602001600f82018054806020026020016040519081016040528092919081815260200182805480156200e64e57602002820191906000526020600020905b8154815260200190600101908083116200e639575b50505050508152602001601082018054806020026020016040519081016040528092919081815260200182805480156200e6ce57602002820191906000526020600020906000905b82829054906101000a900460000b60000b815260200190600101906020826000010492830192600103820291508084116200e6965790505b50505050508152602001601182018054806020026020016040519081016040528092919081815260200182805480156200e74e57602002820191906000526020600020906000905b82829054906101000a900460010b60010b815260200190600201906020826001010492830192600103820291508084116200e7165790505b50505050508152602001601282018054806020026020016040519081016040528092919081815260200182805480156200e7ce57602002820191906000526020600020906000905b82829054906101000a900460030b60030b815260200190600401906020826003010492830192600103820291508084116200e7965790505b50505050508152602001601382018054806020026020016040519081016040528092919081815260200182805480156200e84e57602002820191906000526020600020906000905b82829054906101000a900460070b60070b815260200190600801906020826007010492830192600103820291508084116200e8165790505b50505050508152602001601482018054806020026020016040519081016040528092919081815260200182805480156200e8ce57602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f010492830192600103820291508084116200e8965790505b50505050508152602001601582018054806020026020016040519081016040528092919081815260200182805480156200e92857602002820191906000526020600020905b8154815260200190600101908083116200e913575b50505050508152602001601682018054806020026020016040519081016040528092919081815260200182805480156200e9c757602002820191906000526020600020906000905b82829054906101000a900460f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600101906020826000010492830192600103820291508084116200e9705790505b50505050508152602001601782018054806020026020016040519081016040528092919081815260200182805480156200ea6557602002820191906000526020600020906000905b82829054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600201906020826001010492830192600103820291508084116200ea0f5790505b50505050508152602001601882018054806020026020016040519081016040528092919081815260200182805480156200eb0257602002820191906000526020600020906000905b82829054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600301906020826002010492830192600103820291508084116200eaad5790505b50505050508152602001601982018054806020026020016040519081016040528092919081815260200182805480156200eb9e57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116200eb4a5790505b50505050508152602001601a82018054806020026020016040519081016040528092919081815260200182805480156200ec3657602002820191906000526020600020906000905b82829054906101000a900460c01b77ffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600801906020826007010492830192600103820291508084116200ebe65790505b50505050508152602001601b82018054806020026020016040519081016040528092919081815260200182805480156200ecc657602002820191906000526020600020906000905b82829054906101000a900460801b6fffffffffffffffffffffffffffffffff191681526020019060100190602082600f010492830192600103820291508084116200ec7e5790505b50505050508152602001601c82018054806020026020016040519081016040528092919081815260200182805480156200ed3c57602002820191906000526020600020905b8160009054906101000a900460601b6bffffffffffffffffffffffff1916815260200190600101908083116200ed0b575b50505050508152602001601d82018054806020026020016040519081016040528092919081815260200182805480156200edae57602002820191906000526020600020905b8160009054906101000a900460401b67ffffffffffffffff1916815260200190600101908083116200ed81575b50505050508152602001601e82018054806020026020016040519081016040528092919081815260200182805480156200ee1c57602002820191906000526020600020905b8160009054906101000a900460201b63ffffffff1916815260200190600101908083116200edf3575b50505050508152602001601f82018054806020026020016040519081016040528092919081815260200182805480156200ee7657602002820191906000526020600020905b8154815260200190600101908083116200ee61575b505050505081525050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60003073ffffffffffffffffffffffffffffffffffffffff1663e2be8fe17f41677265656d656e742045787069726174696f6e2044617465000000000000006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200ef7557600080fd5b505afa1580156200ef8a573d6000803e3d6000fd5b505050506040513d60208110156200efa157600080fd5b8101908080519060200190929190505050905090565b60006200efe9836000600381106200efcb57fe5b6020020151836000600381106200efde57fe5b60200201516200fd0d565b9050600081146200effd578090506200f074565b6200f02d836001600381106200f00f57fe5b6020020151836001600381106200f02257fe5b60200201516200fd0d565b9050600081146200f041578090506200f074565b6200f071836002600381106200f05357fe5b6020020151836002600381106200f06657fe5b60200201516200fd0d565b90505b92915050565b6000608c905090565b60006028905090565b60006076905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006200f0de6200fd6b565b905090565b60606040518060400160405280600681526020017f4552523630310000000000000000000000000000000000000000000000000000815250905090565b600080905060008090505b6013805490508110156200f1de5760146000601383815481106200f14b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff16156200f1d05781806001019250505b80806001019150506200f12b565b50601154811015601260016101000a81548160ff0219169083151502179055507f414e3a2f2f61677265656d656e742d72656e6577616c730000000000000000007fb943efb3fc1da02bb1e14eed2ee64f5394e1f6f800ee4ea04c80cefe3a79bc7530601260019054906101000a900460ff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a250565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b6000603b905090565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f61646455736572286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001201818905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b6005601660196101000a81548160ff021916908360078111156200f42157fe5b02179055507f414e3a2f2f61677265656d656e747300000000000000000000000000000000007f64b8a7cacd875b7f3d28b9453288cfcc38414b965783e5277c696c655fb4b29430601660199054906101000a900460ff1660078111156200f48557fe5b42604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360ff1660ff168152602001828152602001935050505060405180910390a26200f5077f41475245454d454e545f53544154455f4348414e474544000000000000000000306200f59e565b3073ffffffffffffffffffffffffffffffffffffffff1663720e72e97f41677265656d656e742043616e63656c6174696f6e2044617465000000000000426040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156200f58357600080fd5b505af11580156200f598573d6000803e3d6000fd5b50505050565b60008090505b600a6000016000848152602001908152602001600020600101805490508110156200f6c757600a600001600084815260200190815260200160002060010181815481106200f5ee57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166311551ee784846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200f6a057600080fd5b505af11580156200f6b5573d6000803e3d6000fd5b5050505080806001019150506200f5a4565b505050565b6000606c905090565b60606040518060400160405280600681526020017f4552523430390000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b6000600373__$b57d6bac5d25edb57dfc5dd3520b6e9fc5$__63ecec72709091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156200f7ac57600080fd5b505af41580156200f7c1573d6000803e3d6000fd5b505050506040513d60208110156200f7d857600080fd5b81019080805190602001909291905050509050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8251845114156200f81a6200eec4565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200f87d5780820151818401526020810190506200f860565b50505050905090810190601f1680156200f8ab5780820380516001836020036101000a031916815260200191505b5084810383526032815260200180620119f0603291396040018481038252606681526020018062011f0e606691396080019550505050505060006040518083038186803b1580156200f8fc57600080fd5b505af41580156200f911573d6000803e3d6000fd5b50505050600080905060008090505b83518110156200fac55760008090505b83518110156200fab657600073ffffffffffffffffffffffffffffffffffffffff168482815181106200f95f57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200f98a576200faa8565b8482815181106200f99757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663fb1a14936040518163ffffffff1660e01b815260040160206040518083038186803b1580156200f9e557600080fd5b505afa1580156200f9fa573d6000803e3d6000fd5b505050506040513d60208110156200fa1157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168482815181106200fa4557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156200faa7578381815181106200fa7757fe5b60200260200101600073ffffffffffffffffffffffffffffffffffffffff1681525082806001019350506200fab6565b5b80806001019150506200f930565b5080806001019150506200f920565b5073__$ecfb6c4d3c3ceff197e19e585a0a53728c$";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$b57d6bac5d25edb57dfc5dd3520b6e9fc5$", commons_collections_DataStorageUtils_sol_DataStorageUtils);
        bytecode = Replace(bytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        bytecode = Replace(bytecode, "$fdd731fada9905693765f0d2a681d4c856$", commons_standards_ERC165Utils_sol_ERC165Utils);
        bytecode = Replace(bytecode, "$6c578ef14ebe2070bb2319c6842ae291e1$", commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogActiveAgreementToPartyCancelationsUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartyCancelationsUpdate", this.address, callback); }
        LogActiveAgreementToPartySignaturesUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogActiveAgreementToPartySignaturesUpdate", this.address, callback); }
        LogAgreementCreation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation", this.address, callback); }
        LogAgreementCreation_v1_1_0(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementCreation_v1_1_0", this.address, callback); }
        LogAgreementEventLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementEventLogReference", this.address, callback); }
        LogAgreementLegalStateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementLegalStateUpdate", this.address, callback); }
        LogAgreementMaxEventCountUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementMaxEventCountUpdate", this.address, callback); }
        LogAgreementOwnerUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementOwnerUpdate", this.address, callback); }
        LogAgreementPrivateParametersReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementPrivateParametersReference", this.address, callback); }
        LogAgreementRedaction(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRedaction", this.address, callback); }
        LogAgreementRenewalExpirationDateUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalExpirationDateUpdate", this.address, callback); }
        LogAgreementRenewalFranchiseeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalFranchiseeUpdate", this.address, callback); }
        LogAgreementRenewalResultUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalResultUpdate", this.address, callback); }
        LogAgreementRenewalTermsDefined(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalTermsDefined", this.address, callback); }
        LogAgreementRenewalVoteCast(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalVoteCast", this.address, callback); }
        LogAgreementRenewalWindowClosed(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowClosed", this.address, callback); }
        LogAgreementRenewalWindowOpened(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementRenewalWindowOpened", this.address, callback); }
        LogAgreementSignatureLogReference(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogAgreementSignatureLogReference", this.address, callback); }
        LogDataStorageUpdateAddress(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddress", this.address, callback); }
        LogDataStorageUpdateAddressArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateAddressArray", this.address, callback); }
        LogDataStorageUpdateBool(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBool", this.address, callback); }
        LogDataStorageUpdateBoolArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBoolArray", this.address, callback); }
        LogDataStorageUpdateBytes32(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32", this.address, callback); }
        LogDataStorageUpdateBytes32Array(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateBytes32Array", this.address, callback); }
        LogDataStorageUpdateInt(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateInt", this.address, callback); }
        LogDataStorageUpdateIntArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateIntArray", this.address, callback); }
        LogDataStorageUpdateString(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateString", this.address, callback); }
        LogDataStorageUpdateUint(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUint", this.address, callback); }
        LogDataStorageUpdateUintArray(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDataStorageUpdateUintArray", this.address, callback); }
        LogEntityAddressScopeUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogEntityAddressScopeUpdate", this.address, callback); }
        LogGoverningAgreementUpdate(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogGoverningAgreementUpdate", this.address, callback); }
        DATA_FIELD_AGREEMENT_CANCELATION_DATE() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_CANCELATION_DATE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_CANCELATION_DATE();
            });
        }
        DATA_FIELD_AGREEMENT_CREATION_DATE() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_CREATION_DATE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_CREATION_DATE();
            });
        }
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
            });
        }
        DATA_FIELD_AGREEMENT_PARTIES() {
            const data = Encode(this.client).DATA_FIELD_AGREEMENT_PARTIES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).DATA_FIELD_AGREEMENT_PARTIES();
            });
        }
        EMPTY_SCOPE() {
            const data = Encode(this.client).EMPTY_SCOPE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EMPTY_SCOPE();
            });
        }
        ERC165_ID_Address_Scopes() {
            const data = Encode(this.client).ERC165_ID_Address_Scopes();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Address_Scopes();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        EVENT_CREATED() {
            const data = Encode(this.client).EVENT_CREATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_CREATED();
            });
        }
        EVENT_DELETED() {
            const data = Encode(this.client).EVENT_DELETED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_DELETED();
            });
        }
        EVENT_ID_AGREEMENTS() {
            const data = Encode(this.client).EVENT_ID_AGREEMENTS();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENTS();
            });
        }
        EVENT_ID_AGREEMENT_PARTY_MAP() {
            const data = Encode(this.client).EVENT_ID_AGREEMENT_PARTY_MAP();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_AGREEMENT_PARTY_MAP();
            });
        }
        EVENT_ID_DATA_STORAGE() {
            const data = Encode(this.client).EVENT_ID_DATA_STORAGE();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_DATA_STORAGE();
            });
        }
        EVENT_ID_ENTITIES_ADDRESS_SCOPES() {
            const data = Encode(this.client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
            });
        }
        EVENT_ID_GOVERNING_AGREEMENT() {
            const data = Encode(this.client).EVENT_ID_GOVERNING_AGREEMENT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_GOVERNING_AGREEMENT();
            });
        }
        EVENT_ID_STATE_CHANGED() {
            const data = Encode(this.client).EVENT_ID_STATE_CHANGED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_ID_STATE_CHANGED();
            });
        }
        EVENT_UPDATED() {
            const data = Encode(this.client).EVENT_UPDATED();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).EVENT_UPDATED();
            });
        }
        ROLE_ID_LEGAL_STATE_CONTROLLER() {
            const data = Encode(this.client).ROLE_ID_LEGAL_STATE_CONTROLLER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_LEGAL_STATE_CONTROLLER();
            });
        }
        ROLE_ID_OBJECT_ADMIN() {
            const data = Encode(this.client).ROLE_ID_OBJECT_ADMIN();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OBJECT_ADMIN();
            });
        }
        ROLE_ID_OWNER() {
            const data = Encode(this.client).ROLE_ID_OWNER();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ROLE_ID_OWNER();
            });
        }
        addEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).addEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).addEventListener();
            });
        }
        cancel() {
            const data = Encode(this.client).cancel();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).cancel();
            });
        }
        castRenewalVote(_renew: boolean) {
            const data = Encode(this.client).castRenewalVote(_renew);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).castRenewalVote();
            });
        }
        closeRenewalWindow() {
            const data = Encode(this.client).closeRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).closeRenewalWindow();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) {
            const data = Encode(this.client).createPermission(_permission, _multiHolder, _revocable, _transferable);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createPermission();
            });
        }
        defineRenewalTerms(_franchisees: string[], _threshold: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) {
            const data = Encode(this.client).defineRenewalTerms(_franchisees, _threshold, _opensAtOffset, _closesAtOffset, _extensionOffset);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).defineRenewalTerms();
            });
        }
        getAddressScopeDetails(_address: string, _context: Buffer) {
            const data = Encode(this.client).getAddressScopeDetails(_address, _context);
            return Call<Tx, {
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetails();
            });
        }
        getAddressScopeDetailsForKey(_key: Buffer) {
            const data = Encode(this.client).getAddressScopeDetailsForKey(_key);
            return Call<Tx, {
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeDetailsForKey();
            });
        }
        getAddressScopeKeys() {
            const data = Encode(this.client).getAddressScopeKeys();
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getAddressScopeKeys();
            });
        }
        getArchetype() {
            const data = Encode(this.client).getArchetype();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArchetype();
            });
        }
        getArrayLength(_id: Buffer) {
            const data = Encode(this.client).getArrayLength(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArrayLength();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getCreator() {
            const data = Encode(this.client).getCreator();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getCreator();
            });
        }
        getDataIdAtIndex(_index: number) {
            const data = Encode(this.client).getDataIdAtIndex(_index);
            return Call<Tx, {
                error: number;
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataIdAtIndex();
            });
        }
        getDataType(_id: Buffer) {
            const data = Encode(this.client).getDataType(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataType();
            });
        }
        getDataValueAsAddress(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddress(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddress();
            });
        }
        getDataValueAsAddressArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsAddressArray(_id);
            return Call<Tx, [string[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsAddressArray();
            });
        }
        getDataValueAsBool(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBool(_id);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBool();
            });
        }
        getDataValueAsBoolArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBoolArray(_id);
            return Call<Tx, [boolean[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBoolArray();
            });
        }
        getDataValueAsBytes32(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32(_id);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32();
            });
        }
        getDataValueAsBytes32Array(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsBytes32Array(_id);
            return Call<Tx, [Buffer[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsBytes32Array();
            });
        }
        getDataValueAsInt(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsInt(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsInt();
            });
        }
        getDataValueAsIntArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsIntArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsIntArray();
            });
        }
        getDataValueAsString(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsString(_id);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsString();
            });
        }
        getDataValueAsUint(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUint(_id);
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUint();
            });
        }
        getDataValueAsUintArray(_id: Buffer) {
            const data = Encode(this.client).getDataValueAsUintArray(_id);
            return Call<Tx, [number[]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDataValueAsUintArray();
            });
        }
        getEventLogReference() {
            const data = Encode(this.client).getEventLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getEventLogReference();
            });
        }
        getGoverningAgreementAtIndex(_index: number) {
            const data = Encode(this.client).getGoverningAgreementAtIndex(_index);
            return Call<Tx, {
                agreementAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getGoverningAgreementAtIndex();
            });
        }
        getHolder(_permission: Buffer, _index: number) {
            const data = Encode(this.client).getHolder(_permission, _index);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getHolder();
            });
        }
        getLegalState() {
            const data = Encode(this.client).getLegalState();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getLegalState();
            });
        }
        getMaxNumberOfEvents() {
            const data = Encode(this.client).getMaxNumberOfEvents();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getMaxNumberOfEvents();
            });
        }
        getNumberOfData() {
            const data = Encode(this.client).getNumberOfData();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfData();
            });
        }
        getNumberOfGoverningAgreements() {
            const data = Encode(this.client).getNumberOfGoverningAgreements();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfGoverningAgreements();
            });
        }
        getNumberOfParties() {
            const data = Encode(this.client).getNumberOfParties();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfParties();
            });
        }
        getNumberOfRenewalFranchisees() {
            const data = Encode(this.client).getNumberOfRenewalFranchisees();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfRenewalFranchisees();
            });
        }
        getOwner() {
            const data = Encode(this.client).getOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOwner();
            });
        }
        getPartyAtIndex(_index: number) {
            const data = Encode(this.client).getPartyAtIndex(_index);
            return Call<Tx, {
                party: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPartyAtIndex();
            });
        }
        getPermissionDetails(_permission: Buffer) {
            const data = Encode(this.client).getPermissionDetails(_permission);
            return Call<Tx, {
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPermissionDetails();
            });
        }
        getPrivateParametersReference() {
            const data = Encode(this.client).getPrivateParametersReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getPrivateParametersReference();
            });
        }
        getRenewalFranchiseeAtIndex(_index: number) {
            const data = Encode(this.client).getRenewalFranchiseeAtIndex(_index);
            return Call<Tx, {
                franchisee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalFranchiseeAtIndex();
            });
        }
        getRenewalState() {
            const data = Encode(this.client).getRenewalState();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalState();
            });
        }
        getRenewalTerms() {
            const data = Encode(this.client).getRenewalTerms();
            return Call<Tx, {
                renewalThreshold: number;
                agreementExpirationDate: number;
                renewalOpensAtOffset: string;
                renewalClosesAtOffset: string;
                renewalExtensionOffset: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalTerms();
            });
        }
        getRenewalVoteDetails(_franchisee: string) {
            const data = Encode(this.client).getRenewalVoteDetails(_franchisee);
            return Call<Tx, {
                renewalVoter: string;
                renewVote: boolean;
                voteTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getRenewalVoteDetails();
            });
        }
        getSignatureDetails(_party: string) {
            const data = Encode(this.client).getSignatureDetails(_party);
            return Call<Tx, {
                signee: string;
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureDetails();
            });
        }
        getSignatureLogReference() {
            const data = Encode(this.client).getSignatureLogReference();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureLogReference();
            });
        }
        getSignatureTimestamp(_party: string) {
            const data = Encode(this.client).getSignatureTimestamp(_party);
            return Call<Tx, {
                signatureTimestamp: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignatureTimestamp();
            });
        }
        getSignee(_party: string) {
            const data = Encode(this.client).getSignee(_party);
            return Call<Tx, {
                signee: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getSignee();
            });
        }
        grantPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).grantPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).grantPermission();
            });
        }
        hasPermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).hasPermission(_permission, _holder);
            return Call<Tx, {
                result: boolean;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).hasPermission();
            });
        }
        initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) {
            const data = Encode(this.client).initialize(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initialize();
            });
        }
        initializeObjectAdministrator(_admin: string) {
            const data = Encode(this.client).initializeObjectAdministrator(_admin);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).initializeObjectAdministrator();
            });
        }
        isPrivate() {
            const data = Encode(this.client).isPrivate();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isPrivate();
            });
        }
        isRenewalWindowOpen() {
            const data = Encode(this.client).isRenewalWindowOpen();
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isRenewalWindowOpen();
            });
        }
        isSignedBy(_signee: string) {
            const data = Encode(this.client).isSignedBy(_signee);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).isSignedBy();
            });
        }
        openRenewalWindow() {
            const data = Encode(this.client).openRenewalWindow();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).openRenewalWindow();
            });
        }
        redact() {
            const data = Encode(this.client).redact();
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).redact();
            });
        }
        removeData(_id: Buffer) {
            const data = Encode(this.client).removeData(_id);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeData();
            });
        }
        removeEventListener(_event: Buffer | Buffer, _listener: string) {
            const data = Encode(this.client).removeEventListener(_event, _listener);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeEventListener();
            });
        }
        resetRenewalVotes() {
            const data = Encode(this.client).resetRenewalVotes();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).resetRenewalVotes();
            });
        }
        resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string) {
            const data = Encode(this.client).resolveAddressScope(_address, _context, _dataStorage);
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).resolveAddressScope();
            });
        }
        revokePermission(_permission: Buffer, _holder: string) {
            const data = Encode(this.client).revokePermission(_permission, _holder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).revokePermission();
            });
        }
        setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) {
            const data = Encode(this.client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setAddressScope();
            });
        }
        setDataValueAsAddress(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsAddress(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddress();
            });
        }
        setDataValueAsAddressArray(_id: Buffer, _value: string[]) {
            const data = Encode(this.client).setDataValueAsAddressArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsAddressArray();
            });
        }
        setDataValueAsBool(_id: Buffer, _value: boolean) {
            const data = Encode(this.client).setDataValueAsBool(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBool();
            });
        }
        setDataValueAsBoolArray(_id: Buffer, _value: boolean[]) {
            const data = Encode(this.client).setDataValueAsBoolArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBoolArray();
            });
        }
        setDataValueAsBytes32(_id: Buffer, _value: Buffer) {
            const data = Encode(this.client).setDataValueAsBytes32(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32();
            });
        }
        setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[]) {
            const data = Encode(this.client).setDataValueAsBytes32Array(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsBytes32Array();
            });
        }
        setDataValueAsInt(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsInt(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsInt();
            });
        }
        setDataValueAsIntArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsIntArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsIntArray();
            });
        }
        setDataValueAsString(_id: Buffer, _value: string) {
            const data = Encode(this.client).setDataValueAsString(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsString();
            });
        }
        setDataValueAsUint(_id: Buffer, _value: number) {
            const data = Encode(this.client).setDataValueAsUint(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUint();
            });
        }
        setDataValueAsUintArray(_id: Buffer, _value: number[]) {
            const data = Encode(this.client).setDataValueAsUintArray(_id, _value);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setDataValueAsUintArray();
            });
        }
        setEventLogReference(_eventLogFileReference: string) {
            const data = Encode(this.client).setEventLogReference(_eventLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setEventLogReference();
            });
        }
        setFulfilled() {
            const data = Encode(this.client).setFulfilled();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setFulfilled();
            });
        }
        setLegalState(_legalState: number) {
            const data = Encode(this.client).setLegalState(_legalState);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setLegalState();
            });
        }
        setMaxNumberOfEvents(_maxNumberOfEvents: number) {
            const data = Encode(this.client).setMaxNumberOfEvents(_maxNumberOfEvents);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setMaxNumberOfEvents();
            });
        }
        setNextExpirationDate(_expirationDate: number) {
            const data = Encode(this.client).setNextExpirationDate(_expirationDate);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setNextExpirationDate();
            });
        }
        setPrivateParametersReference(_privateParametersFileReference: string) {
            const data = Encode(this.client).setPrivateParametersReference(_privateParametersFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setPrivateParametersReference();
            });
        }
        setSignatureLogReference(_signatureLogFileReference: string) {
            const data = Encode(this.client).setSignatureLogReference(_signatureLogFileReference);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setSignatureLogReference();
            });
        }
        sign() {
            const data = Encode(this.client).sign();
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).sign();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferPermission(_permission: Buffer, _newHolder: string) {
            const data = Encode(this.client).transferPermission(_permission, _newHolder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferPermission();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        DATA_FIELD_AGREEMENT_CANCELATION_DATE: () => { return client.encode("CB1DC8CB", []); },
        DATA_FIELD_AGREEMENT_CREATION_DATE: () => { return client.encode("CA66F015", []); },
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: () => { return client.encode("1314CF66", []); },
        DATA_FIELD_AGREEMENT_PARTIES: () => { return client.encode("80C86BA7", []); },
        EMPTY_SCOPE: () => { return client.encode("F6EC229E", []); },
        ERC165_ID_Address_Scopes: () => { return client.encode("BD9E0660", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        EVENT_CREATED: () => { return client.encode("F0897DB7", []); },
        EVENT_DELETED: () => { return client.encode("6F78733B", []); },
        EVENT_ID_AGREEMENTS: () => { return client.encode("4828C43B", []); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return client.encode("6DBBC67B", []); },
        EVENT_ID_DATA_STORAGE: () => { return client.encode("D42EA976", []); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return client.encode("B7D64777", []); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return client.encode("FC344A73", []); },
        EVENT_ID_STATE_CHANGED: () => { return client.encode("11CE5844", []); },
        EVENT_UPDATED: () => { return client.encode("7207B07F", []); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return client.encode("F76829C9", []); },
        ROLE_ID_OBJECT_ADMIN: () => { return client.encode("E6F936F9", []); },
        ROLE_ID_OWNER: () => { return client.encode("9090FD85", []); },
        addEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("2A7CBFDE", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("6EA1944B", ["bytes32"], _event);
        },
        cancel: () => { return client.encode("EA8A1AF0", []); },
        castRenewalVote: (_renew: boolean) => { return client.encode("B20BA337", ["bool"], _renew); },
        closeRenewalWindow: () => { return client.encode("C0647C2E", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return client.encode("94FEB152", ["bytes32", "bool", "bool", "bool"], _permission, _multiHolder, _revocable, _transferable); },
        defineRenewalTerms: (_franchisees: string[], _threshold: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) => { return client.encode("B00B6428", ["address[]", "uint256", "string", "string", "string"], _franchisees, _threshold, _opensAtOffset, _closesAtOffset, _extensionOffset); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return client.encode("9561AA32", ["address", "bytes32"], _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return client.encode("FE3C84B2", ["bytes32"], _key); },
        getAddressScopeKeys: () => { return client.encode("70A9C997", []); },
        getArchetype: () => { return client.encode("FB1A1493", []); },
        getArrayLength: (_id: Buffer) => { return client.encode("AA0AC16F", ["bytes32"], _id); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getCreator: () => { return client.encode("0EE2CB10", []); },
        getDataIdAtIndex: (_index: number) => { return client.encode("374B7D22", ["uint256"], _index); },
        getDataType: (_id: Buffer) => { return client.encode("31502F13", ["bytes32"], _id); },
        getDataValueAsAddress: (_id: Buffer) => { return client.encode("F364E379", ["bytes32"], _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return client.encode("EEB8B809", ["bytes32"], _id); },
        getDataValueAsBool: (_id: Buffer) => { return client.encode("30C676C9", ["bytes32"], _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return client.encode("D734C53A", ["bytes32"], _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return client.encode("2512E6F1", ["bytes32"], _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return client.encode("FCB4862A", ["bytes32"], _id); },
        getDataValueAsInt: (_id: Buffer) => { return client.encode("E2BE8FE1", ["bytes32"], _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return client.encode("F0A40527", ["bytes32"], _id); },
        getDataValueAsString: (_id: Buffer) => { return client.encode("D2E8A0FA", ["bytes32"], _id); },
        getDataValueAsUint: (_id: Buffer) => { return client.encode("35CE1BD1", ["bytes32"], _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return client.encode("31185182", ["bytes32"], _id); },
        getEventLogReference: () => { return client.encode("F9F3F283", []); },
        getGoverningAgreementAtIndex: (_index: number) => { return client.encode("C4521FFB", ["uint256"], _index); },
        getHolder: (_permission: Buffer, _index: number) => { return client.encode("141B422A", ["bytes32", "uint256"], _permission, _index); },
        getLegalState: () => { return client.encode("59D585EE", []); },
        getMaxNumberOfEvents: () => { return client.encode("5ABF3202", []); },
        getNumberOfData: () => { return client.encode("5666F9AC", []); },
        getNumberOfGoverningAgreements: () => { return client.encode("0D9BFA80", []); },
        getNumberOfParties: () => { return client.encode("7F809381", []); },
        getNumberOfRenewalFranchisees: () => { return client.encode("D779C8A1", []); },
        getOwner: () => { return client.encode("893D20E8", []); },
        getPartyAtIndex: (_index: number) => { return client.encode("79CE3CB2", ["uint256"], _index); },
        getPermissionDetails: (_permission: Buffer) => { return client.encode("63A84C04", ["bytes32"], _permission); },
        getPrivateParametersReference: () => { return client.encode("9F75DFD9", []); },
        getRenewalFranchiseeAtIndex: (_index: number) => { return client.encode("6A78A815", ["uint256"], _index); },
        getRenewalState: () => { return client.encode("04FCE015", []); },
        getRenewalTerms: () => { return client.encode("40514A1A", []); },
        getRenewalVoteDetails: (_franchisee: string) => { return client.encode("84A6CD4D", ["address"], _franchisee); },
        getSignatureDetails: (_party: string) => { return client.encode("F4B9D96E", ["address"], _party); },
        getSignatureLogReference: () => { return client.encode("0CB61B34", []); },
        getSignatureTimestamp: (_party: string) => { return client.encode("D39C4FAA", ["address"], _party); },
        getSignee: (_party: string) => { return client.encode("51E213FC", ["address"], _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("BC586456", ["bytes32", "address"], _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return client.encode("28545C0D", ["bytes32", "address"], _permission, _holder); },
        initialize: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => {
            if (typeof _archetype === "string" && typeof _creator === "string" && typeof _owner === "string" && typeof _privateParametersFileReference === "string" && typeof _isPrivate === "string" && typeof _parties === "string" && typeof _governingAgreements === "string")
                return client.encode("BE60FC0C", ["address", "address", "address", "string", "bool", "address[]", "address[]"], _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
        },
        initializeObjectAdministrator: (_admin: string) => { return client.encode("859360F5", ["address"], _admin); },
        isPrivate: () => { return client.encode("FAFF660E", []); },
        isRenewalWindowOpen: () => { return client.encode("8AAEFF8C", []); },
        isSignedBy: (_signee: string) => { return client.encode("7F91FB7D", ["address"], _signee); },
        openRenewalWindow: () => { return client.encode("8C2A4DAE", []); },
        redact: () => { return client.encode("91BEC712", []); },
        removeData: (_id: Buffer) => { return client.encode("47DD48E0", ["bytes32"], _id); },
        removeEventListener: (_event: Buffer | Buffer, _listener: string) => {
            if (typeof _event === "string" && typeof _listener === "string")
                return client.encode("0775CB00", ["bytes32", "address"], _event, _listener);
            if (typeof _event === "string")
                return client.encode("586CA7AB", ["bytes32"], _event);
        },
        resetRenewalVotes: () => { return client.encode("72EA1826", []); },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return client.encode("3C0E5245", ["address", "bytes32", "address"], _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return client.encode("A6A8F17B", ["bytes32", "address"], _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return client.encode("6D73C8BC", ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"], _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return client.encode("68E78011", ["bytes32", "address"], _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return client.encode("641375AD", ["bytes32", "address[]"], _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return client.encode("1CB35540", ["bytes32", "bool"], _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return client.encode("F5081E9F", ["bytes32", "bool[]"], _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return client.encode("8AA137F5", ["bytes32", "bytes32"], _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return client.encode("EDEC4C4F", ["bytes32", "bytes32[]"], _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return client.encode("720E72E9", ["bytes32", "int256"], _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return client.encode("6D6A7E8F", ["bytes32", "int256[]"], _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return client.encode("1C5422D2", ["bytes32", "string"], _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return client.encode("F3420D1A", ["bytes32", "uint256"], _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return client.encode("94E38624", ["bytes32", "uint256[]"], _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return client.encode("4F7E37BB", ["string"], _eventLogFileReference); },
        setFulfilled: () => { return client.encode("C3F0A895", []); },
        setLegalState: (_legalState: number) => { return client.encode("58892B86", ["uint8"], _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return client.encode("130C5985", ["uint32"], _maxNumberOfEvents); },
        setNextExpirationDate: (_expirationDate: number) => { return client.encode("C6E8DFD0", ["int256"], _expirationDate); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return client.encode("4773F6FC", ["string"], _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return client.encode("F8D660D3", ["string"], _signatureLogFileReference); },
        sign: () => { return client.encode("2CA15122", []); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return client.encode("EC9CB2CE", ["bytes32", "address"], _permission, _newHolder); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        DATA_FIELD_AGREEMENT_CANCELATION_DATE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        DATA_FIELD_AGREEMENT_CREATION_DATE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        DATA_FIELD_AGREEMENT_PARTIES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EMPTY_SCOPE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ERC165_ID_Address_Scopes: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        EVENT_CREATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_DELETED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENTS: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_DATA_STORAGE: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_ID_STATE_CHANGED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        EVENT_UPDATED: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OBJECT_ADMIN: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        ROLE_ID_OWNER: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        addEventListener: (): void => { return; },
        cancel: (): void => { return; },
        castRenewalVote: (): void => { return; },
        closeRenewalWindow: (): void => { return; },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createPermission: (): void => { return; },
        defineRenewalTerms: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["bytes32", "bytes32", "bytes32", "address"]);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = client.decode(data, ["address", "bytes32", "bytes32", "bytes32", "bytes32", "address"]);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getArchetype: (): [string] => { return client.decode(data, ["address"]); },
        getArrayLength: (): [number] => { return client.decode(data, ["uint256"]); },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getCreator: (): [string] => { return client.decode(data, ["address"]); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = client.decode(data, ["uint256", "bytes32"]);
            return { error: error, id: id };
        },
        getDataType: (): [number] => { return client.decode(data, ["uint8"]); },
        getDataValueAsAddress: (): [string] => { return client.decode(data, ["address"]); },
        getDataValueAsAddressArray: (): [string[]] => { return client.decode(data, ["address[]"]); },
        getDataValueAsBool: (): [boolean] => { return client.decode(data, ["bool"]); },
        getDataValueAsBoolArray: (): [boolean[]] => { return client.decode(data, ["bool[]"]); },
        getDataValueAsBytes32: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        getDataValueAsBytes32Array: (): [Buffer[]] => { return client.decode(data, ["bytes32[]"]); },
        getDataValueAsInt: (): [number] => { return client.decode(data, ["int256"]); },
        getDataValueAsIntArray: (): [number[]] => { return client.decode(data, ["int256[]"]); },
        getDataValueAsString: (): [string] => { return client.decode(data, ["string"]); },
        getDataValueAsUint: (): [number] => { return client.decode(data, ["uint256"]); },
        getDataValueAsUintArray: (): [number[]] => { return client.decode(data, ["uint256[]"]); },
        getEventLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = client.decode(data, ["address"]);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [string] => { return client.decode(data, ["address"]); },
        getLegalState: (): [number] => { return client.decode(data, ["uint8"]); },
        getMaxNumberOfEvents: (): [number] => { return client.decode(data, ["uint32"]); },
        getNumberOfData: (): [number] => { return client.decode(data, ["uint256"]); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfRenewalFranchisees: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOwner: (): [string] => { return client.decode(data, ["address"]); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = client.decode(data, ["address"]);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = client.decode(data, ["bool", "bool", "bool", "bool", "uint256"]);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [string] => { return client.decode(data, ["string"]); },
        getRenewalFranchiseeAtIndex: (): {
            franchisee: string;
        } => {
            const [franchisee] = client.decode(data, ["address"]);
            return { franchisee: franchisee };
        },
        getRenewalState: (): [boolean] => { return client.decode(data, ["bool"]); },
        getRenewalTerms: (): {
            renewalThreshold: number;
            agreementExpirationDate: number;
            renewalOpensAtOffset: string;
            renewalClosesAtOffset: string;
            renewalExtensionOffset: string;
        } => {
            const [renewalThreshold, agreementExpirationDate, renewalOpensAtOffset, renewalClosesAtOffset, renewalExtensionOffset] = client.decode(data, ["uint256", "int256", "string", "string", "string"]);
            return { renewalThreshold: renewalThreshold, agreementExpirationDate: agreementExpirationDate, renewalOpensAtOffset: renewalOpensAtOffset, renewalClosesAtOffset: renewalClosesAtOffset, renewalExtensionOffset: renewalExtensionOffset };
        },
        getRenewalVoteDetails: (): {
            renewalVoter: string;
            renewVote: boolean;
            voteTimestamp: number;
        } => {
            const [renewalVoter, renewVote, voteTimestamp] = client.decode(data, ["address", "bool", "uint256"]);
            return { renewalVoter: renewalVoter, renewVote: renewVote, voteTimestamp: voteTimestamp };
        },
        getSignatureDetails: (): {
            signee: string;
            signatureTimestamp: number;
        } => {
            const [signee, signatureTimestamp] = client.decode(data, ["address", "uint256"]);
            return { signee: signee, signatureTimestamp: signatureTimestamp };
        },
        getSignatureLogReference: (): [string] => { return client.decode(data, ["string"]); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = client.decode(data, ["uint256"]);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = client.decode(data, ["address"]);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): {
            result: boolean;
        } => {
            const [result] = client.decode(data, ["bool"]);
            return { result: result };
        },
        initialize: (): void => { return; },
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [boolean] => { return client.decode(data, ["bool"]); },
        isRenewalWindowOpen: (): [boolean] => { return client.decode(data, ["bool"]); },
        isSignedBy: (): [boolean] => { return client.decode(data, ["bool"]); },
        openRenewalWindow: (): void => { return; },
        redact: (): [number] => { return client.decode(data, ["uint8"]); },
        removeData: (): void => { return; },
        removeEventListener: (): void => { return; },
        resetRenewalVotes: (): void => { return; },
        resolveAddressScope: (): [Buffer] => { return client.decode(data, ["bytes32"]); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setNextExpirationDate: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferPermission: (): void => { return; }
    }; };
}