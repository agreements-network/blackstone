//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CancelStreamSignal, ContractCodec, Event, linker, listenerFor, Result, Keccak } from "@hyperledger/burrow";
interface Provider {
    deploy(data: string | Uint8Array, contractMeta?: {
        abi: string;
        codeHash: Uint8Array;
    }[]): Promise<Address>;
    call(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    callSim(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const returnData = await (isSim ? client.callSim(data, addr) : client.call(data, addr));
    return callback(returnData);
}
export module AgreementsAPI {
    export const contactName = "AgreementsAPI";
    export const abi = '[{"constant":true,"inputs":[{"internalType":"address","name":"_agreementAddress","type":"address"}],"name":"isFullyExecuted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}]';
    export const bytecode = '6111fa610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c806306fb063b1461005057806360b7f43d146100ac5780639c0bdd2b14610170575b600080fd5b6100926004803603602081101561006657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610221565b604051808215151515815260200191505060405180910390f35b8180156100b857600080fd5b506100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610438565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b81801561017c57600080fd5b506101df6004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080829050600080600090505b8273ffffffffffffffffffffffffffffffffffffffff16637f8093816040518163ffffffff1660e01b815260040160206040518083038186803b15801561027557600080fd5b505afa158015610289573d6000803e3d6000fd5b505050506040513d602081101561029f57600080fd5b810190808051906020019092919050505081101561042b578273ffffffffffffffffffffffffffffffffffffffff1663f4b9d96e8473ffffffffffffffffffffffffffffffffffffffff166379ce3cb2846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561032457600080fd5b505afa158015610338573d6000803e3d6000fd5b505050506040513d602081101561034e57600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156103be57600080fd5b505afa1580156103d2573d6000803e3d6000fd5b505050506040513d60408110156103e857600080fd5b810190808051906020019092919080519060200190929190505050905080925050600082141561041e5760009350505050610433565b808060010191505061022f565b506001925050505b919050565b600080600083905060008060008373ffffffffffffffffffffffffffffffffffffffff16637f8093816040518163ffffffff1660e01b815260040160206040518083038186803b15801561048b57600080fd5b505afa15801561049f573d6000803e3d6000fd5b505050506040513d60208110156104b557600080fd5b81019080805190602001909291905050509050600091505b808210156105ef578373ffffffffffffffffffffffffffffffffffffffff166379ce3cb2836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561052657600080fd5b505afa15801561053a573d6000803e3d6000fd5b505050506040513d602081101561055057600080fd5b810190808051906020019092919050505092503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806105c857503273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156105e25782955082945085859550955050505050610ad4565b81806001019250506104cd565b600091505b80821015610acf578373ffffffffffffffffffffffffffffffffffffffff166379ce3cb2836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d602081101561067757600080fd5b8101908080519060200190929190505050925073__$fdd731fada9905693765f0d2a681d4c856$__6392302b87846106ad6110e7565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801561075257600080fd5b505af4158015610766573d6000803e3d6000fd5b505050506040513d602081101561077c57600080fd5b810190808051906020019092919050505015610ac25760008473ffffffffffffffffffffffffffffffffffffffff16633c0e5245858773ffffffffffffffffffffffffffffffffffffffff166380c86ba76040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f757600080fd5b505afa15801561080b573d6000803e3d6000fd5b505050506040513d602081101561082157600080fd5b8101908080519060200190929190505050886040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b1580156108cd57600080fd5b505afa1580156108e1573d6000803e3d6000fd5b505050506040513d60208110156108f757600080fd5b810190808051906020019092919050505090508373ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5133836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d60208110156109b957600080fd5b8101908080519060200190929190505050156109e5573396508395508686965096505050505050610ad4565b8373ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5132836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015610a6a57600080fd5b505afa158015610a7e573d6000803e3d6000fd5b505050506040513d6020811015610a9457600080fd5b810190808051906020019092919050505015610ac0573296508395508686965096505050505050610ad4565b505b81806001019250506105f4565b505050505b915091565b60008083905060008090505b8173ffffffffffffffffffffffffffffffffffffffff16637f8093816040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2b57600080fd5b505afa158015610b3f573d6000803e3d6000fd5b505050506040513d6020811015610b5557600080fd5b81019080805190602001909291905050508110156110da578373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff166379ce3cb2836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610bd557600080fd5b505afa158015610be9573d6000803e3d6000fd5b505050506040513d6020811015610bff57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614156110cd573373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c9157503273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b15610ca05783925050506110e1565b73__$fdd731fada9905693765f0d2a681d4c856$__6392302b8785610cc36110e7565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b158015610d6857600080fd5b505af4158015610d7c573d6000803e3d6000fd5b505050506040513d6020811015610d9257600080fd5b8101908080519060200190929190505050156110c25760008273ffffffffffffffffffffffffffffffffffffffff16633c0e5245868573ffffffffffffffffffffffffffffffffffffffff166380c86ba76040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0d57600080fd5b505afa158015610e21573d6000803e3d6000fd5b505050506040513d6020811015610e3757600080fd5b8101908080519060200190929190505050866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610ee357600080fd5b505afa158015610ef7573d6000803e3d6000fd5b505050506040513d6020811015610f0d57600080fd5b810190808051906020019092919050505090508473ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5133836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015610fa557600080fd5b505afa158015610fb9573d6000803e3d6000fd5b505050506040513d6020811015610fcf57600080fd5b810190808051906020019092919050505015610ff0573393505050506110e1565b8473ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5132836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561107557600080fd5b505afa158015611089573d6000803e3d6000fd5b505050506040513d602081101561109f57600080fd5b8101908080519060200190929190505050156110c0573293505050506110e1565b505b6000925050506110e1565b8080600101915050610ae5565b5060009150505b92915050565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f6164645573657228616464726573732900000000000000000000000000000000815250601001905060405160208183030381529060405280519060200120181890509056fea265627a7a72315820290a0a5edf0457f540f7883293e1c5919c7c2ee621b609741de16568a04c1e6864736f6c63430005110032';
    export const deployedBytecode = '730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c806306fb063b1461005057806360b7f43d146100ac5780639c0bdd2b14610170575b600080fd5b6100926004803603602081101561006657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610221565b604051808215151515815260200191505060405180910390f35b8180156100b857600080fd5b506100fb600480360360208110156100cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610438565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b81801561017c57600080fd5b506101df6004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080829050600080600090505b8273ffffffffffffffffffffffffffffffffffffffff16637f8093816040518163ffffffff1660e01b815260040160206040518083038186803b15801561027557600080fd5b505afa158015610289573d6000803e3d6000fd5b505050506040513d602081101561029f57600080fd5b810190808051906020019092919050505081101561042b578273ffffffffffffffffffffffffffffffffffffffff1663f4b9d96e8473ffffffffffffffffffffffffffffffffffffffff166379ce3cb2846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561032457600080fd5b505afa158015610338573d6000803e3d6000fd5b505050506040513d602081101561034e57600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156103be57600080fd5b505afa1580156103d2573d6000803e3d6000fd5b505050506040513d60408110156103e857600080fd5b810190808051906020019092919080519060200190929190505050905080925050600082141561041e5760009350505050610433565b808060010191505061022f565b506001925050505b919050565b600080600083905060008060008373ffffffffffffffffffffffffffffffffffffffff16637f8093816040518163ffffffff1660e01b815260040160206040518083038186803b15801561048b57600080fd5b505afa15801561049f573d6000803e3d6000fd5b505050506040513d60208110156104b557600080fd5b81019080805190602001909291905050509050600091505b808210156105ef578373ffffffffffffffffffffffffffffffffffffffff166379ce3cb2836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561052657600080fd5b505afa15801561053a573d6000803e3d6000fd5b505050506040513d602081101561055057600080fd5b810190808051906020019092919050505092503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806105c857503273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156105e25782955082945085859550955050505050610ad4565b81806001019250506104cd565b600091505b80821015610acf578373ffffffffffffffffffffffffffffffffffffffff166379ce3cb2836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d602081101561067757600080fd5b8101908080519060200190929190505050925073__$fdd731fada9905693765f0d2a681d4c856$__6392302b87846106ad6110e7565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b15801561075257600080fd5b505af4158015610766573d6000803e3d6000fd5b505050506040513d602081101561077c57600080fd5b810190808051906020019092919050505015610ac25760008473ffffffffffffffffffffffffffffffffffffffff16633c0e5245858773ffffffffffffffffffffffffffffffffffffffff166380c86ba76040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f757600080fd5b505afa15801561080b573d6000803e3d6000fd5b505050506040513d602081101561082157600080fd5b8101908080519060200190929190505050886040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b1580156108cd57600080fd5b505afa1580156108e1573d6000803e3d6000fd5b505050506040513d60208110156108f757600080fd5b810190808051906020019092919050505090508373ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5133836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d60208110156109b957600080fd5b8101908080519060200190929190505050156109e5573396508395508686965096505050505050610ad4565b8373ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5132836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015610a6a57600080fd5b505afa158015610a7e573d6000803e3d6000fd5b505050506040513d6020811015610a9457600080fd5b810190808051906020019092919050505015610ac0573296508395508686965096505050505050610ad4565b505b81806001019250506105f4565b505050505b915091565b60008083905060008090505b8173ffffffffffffffffffffffffffffffffffffffff16637f8093816040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2b57600080fd5b505afa158015610b3f573d6000803e3d6000fd5b505050506040513d6020811015610b5557600080fd5b81019080805190602001909291905050508110156110da578373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff166379ce3cb2836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610bd557600080fd5b505afa158015610be9573d6000803e3d6000fd5b505050506040513d6020811015610bff57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614156110cd573373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c9157503273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b15610ca05783925050506110e1565b73__$fdd731fada9905693765f0d2a681d4c856$__6392302b8785610cc36110e7565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019250505060206040518083038186803b158015610d6857600080fd5b505af4158015610d7c573d6000803e3d6000fd5b505050506040513d6020811015610d9257600080fd5b8101908080519060200190929190505050156110c25760008273ffffffffffffffffffffffffffffffffffffffff16633c0e5245868573ffffffffffffffffffffffffffffffffffffffff166380c86ba76040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0d57600080fd5b505afa158015610e21573d6000803e3d6000fd5b505050506040513d6020811015610e3757600080fd5b8101908080519060200190929190505050866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610ee357600080fd5b505afa158015610ef7573d6000803e3d6000fd5b505050506040513d6020811015610f0d57600080fd5b810190808051906020019092919050505090508473ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5133836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015610fa557600080fd5b505afa158015610fb9573d6000803e3d6000fd5b505050506040513d6020811015610fcf57600080fd5b810190808051906020019092919050505015610ff0573393505050506110e1565b8473ffffffffffffffffffffffffffffffffffffffff1663ddc5dd5132836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561107557600080fd5b505afa158015611089573d6000803e3d6000fd5b505050506040513d602081101561109f57600080fd5b8101908080519060200190929190505050156110c0573293505050506110e1565b505b6000925050506110e1565b8080600101915050610ae5565b5060009150505b92915050565b600060405160200180807f617574686f72697a655573657228616464726573732c62797465733332290000815250601e0190506040516020818303038152906040528051906020012060405160200180807f72656d6f7665557365722861646472657373290000000000000000000000000081525060130190506040516020818303038152906040528051906020012060405160200180807f6164645573657228616464726573732900000000000000000000000000000000815250601001905060405160208183030381529060405280519060200120181890509056fea265627a7a72315820290a0a5edf0457f540f7883293e1c5919c7c2ee621b609741de16568a04c1e6864736f6c63430005110032';
    export function deploy(client: Provider, commons_standards_ERC165Utils_sol_ERC165Utils: string, withContractMeta: boolean = false): Promise<string> {
        const codec = client.contractCodec(abi);
        const links = [{ name: "$fdd731fada9905693765f0d2a681d4c856$", address: commons_standards_ERC165Utils_sol_ERC165Utils }];
        const linkedBytecode = linker(bytecode, links);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        return client.deploy(data, withContractMeta ? [{ abi: AgreementsAPI.abi, codeHash: new Keccak(256).update(linker(AgreementsAPI.deployedBytecode, links), "hex").digest("binary") }] : undefined);
    }
    export async function deployContract(client: Provider, commons_standards_ERC165Utils_sol_ERC165Utils: string, withContractMeta: boolean = false): Promise<Contract> { const address = await deploy(client, commons_standards_ERC165Utils_sol_ERC165Utils, withContractMeta); return contract(client, address); }
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { isFullyExecuted(_agreementAddress: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).isFullyExecuted(_agreementAddress);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).isFullyExecuted();
                });
            } } as const } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        isFullyExecuted: (_agreementAddress: string) => { return codec.encodeFunctionData("06FB063B", _agreementAddress); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        isFullyExecuted: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("06FB063B", data); }
    }; };
}