//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CancelStreamSignal, ContractCodec, Event, linker, listenerFor, Result, Keccak } from "@hyperledger/burrow";
interface Provider {
    deploy(data: string | Uint8Array, contractMeta?: {
        abi: string;
        codeHash: Uint8Array;
    }[]): Promise<Address>;
    call(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    callSim(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const returnData = await (isSim ? client.callSim(data, addr) : client.call(data, addr));
    return callback(returnData);
}
export module ArchetypeRegistryDb {
    export const contactName = "ArchetypeRegistryDb";
    export const abi = '[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogSystemOwnerChanged","type":"event"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"activatePackage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"}],"name":"addArchetype","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_archetype","type":"address"}],"name":"addArchetypeToPackage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"}],"name":"archetypeExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_author","type":"address"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"bool","name":"_active","type":"bool"}],"name":"createPackage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"deactivatePackage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getArchetypeAtIndex","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"address","name":"archetype","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_packageId","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getArchetypeAtIndexInPackage","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfArchetypes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_packageId","type":"bytes32"}],"name":"getNumberOfArchetypesInPackage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfPackages","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getPackageAtIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getPackageData","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"bool","name":"isPrivate","type":"bool"},{"internalType":"bool","name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSystemOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"packageExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferSystemOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    export const bytecode = '608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061182a806100606000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a9b3524011610097578063d119d31e11610066578063d119d31e146104c9578063d2739ef01461053e578063eba7df041461059a578063faca9c86146105c857610100565b8063a9b352401461035b578063b4d6d4c7146103a1578063b8019b6814610425578063c589e0fd1461048757610100565b80637f692a2a116100d35780637f692a2a146101ff578063861f62141461024957806387bd4a22146102c1578063a29602071461031957610100565b80630a452ad614610105578063187dd6aa14610149578063524de76b146101c3578063786e3f41146101e1575b600080fd5b6101476004803603602081101561011b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105f6565b005b6101ad6004803603608081101561015f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291908035151590602001909291905050506109f3565b6040518082815260200191505060405180910390f35b6101cb610d0b565b6040518082815260200191505060405180910390f35b6101e9610d1b565b6040518082815260200191505060405180910390f35b610207610d2a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61027f6004803603604081101561025f57600080fd5b810190808035906020019092919080359060200190929190505050610d53565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610daf565b6040518082815260200191505060405180910390f35b6103456004803603602081101561032f57600080fd5b8101908080359060200190929190505050610fed565b6040518082815260200191505060405180910390f35b6103876004803603602081101561037157600080fd5b8101908080359060200190929190505050611016565b604051808215151515815260200191505060405180910390f35b6103cd600480360360208110156103b757600080fd5b8101908080359060200190929190505050611046565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182151515158152602001935050505060405180910390f35b6104716004803603604081101561043b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e9565b6040518082815260200191505060405180910390f35b6104b36004803603602081101561049d57600080fd5b81019080803590602001909291905050506114c3565b6040518082815260200191505060405180910390f35b6104f5600480360360208110156104df57600080fd5b81019080803590602001909291905050506114e7565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6105806004803603602081101561055457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611595565b604051808215151515815260200191505060405180910390f35b6105c6600480360360208110156105b057600080fd5b810190808035906020019092919050505061165f565b005b6105f4600480360360208110156105de57600080fd5b8101908080359060200190929190505050611697565b005b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106696116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156106ca5780820151818401526020810190506106af565b50505050905090810190601f1680156106f75780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b15801561074557600080fd5b505af4158015610759573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146107af61170c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156108105780820151818401526020810190506107f5565b50505050905090810190601f16801561083d5780820380516001836020036101000a031916815260200191505b508481038352602381526020018061176760239139604001848103825260258152602001806117b0602591396040019550505050505060006040518083038186803b15801561088b57600080fd5b505af415801561089f573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109f0577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a686116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610ac9578082015181840152602081019050610aae565b50505050905090810190601f168015610af65780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b158015610b4457600080fd5b505af4158015610b58573d6000803e3d6000fd5b505050506003600001600086815260200190815260200160002060040160009054906101000a900460ff1615610b9757610b90611749565b9050610d03565b600360010185908060018154018082558091505090600182039060005260206000200160009091929091909150556003600001600087815260200190815260200160002060000181905550846003600001600087815260200190815260200160002060010160000181905550836003600001600087815260200190815260200160002060010160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826003600001600087815260200190815260200160002060010160010160146101000a81548160ff021916908315150217905550816003600001600087815260200190815260200160002060010160010160156101000a81548160ff02191690831515021790555060016003600001600087815260200190815260200160002060040160006101000a81548160ff021916908315150217905550610d00611753565b90505b949350505050565b6000600360010180549050905090565b60006001800180549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360000160008481526020019081526020016000206001016002018281548110610d7c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e246116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610e85578082015181840152602081019050610e6a565b50505050905090810190601f168015610eb25780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b158015610f0057600080fd5b505af4158015610f14573d6000803e3d6000fd5b50505050600173__$5e3d4bda46c81e962f48c99e99f980d175$__633d4f1a2a90918460016040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060206040518083038186803b158015610fab57600080fd5b505af4158015610fbf573d6000803e3d6000fd5b505050506040513d6020811015610fd557600080fd5b81019080805190602001909291905050509050919050565b600060036000016000838152602001908152602001600020600101600201805490509050919050565b60006003600001600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b60008060006003600001600085815260200190815260200160002060010160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506003600001600085815260200190815260200160002060010160010160149054906101000a900460ff1691506003600001600085815260200190815260200160002060010160010160159054906101000a900460ff1690509193909250565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561115e6116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156111bf5780820151818401526020810190506111a4565b50505050905090810190601f1680156111ec5780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b15801561123a57600080fd5b505af415801561124e573d6000803e3d6000fd5b505050506003600001600084815260200190815260200160002060040160009054906101000a900460ff1661128c5761128561175c565b90506114bd565b6003600001600084815260200190815260200160002060010160020180548060200260200160405190810160405280929190818152602001828054801561132857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112de575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156113ce5780820151818401526020810190506113b3565b50505050905001935050505060206040518083038186803b1580156113f257600080fd5b505af4158015611406573d6000803e3d6000fd5b505050506040513d602081101561141c57600080fd5b81019080805190602001909291905050506114b257600360000160008481526020019081526020016000206001016002018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6114ba611753565b90505b92915050565b6000600360010182815481106114d557fe5b90600052602060002001549050919050565b600080600173__$5e3d4bda46c81e962f48c99e99f980d175$__6380ed56bd9091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561154357600080fd5b505af4158015611557573d6000803e3d6000fd5b505050506040513d604081101561156d57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000600173__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561161d57600080fd5b505af4158015611631573d6000803e3d6000fd5b505050506040513d602081101561164757600080fd5b81019080805190602001909291905050509050919050565b60016003600001600083815260200190815260200160002060010160010160156101000a81548160ff02191690831515021790555050565b60006003600001600083815260200190815260200160002060010160010160156101000a81548160ff02191690831515021790555050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006103ea905090565b60006001905090565b60006103e990509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158204b0999889483d260a51ea575063a683598aaa5bd4e0aea340962c8b036cf618064736f6c63430005110032';
    export const deployedBytecode = '608060405234801561001057600080fd5b50600436106101005760003560e01c8063a9b3524011610097578063d119d31e11610066578063d119d31e146104c9578063d2739ef01461053e578063eba7df041461059a578063faca9c86146105c857610100565b8063a9b352401461035b578063b4d6d4c7146103a1578063b8019b6814610425578063c589e0fd1461048757610100565b80637f692a2a116100d35780637f692a2a146101ff578063861f62141461024957806387bd4a22146102c1578063a29602071461031957610100565b80630a452ad614610105578063187dd6aa14610149578063524de76b146101c3578063786e3f41146101e1575b600080fd5b6101476004803603602081101561011b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105f6565b005b6101ad6004803603608081101561015f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291908035151590602001909291905050506109f3565b6040518082815260200191505060405180910390f35b6101cb610d0b565b6040518082815260200191505060405180910390f35b6101e9610d1b565b6040518082815260200191505060405180910390f35b610207610d2a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61027f6004803603604081101561025f57600080fd5b810190808035906020019092919080359060200190929190505050610d53565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610daf565b6040518082815260200191505060405180910390f35b6103456004803603602081101561032f57600080fd5b8101908080359060200190929190505050610fed565b6040518082815260200191505060405180910390f35b6103876004803603602081101561037157600080fd5b8101908080359060200190929190505050611016565b604051808215151515815260200191505060405180910390f35b6103cd600480360360208110156103b757600080fd5b8101908080359060200190929190505050611046565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182151515158152602001935050505060405180910390f35b6104716004803603604081101561043b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e9565b6040518082815260200191505060405180910390f35b6104b36004803603602081101561049d57600080fd5b81019080803590602001909291905050506114c3565b6040518082815260200191505060405180910390f35b6104f5600480360360208110156104df57600080fd5b81019080803590602001909291905050506114e7565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6105806004803603602081101561055457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611595565b604051808215151515815260200191505060405180910390f35b6105c6600480360360208110156105b057600080fd5b810190808035906020019092919050505061165f565b005b6105f4600480360360208110156105de57600080fd5b8101908080359060200190929190505050611697565b005b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106696116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156106ca5780820151818401526020810190506106af565b50505050905090810190601f1680156106f75780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b15801561074557600080fd5b505af4158015610759573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146107af61170c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156108105780820151818401526020810190506107f5565b50505050905090810190601f16801561083d5780820380516001836020036101000a031916815260200191505b508481038352602381526020018061176760239139604001848103825260258152602001806117b0602591396040019550505050505060006040518083038186803b15801561088b57600080fd5b505af415801561089f573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109f0577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610a686116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610ac9578082015181840152602081019050610aae565b50505050905090810190601f168015610af65780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b158015610b4457600080fd5b505af4158015610b58573d6000803e3d6000fd5b505050506003600001600086815260200190815260200160002060040160009054906101000a900460ff1615610b9757610b90611749565b9050610d03565b600360010185908060018154018082558091505090600182039060005260206000200160009091929091909150556003600001600087815260200190815260200160002060000181905550846003600001600087815260200190815260200160002060010160000181905550836003600001600087815260200190815260200160002060010160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826003600001600087815260200190815260200160002060010160010160146101000a81548160ff021916908315150217905550816003600001600087815260200190815260200160002060010160010160156101000a81548160ff02191690831515021790555060016003600001600087815260200190815260200160002060040160006101000a81548160ff021916908315150217905550610d00611753565b90505b949350505050565b6000600360010180549050905090565b60006001800180549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360000160008481526020019081526020016000206001016002018281548110610d7c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e246116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610e85578082015181840152602081019050610e6a565b50505050905090810190601f168015610eb25780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b158015610f0057600080fd5b505af4158015610f14573d6000803e3d6000fd5b50505050600173__$5e3d4bda46c81e962f48c99e99f980d175$__633d4f1a2a90918460016040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060206040518083038186803b158015610fab57600080fd5b505af4158015610fbf573d6000803e3d6000fd5b505050506040513d6020811015610fd557600080fd5b81019080805190602001909291905050509050919050565b600060036000016000838152602001908152602001600020600101600201805490509050919050565b60006003600001600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b60008060006003600001600085815260200190815260200160002060010160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506003600001600085815260200190815260200160002060010160010160149054906101000a900460ff1691506003600001600085815260200190815260200160002060010160010160159054906101000a900460ff1690509193909250565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561115e6116cf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156111bf5780820151818401526020810190506111a4565b50505050905090810190601f1680156111ec5780820380516001836020036101000a031916815260200191505b50848103835260218152602001806117d5602191396040018481038252602681526020018061178a602691396040019550505050505060006040518083038186803b15801561123a57600080fd5b505af415801561124e573d6000803e3d6000fd5b505050506003600001600084815260200190815260200160002060040160009054906101000a900460ff1661128c5761128561175c565b90506114bd565b6003600001600084815260200190815260200160002060010160020180548060200260200160405190810160405280929190818152602001828054801561132857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112de575b505050505073__$6c578ef14ebe2070bb2319c6842ae291e1$__633da80d669091846040518363ffffffff1660e01b815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019060200280838360005b838110156113ce5780820151818401526020810190506113b3565b50505050905001935050505060206040518083038186803b1580156113f257600080fd5b505af4158015611406573d6000803e3d6000fd5b505050506040513d602081101561141c57600080fd5b81019080805190602001909291905050506114b257600360000160008481526020019081526020016000206001016002018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6114ba611753565b90505b92915050565b6000600360010182815481106114d557fe5b90600052602060002001549050919050565b600080600173__$5e3d4bda46c81e962f48c99e99f980d175$__6380ed56bd9091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561154357600080fd5b505af4158015611557573d6000803e3d6000fd5b505050506040513d604081101561156d57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050915091565b6000600173__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561161d57600080fd5b505af4158015611631573d6000803e3d6000fd5b505050506040513d602081101561164757600080fd5b81019080805190602001909291905050509050919050565b60016003600001600083815260200190815260200160002060010160010160156101000a81548160ff02191690831515021790555050565b60006003600001600083815260200190815260200160002060010160010160156101000a81548160ff02191690831515021790555050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006103ea905090565b60006001905090565b60006103e990509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158204b0999889483d260a51ea575063a683598aaa5bd4e0aea340962c8b036cf618064736f6c63430005110032';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string, withContractMeta: boolean = false): Promise<string> {
        const codec = client.contractCodec(abi);
        const links = [{ name: "$ecfb6c4d3c3ceff197e19e585a0a53728c$", address: commons_base_ErrorsLib_sol_ErrorsLib }, { name: "$5e3d4bda46c81e962f48c99e99f980d175$", address: commons_collections_MappingsLib_sol_MappingsLib }, { name: "$6c578ef14ebe2070bb2319c6842ae291e1$", address: commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib }];
        const linkedBytecode = linker(bytecode, links);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        return client.deploy(data, withContractMeta ? [{ abi: ArchetypeRegistryDb.abi, codeHash: new Keccak(256).update(linker(ArchetypeRegistryDb.deployedBytecode, links), "hex").digest("binary") }] : undefined);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib: string, withContractMeta: boolean = false): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib, commons_collections_MappingsLib_sol_MappingsLib, commons_utils_ArrayUtilsLib_sol_ArrayUtilsLib, withContractMeta); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => unknown;
    const events = { LogSystemOwnerChanged: { signature: "0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogSystemOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { activatePackage(_id: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).activatePackage(_id);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).activatePackage();
                });
            }, addArchetype(_archetype: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addArchetype(_archetype);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addArchetype();
                });
            }, addArchetypeToPackage(_id: Buffer, _archetype: string, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).addArchetypeToPackage(_id, _archetype);
                return call<[
                    number
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addArchetypeToPackage();
                });
            }, archetypeExists(_archetype: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).archetypeExists(_archetype);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).archetypeExists();
                });
            }, createPackage(_id: Buffer, _author: string, _isPrivate: boolean, _active: boolean, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).createPackage(_id, _author, _isPrivate, _active);
                return call<[
                    number
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createPackage();
                });
            }, deactivatePackage(_id: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).deactivatePackage(_id);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).deactivatePackage();
                });
            }, getArchetypeAtIndex(_index: number, call = defaultCall): Promise<{
                error: number;
                archetype: string;
            }> {
                const data = encode(client).getArchetypeAtIndex(_index);
                return call<{
                    error: number;
                    archetype: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypeAtIndex();
                });
            }, getArchetypeAtIndexInPackage(_packageId: Buffer, _index: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getArchetypeAtIndexInPackage(_packageId, _index);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypeAtIndexInPackage();
                });
            }, getNumberOfArchetypes(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfArchetypes();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfArchetypes();
                });
            }, getNumberOfArchetypesInPackage(_packageId: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfArchetypesInPackage(_packageId);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfArchetypesInPackage();
                });
            }, getNumberOfPackages(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfPackages();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfPackages();
                });
            }, getPackageAtIndex(_index: number, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getPackageAtIndex(_index);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPackageAtIndex();
                });
            }, getPackageData(_id: Buffer, call = defaultCall): Promise<{
                author: string;
                isPrivate: boolean;
                active: boolean;
            }> {
                const data = encode(client).getPackageData(_id);
                return call<{
                    author: string;
                    isPrivate: boolean;
                    active: boolean;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPackageData();
                });
            }, getSystemOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSystemOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSystemOwner();
                });
            }, packageExists(_id: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).packageExists(_id);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).packageExists();
                });
            }, transferSystemOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferSystemOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferSystemOwnership();
                });
            } } as const, listeners: { LogSystemOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogSystemOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        activatePackage: (_id: Buffer) => { return codec.encodeFunctionData("EBA7DF04", _id); },
        addArchetype: (_archetype: string) => { return codec.encodeFunctionData("87BD4A22", _archetype); },
        addArchetypeToPackage: (_id: Buffer, _archetype: string) => { return codec.encodeFunctionData("B8019B68", _id, _archetype); },
        archetypeExists: (_archetype: string) => { return codec.encodeFunctionData("D2739EF0", _archetype); },
        createPackage: (_id: Buffer, _author: string, _isPrivate: boolean, _active: boolean) => { return codec.encodeFunctionData("187DD6AA", _id, _author, _isPrivate, _active); },
        deactivatePackage: (_id: Buffer) => { return codec.encodeFunctionData("FACA9C86", _id); },
        getArchetypeAtIndex: (_index: number) => { return codec.encodeFunctionData("D119D31E", _index); },
        getArchetypeAtIndexInPackage: (_packageId: Buffer, _index: number) => { return codec.encodeFunctionData("861F6214", _packageId, _index); },
        getNumberOfArchetypes: () => { return codec.encodeFunctionData("786E3F41"); },
        getNumberOfArchetypesInPackage: (_packageId: Buffer) => { return codec.encodeFunctionData("A2960207", _packageId); },
        getNumberOfPackages: () => { return codec.encodeFunctionData("524DE76B"); },
        getPackageAtIndex: (_index: number) => { return codec.encodeFunctionData("C589E0FD", _index); },
        getPackageData: (_id: Buffer) => { return codec.encodeFunctionData("B4D6D4C7", _id); },
        getSystemOwner: () => { return codec.encodeFunctionData("7F692A2A"); },
        packageExists: (_id: Buffer) => { return codec.encodeFunctionData("A9B35240", _id); },
        transferSystemOwnership: (_newOwner: string) => { return codec.encodeFunctionData("0A452AD6", _newOwner); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogSystemOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        activatePackage: (): void => { return; },
        addArchetype: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("87BD4A22", data);
            return { error: error };
        },
        addArchetypeToPackage: (): [
            number
        ] => { return codec.decodeFunctionResult ("B8019B68", data); },
        archetypeExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("D2739EF0", data); },
        createPackage: (): [
            number
        ] => { return codec.decodeFunctionResult ("187DD6AA", data); },
        deactivatePackage: (): void => { return; },
        getArchetypeAtIndex: (): {
            error: number;
            archetype: string;
        } => {
            const [error, archetype] = codec.decodeFunctionResult ("D119D31E", data);
            return { error: error, archetype: archetype };
        },
        getArchetypeAtIndexInPackage: (): [
            string
        ] => { return codec.decodeFunctionResult ("861F6214", data); },
        getNumberOfArchetypes: (): [
            number
        ] => { return codec.decodeFunctionResult ("786E3F41", data); },
        getNumberOfArchetypesInPackage: (): [
            number
        ] => { return codec.decodeFunctionResult ("A2960207", data); },
        getNumberOfPackages: (): [
            number
        ] => { return codec.decodeFunctionResult ("524DE76B", data); },
        getPackageAtIndex: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("C589E0FD", data); },
        getPackageData: (): {
            author: string;
            isPrivate: boolean;
            active: boolean;
        } => {
            const [author, isPrivate, active] = codec.decodeFunctionResult ("B4D6D4C7", data);
            return { author: author, isPrivate: isPrivate, active: active };
        },
        getSystemOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("7F692A2A", data); },
        packageExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("A9B35240", data); },
        transferSystemOwnership: (): void => { return; }
    }; };
}