//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module ActiveAgreementRegistry {
    export const contactName = "ActiveAgreementRegistry";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"collectionId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"uint8","name":"collectionType","type":"uint8"},{"indexed":false,"internalType":"bytes32","name":"packageId","type":"bytes32"}],"name":"LogAgreementCollectionCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"executionProcessInstance","type":"address"}],"name":"LogAgreementExecutionProcessUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"formationProcessInstance","type":"address"}],"name":"LogAgreementFormationProcessUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"collectionId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"}],"name":"LogAgreementToCollectionUpdate","type":"event"},{"constant":true,"inputs":[],"name":"DATA_ID_AGREEMENT","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"DATA_ID_RENEWAL_LOOP_BACK","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_ObjectFactory","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_Upgradeable","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_AGREEMENT_COLLECTIONS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_AGREEMENT_COLLECTION_MAP","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"OBJECT_CLASS_AGREEMENT","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_collectionId","type":"bytes32"},{"internalType":"address","name":"_agreement","type":"address"}],"name":"addAgreementToCollection","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"address","name":"_creator","type":"address"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"string","name":"_privateParametersFileReference","type":"string"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"address[]","name":"_parties","type":"address[]"},{"internalType":"bytes32","name":"_collectionId","type":"bytes32"},{"internalType":"address[]","name":"_governingAgreements","type":"address[]"}],"name":"createAgreement","outputs":[{"internalType":"address","name":"activeAgreement","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_author","type":"address"},{"internalType":"enum Agreements.CollectionType","name":"_collectionType","type":"uint8"},{"internalType":"bytes32","name":"_packageId","type":"bytes32"}],"name":"createAgreementCollection","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getActiveAgreementAtIndex","outputs":[{"internalType":"address","name":"activeAgreement","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_activeAgreement","type":"address"}],"name":"getActiveAgreementData","outputs":[{"internalType":"address","name":"archetype","type":"address"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"privateParametersFileReference","type":"string"},{"internalType":"string","name":"eventLogFileReference","type":"string"},{"internalType":"uint256","name":"maxNumberOfEvents","type":"uint256"},{"internalType":"bool","name":"isPrivate","type":"bool"},{"internalType":"uint8","name":"legalState","type":"uint8"},{"internalType":"address","name":"formationProcessInstance","type":"address"},{"internalType":"address","name":"executionProcessInstance","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getActiveAgreementsSize","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getAgreementAtIndexInCollection","outputs":[{"internalType":"address","name":"agreement","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getAgreementCollectionAtIndex","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getAgreementCollectionData","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"uint8","name":"collectionType","type":"uint8"},{"internalType":"bytes32","name":"packageId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"uint256","name":"_pos","type":"uint256"}],"name":"getAgreementParameterAtIndex","outputs":[{"internalType":"bytes32","name":"dataId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"_dataId","type":"bytes32"}],"name":"getAgreementParameterDetails","outputs":[{"internalType":"address","name":"process","type":"address"},{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"uintValue","type":"uint256"},{"internalType":"int256","name":"intValue","type":"int256"},{"internalType":"bytes32","name":"bytes32Value","type":"bytes32"},{"internalType":"address","name":"addressValue","type":"address"},{"internalType":"bool","name":"boolValue","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"getArchetypeRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"getBpmService","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_agreement","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getGoverningAgreementAtIndex","outputs":[{"internalType":"address","name":"governingAgreement","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfAgreementCollections","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getNumberOfAgreementParameters","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getNumberOfAgreementsInCollection","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_agreement","type":"address"}],"name":"getNumberOfGoverningAgreements","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_activeAgreement","type":"address"}],"name":"getPartiesByActiveAgreementSize","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_activeAgreement","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getPartyByActiveAgreementAtIndex","outputs":[{"internalType":"address","name":"party","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_activeAgreement","type":"address"},{"internalType":"address","name":"_party","type":"address"}],"name":"getPartyByActiveAgreementData","outputs":[{"internalType":"address","name":"signedBy","type":"address"},{"internalType":"uint256","name":"signatureTimestamp","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"contract ProcessInstance","name":"_pi","type":"address"}],"name":"processStateChanged","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_activeAgreement","type":"address"},{"internalType":"string","name":"_eventLogFileReference","type":"string"}],"name":"setEventLogReference","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_agreement","type":"address"},{"internalType":"uint32","name":"_maxNumberOfEvents","type":"uint32"}],"name":"setMaxNumberOfEvents","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_activeAgreement","type":"address"},{"internalType":"string","name":"_signatureLogFileReference","type":"string"}],"name":"setSignatureLogReference","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract ActiveAgreement","name":"_agreement","type":"address"}],"name":"startProcessLifecycle","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"address","name":"processInstance","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract ProcessInstance","name":"_processInstance","type":"address"}],"name":"transferAddressScopes","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_successor","type":"address"}],"name":"upgrade","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogAgreementCollectionCreation: { signature: "F15AA852A0CFD471FC73938CCB7ADEF244D3563B0D1A301ED863EEA9494E42E3", tagged: (eventId: Buffer, collectionId: Buffer, author: string, collectionType: number, packageId: Buffer) => ({ name: "LogAgreementCollectionCreation", payload: { eventId: eventId, collectionId: collectionId, author: author, collectionType: collectionType, packageId: packageId } as const } as const) } as const, LogAgreementExecutionProcessUpdate: { signature: "A2394E9595D81855A19D93EDAED427A2284E2F0B79D0EFA57CA288536EF27C92", tagged: (eventId: Buffer, agreementAddress: string, executionProcessInstance: string) => ({ name: "LogAgreementExecutionProcessUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, executionProcessInstance: executionProcessInstance } as const } as const) } as const, LogAgreementFormationProcessUpdate: { signature: "B9BF77BC620128CD4591B6007B72C8D403312DC11C4B8029E88140394110853E", tagged: (eventId: Buffer, agreementAddress: string, formationProcessInstance: string) => ({ name: "LogAgreementFormationProcessUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, formationProcessInstance: formationProcessInstance } as const } as const) } as const, LogAgreementToCollectionUpdate: { signature: "8E2F60D6F5C049862987A5101D70110ACDB1C96F9B2D95F33F178C73990C642D", tagged: (eventId: Buffer, collectionId: Buffer, agreementAddress: string) => ({ name: "LogAgreementToCollectionUpdate", payload: { eventId: eventId, collectionId: collectionId, agreementAddress: agreementAddress } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { DATA_ID_AGREEMENT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).DATA_ID_AGREEMENT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DATA_ID_AGREEMENT();
                });
            }, DATA_ID_RENEWAL_LOOP_BACK(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).DATA_ID_RENEWAL_LOOP_BACK();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DATA_ID_RENEWAL_LOOP_BACK();
                });
            }, ERC165_ID_ObjectFactory(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_ObjectFactory();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_ObjectFactory();
                });
            }, ERC165_ID_Upgradeable(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_Upgradeable();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_Upgradeable();
                });
            }, ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, EVENT_ID_AGREEMENT_COLLECTIONS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_AGREEMENT_COLLECTIONS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_AGREEMENT_COLLECTIONS();
                });
            }, EVENT_ID_AGREEMENT_COLLECTION_MAP(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_AGREEMENT_COLLECTION_MAP();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_AGREEMENT_COLLECTION_MAP();
                });
            }, OBJECT_CLASS_AGREEMENT(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).OBJECT_CLASS_AGREEMENT();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).OBJECT_CLASS_AGREEMENT();
                });
            }, addAgreementToCollection(_collectionId: Buffer, _agreement: string, call = defaultCall): Promise<void> {
                const data = encode(client).addAgreementToCollection(_collectionId, _agreement);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addAgreementToCollection();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, createAgreement(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _collectionId: Buffer, _governingAgreements: string[], call = defaultCall): Promise<{
                activeAgreement: string;
            }> {
                const data = encode(client).createAgreement(_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _collectionId, _governingAgreements);
                return call<{
                    activeAgreement: string;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createAgreement();
                });
            }, createAgreementCollection(_author: string, _collectionType: number, _packageId: Buffer, call = defaultCall): Promise<{
                error: number;
                id: Buffer;
            }> {
                const data = encode(client).createAgreementCollection(_author, _collectionType, _packageId);
                return call<{
                    error: number;
                    id: Buffer;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createAgreementCollection();
                });
            }, getActiveAgreementAtIndex(_index: number, call = defaultCall): Promise<{
                activeAgreement: string;
            }> {
                const data = encode(client).getActiveAgreementAtIndex(_index);
                return call<{
                    activeAgreement: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActiveAgreementAtIndex();
                });
            }, getActiveAgreementData(_activeAgreement: string, call = defaultCall): Promise<{
                archetype: string;
                creator: string;
                privateParametersFileReference: string;
                eventLogFileReference: string;
                maxNumberOfEvents: number;
                isPrivate: boolean;
                legalState: number;
                formationProcessInstance: string;
                executionProcessInstance: string;
            }> {
                const data = encode(client).getActiveAgreementData(_activeAgreement);
                return call<{
                    archetype: string;
                    creator: string;
                    privateParametersFileReference: string;
                    eventLogFileReference: string;
                    maxNumberOfEvents: number;
                    isPrivate: boolean;
                    legalState: number;
                    formationProcessInstance: string;
                    executionProcessInstance: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActiveAgreementData();
                });
            }, getActiveAgreementsSize(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getActiveAgreementsSize();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActiveAgreementsSize();
                });
            }, getAgreementAtIndexInCollection(_id: Buffer, _index: number, call = defaultCall): Promise<{
                agreement: string;
            }> {
                const data = encode(client).getAgreementAtIndexInCollection(_id, _index);
                return call<{
                    agreement: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAgreementAtIndexInCollection();
                });
            }, getAgreementCollectionAtIndex(_index: number, call = defaultCall): Promise<{
                id: Buffer;
            }> {
                const data = encode(client).getAgreementCollectionAtIndex(_index);
                return call<{
                    id: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAgreementCollectionAtIndex();
                });
            }, getAgreementCollectionData(_id: Buffer, call = defaultCall): Promise<{
                author: string;
                collectionType: number;
                packageId: Buffer;
            }> {
                const data = encode(client).getAgreementCollectionData(_id);
                return call<{
                    author: string;
                    collectionType: number;
                    packageId: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAgreementCollectionData();
                });
            }, getAgreementParameterAtIndex(_address: string, _pos: number, call = defaultCall): Promise<{
                dataId: Buffer;
            }> {
                const data = encode(client).getAgreementParameterAtIndex(_address, _pos);
                return call<{
                    dataId: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAgreementParameterAtIndex();
                });
            }, getAgreementParameterDetails(_address: string, _dataId: Buffer, call = defaultCall): Promise<{
                process: string;
                id: Buffer;
                uintValue: number;
                intValue: number;
                bytes32Value: Buffer;
                addressValue: string;
                boolValue: boolean;
            }> {
                const data = encode(client).getAgreementParameterDetails(_address, _dataId);
                return call<{
                    process: string;
                    id: Buffer;
                    uintValue: number;
                    intValue: number;
                    bytes32Value: Buffer;
                    addressValue: string;
                    boolValue: boolean;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAgreementParameterDetails();
                });
            }, getArchetypeRegistry(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getArchetypeRegistry();
                return call<[
                    string
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypeRegistry();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getBpmService(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getBpmService();
                return call<[
                    string
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getBpmService();
                });
            }, getGoverningAgreementAtIndex(_agreement: string, _index: number, call = defaultCall): Promise<{
                governingAgreement: string;
            }> {
                const data = encode(client).getGoverningAgreementAtIndex(_agreement, _index);
                return call<{
                    governingAgreement: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getGoverningAgreementAtIndex();
                });
            }, getNumberOfAgreementCollections(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfAgreementCollections();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfAgreementCollections();
                });
            }, getNumberOfAgreementParameters(_address: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfAgreementParameters(_address);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfAgreementParameters();
                });
            }, getNumberOfAgreementsInCollection(_id: Buffer, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfAgreementsInCollection(_id);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfAgreementsInCollection();
                });
            }, getNumberOfGoverningAgreements(_agreement: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfGoverningAgreements(_agreement);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfGoverningAgreements();
                });
            }, getPartiesByActiveAgreementSize(_activeAgreement: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getPartiesByActiveAgreementSize(_activeAgreement);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPartiesByActiveAgreementSize();
                });
            }, getPartyByActiveAgreementAtIndex(_activeAgreement: string, _index: number, call = defaultCall): Promise<{
                party: string;
            }> {
                const data = encode(client).getPartyByActiveAgreementAtIndex(_activeAgreement, _index);
                return call<{
                    party: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPartyByActiveAgreementAtIndex();
                });
            }, getPartyByActiveAgreementData(_activeAgreement: string, _party: string, call = defaultCall): Promise<{
                signedBy: string;
                signatureTimestamp: number;
            }> {
                const data = encode(client).getPartyByActiveAgreementData(_activeAgreement, _party);
                return call<{
                    signedBy: string;
                    signatureTimestamp: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPartyByActiveAgreementData();
                });
            }, processStateChanged(_pi: string, call = defaultCall): Promise<void> {
                const data = encode(client).processStateChanged(_pi);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).processStateChanged();
                });
            }, setEventLogReference(_activeAgreement: string, _eventLogFileReference: string, call = defaultCall): Promise<void> {
                const data = encode(client).setEventLogReference(_activeAgreement, _eventLogFileReference);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setEventLogReference();
                });
            }, setMaxNumberOfEvents(_agreement: string, _maxNumberOfEvents: number, call = defaultCall): Promise<void> {
                const data = encode(client).setMaxNumberOfEvents(_agreement, _maxNumberOfEvents);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setMaxNumberOfEvents();
                });
            }, setSignatureLogReference(_activeAgreement: string, _signatureLogFileReference: string, call = defaultCall): Promise<void> {
                const data = encode(client).setSignatureLogReference(_activeAgreement, _signatureLogFileReference);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setSignatureLogReference();
                });
            }, startProcessLifecycle(_agreement: string, call = defaultCall): Promise<{
                error: number;
                processInstance: string;
            }> {
                const data = encode(client).startProcessLifecycle(_agreement);
                return call<{
                    error: number;
                    processInstance: string;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).startProcessLifecycle();
                });
            }, transferAddressScopes(_processInstance: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferAddressScopes(_processInstance);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferAddressScopes();
                });
            }, upgrade(_successor: string, call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).upgrade(_successor);
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).upgrade();
                });
            } } as const, listeners: { LogAgreementCollectionCreation(callback: (err?: Error, event?: {
                eventId: Buffer;
                collectionId: Buffer;
                author: string;
                collectionType: number;
                packageId: Buffer;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["F15AA852A0CFD471FC73938CCB7ADEF244D3563B0D1A301ED863EEA9494E42E3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCollectionCreation()); }, start, end); }, LogAgreementExecutionProcessUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                executionProcessInstance: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["A2394E9595D81855A19D93EDAED427A2284E2F0B79D0EFA57CA288536EF27C92"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementExecutionProcessUpdate()); }, start, end); }, LogAgreementFormationProcessUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                formationProcessInstance: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["B9BF77BC620128CD4591B6007B72C8D403312DC11C4B8029E88140394110853E"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementFormationProcessUpdate()); }, start, end); }, LogAgreementToCollectionUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                collectionId: Buffer;
                agreementAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["8E2F60D6F5C049862987A5101D70110ACDB1C96F9B2D95F33F178C73990C642D"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementToCollectionUpdate()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        DATA_ID_AGREEMENT: () => { return codec.encodeFunctionData("506DBA55"); },
        DATA_ID_RENEWAL_LOOP_BACK: () => { return codec.encodeFunctionData("08E3CA75"); },
        ERC165_ID_ObjectFactory: () => { return codec.encodeFunctionData("54AF67B7"); },
        ERC165_ID_Upgradeable: () => { return codec.encodeFunctionData("B21C815F"); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        EVENT_ID_AGREEMENT_COLLECTIONS: () => { return codec.encodeFunctionData("06319BD6"); },
        EVENT_ID_AGREEMENT_COLLECTION_MAP: () => { return codec.encodeFunctionData("92D0E81B"); },
        OBJECT_CLASS_AGREEMENT: () => { return codec.encodeFunctionData("C2E7F116"); },
        addAgreementToCollection: (_collectionId: Buffer, _agreement: string) => { return codec.encodeFunctionData("E09C7D5E", _collectionId, _agreement); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        createAgreement: (_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _collectionId: Buffer, _governingAgreements: string[]) => { return codec.encodeFunctionData("6261AF40", _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _collectionId, _governingAgreements); },
        createAgreementCollection: (_author: string, _collectionType: number, _packageId: Buffer) => { return codec.encodeFunctionData("65561AAC", _author, _collectionType, _packageId); },
        getActiveAgreementAtIndex: (_index: number) => { return codec.encodeFunctionData("2C86C866", _index); },
        getActiveAgreementData: (_activeAgreement: string) => { return codec.encodeFunctionData("27793035", _activeAgreement); },
        getActiveAgreementsSize: () => { return codec.encodeFunctionData("BF591D65"); },
        getAgreementAtIndexInCollection: (_id: Buffer, _index: number) => { return codec.encodeFunctionData("1B430596", _id, _index); },
        getAgreementCollectionAtIndex: (_index: number) => { return codec.encodeFunctionData("30E9472B", _index); },
        getAgreementCollectionData: (_id: Buffer) => { return codec.encodeFunctionData("FBD8CCD3", _id); },
        getAgreementParameterAtIndex: (_address: string, _pos: number) => { return codec.encodeFunctionData("A3106A2D", _address, _pos); },
        getAgreementParameterDetails: (_address: string, _dataId: Buffer) => { return codec.encodeFunctionData("92AFAAE8", _address, _dataId); },
        getArchetypeRegistry: () => { return codec.encodeFunctionData("01E08054"); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getBpmService: () => { return codec.encodeFunctionData("4846F303"); },
        getGoverningAgreementAtIndex: (_agreement: string, _index: number) => { return codec.encodeFunctionData("30AECA7A", _agreement, _index); },
        getNumberOfAgreementCollections: () => { return codec.encodeFunctionData("766AC213"); },
        getNumberOfAgreementParameters: (_address: string) => { return codec.encodeFunctionData("69A5C2D0", _address); },
        getNumberOfAgreementsInCollection: (_id: Buffer) => { return codec.encodeFunctionData("9E6EB6B9", _id); },
        getNumberOfGoverningAgreements: (_agreement: string) => { return codec.encodeFunctionData("220E8F8A", _agreement); },
        getPartiesByActiveAgreementSize: (_activeAgreement: string) => { return codec.encodeFunctionData("D5953D2B", _activeAgreement); },
        getPartyByActiveAgreementAtIndex: (_activeAgreement: string, _index: number) => { return codec.encodeFunctionData("E73BE278", _activeAgreement, _index); },
        getPartyByActiveAgreementData: (_activeAgreement: string, _party: string) => { return codec.encodeFunctionData("21D45D0C", _activeAgreement, _party); },
        processStateChanged: (_pi: string) => { return codec.encodeFunctionData("06B08F1C", _pi); },
        setEventLogReference: (_activeAgreement: string, _eventLogFileReference: string) => { return codec.encodeFunctionData("8EC25069", _activeAgreement, _eventLogFileReference); },
        setMaxNumberOfEvents: (_agreement: string, _maxNumberOfEvents: number) => { return codec.encodeFunctionData("108055A6", _agreement, _maxNumberOfEvents); },
        setSignatureLogReference: (_activeAgreement: string, _signatureLogFileReference: string) => { return codec.encodeFunctionData("E31F0582", _activeAgreement, _signatureLogFileReference); },
        startProcessLifecycle: (_agreement: string) => { return codec.encodeFunctionData("714F8F71", _agreement); },
        transferAddressScopes: (_processInstance: string) => { return codec.encodeFunctionData("DEEE44B3", _processInstance); },
        upgrade: (_successor: string) => { return codec.encodeFunctionData("0900F010", _successor); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogAgreementCollectionCreation: (): {
            eventId: Buffer;
            collectionId: Buffer;
            author: string;
            collectionType: number;
            packageId: Buffer;
        } => {
            const [eventId, collectionId, author, collectionType, packageId] = codec.decodeEventLog ("F15AA852A0CFD471FC73938CCB7ADEF244D3563B0D1A301ED863EEA9494E42E3", data, topics);
            return { eventId: eventId, collectionId: collectionId, author: author, collectionType: collectionType, packageId: packageId };
        },
        LogAgreementExecutionProcessUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            executionProcessInstance: string;
        } => {
            const [eventId, agreementAddress, executionProcessInstance] = codec.decodeEventLog ("A2394E9595D81855A19D93EDAED427A2284E2F0B79D0EFA57CA288536EF27C92", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, executionProcessInstance: executionProcessInstance };
        },
        LogAgreementFormationProcessUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            formationProcessInstance: string;
        } => {
            const [eventId, agreementAddress, formationProcessInstance] = codec.decodeEventLog ("B9BF77BC620128CD4591B6007B72C8D403312DC11C4B8029E88140394110853E", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, formationProcessInstance: formationProcessInstance };
        },
        LogAgreementToCollectionUpdate: (): {
            eventId: Buffer;
            collectionId: Buffer;
            agreementAddress: string;
        } => {
            const [eventId, collectionId, agreementAddress] = codec.decodeEventLog ("8E2F60D6F5C049862987A5101D70110ACDB1C96F9B2D95F33F178C73990C642D", data, topics);
            return { eventId: eventId, collectionId: collectionId, agreementAddress: agreementAddress };
        },
        DATA_ID_AGREEMENT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("506DBA55", data); },
        DATA_ID_RENEWAL_LOOP_BACK: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("08E3CA75", data); },
        ERC165_ID_ObjectFactory: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("54AF67B7", data); },
        ERC165_ID_Upgradeable: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("B21C815F", data); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        EVENT_ID_AGREEMENT_COLLECTIONS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("06319BD6", data); },
        EVENT_ID_AGREEMENT_COLLECTION_MAP: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("92D0E81B", data); },
        OBJECT_CLASS_AGREEMENT: (): [
            string
        ] => { return codec.decodeFunctionResult ("C2E7F116", data); },
        addAgreementToCollection: (): void => { return; },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        createAgreement: (): {
            activeAgreement: string;
        } => {
            const [activeAgreement] = codec.decodeFunctionResult ("6261AF40", data);
            return { activeAgreement: activeAgreement };
        },
        createAgreementCollection: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = codec.decodeFunctionResult ("65561AAC", data);
            return { error: error, id: id };
        },
        getActiveAgreementAtIndex: (): {
            activeAgreement: string;
        } => {
            const [activeAgreement] = codec.decodeFunctionResult ("2C86C866", data);
            return { activeAgreement: activeAgreement };
        },
        getActiveAgreementData: (): {
            archetype: string;
            creator: string;
            privateParametersFileReference: string;
            eventLogFileReference: string;
            maxNumberOfEvents: number;
            isPrivate: boolean;
            legalState: number;
            formationProcessInstance: string;
            executionProcessInstance: string;
        } => {
            const [archetype, creator, privateParametersFileReference, eventLogFileReference, maxNumberOfEvents, isPrivate, legalState, formationProcessInstance, executionProcessInstance] = codec.decodeFunctionResult ("27793035", data);
            return { archetype: archetype, creator: creator, privateParametersFileReference: privateParametersFileReference, eventLogFileReference: eventLogFileReference, maxNumberOfEvents: maxNumberOfEvents, isPrivate: isPrivate, legalState: legalState, formationProcessInstance: formationProcessInstance, executionProcessInstance: executionProcessInstance };
        },
        getActiveAgreementsSize: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("BF591D65", data);
            return { size: size };
        },
        getAgreementAtIndexInCollection: (): {
            agreement: string;
        } => {
            const [agreement] = codec.decodeFunctionResult ("1B430596", data);
            return { agreement: agreement };
        },
        getAgreementCollectionAtIndex: (): {
            id: Buffer;
        } => {
            const [id] = codec.decodeFunctionResult ("30E9472B", data);
            return { id: id };
        },
        getAgreementCollectionData: (): {
            author: string;
            collectionType: number;
            packageId: Buffer;
        } => {
            const [author, collectionType, packageId] = codec.decodeFunctionResult ("FBD8CCD3", data);
            return { author: author, collectionType: collectionType, packageId: packageId };
        },
        getAgreementParameterAtIndex: (): {
            dataId: Buffer;
        } => {
            const [dataId] = codec.decodeFunctionResult ("A3106A2D", data);
            return { dataId: dataId };
        },
        getAgreementParameterDetails: (): {
            process: string;
            id: Buffer;
            uintValue: number;
            intValue: number;
            bytes32Value: Buffer;
            addressValue: string;
            boolValue: boolean;
        } => {
            const [process, id, uintValue, intValue, bytes32Value, addressValue, boolValue] = codec.decodeFunctionResult ("92AFAAE8", data);
            return { process: process, id: id, uintValue: uintValue, intValue: intValue, bytes32Value: bytes32Value, addressValue: addressValue, boolValue: boolValue };
        },
        getArchetypeRegistry: (): [
            string
        ] => { return codec.decodeFunctionResult ("01E08054", data); },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getBpmService: (): [
            string
        ] => { return codec.decodeFunctionResult ("4846F303", data); },
        getGoverningAgreementAtIndex: (): {
            governingAgreement: string;
        } => {
            const [governingAgreement] = codec.decodeFunctionResult ("30AECA7A", data);
            return { governingAgreement: governingAgreement };
        },
        getNumberOfAgreementCollections: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("766AC213", data);
            return { size: size };
        },
        getNumberOfAgreementParameters: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("69A5C2D0", data);
            return { size: size };
        },
        getNumberOfAgreementsInCollection: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("9E6EB6B9", data);
            return { size: size };
        },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("220E8F8A", data);
            return { size: size };
        },
        getPartiesByActiveAgreementSize: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("D5953D2B", data);
            return { size: size };
        },
        getPartyByActiveAgreementAtIndex: (): {
            party: string;
        } => {
            const [party] = codec.decodeFunctionResult ("E73BE278", data);
            return { party: party };
        },
        getPartyByActiveAgreementData: (): {
            signedBy: string;
            signatureTimestamp: number;
        } => {
            const [signedBy, signatureTimestamp] = codec.decodeFunctionResult ("21D45D0C", data);
            return { signedBy: signedBy, signatureTimestamp: signatureTimestamp };
        },
        processStateChanged: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        startProcessLifecycle: (): {
            error: number;
            processInstance: string;
        } => {
            const [error, processInstance] = codec.decodeFunctionResult ("714F8F71", data);
            return { error: error, processInstance: processInstance };
        },
        transferAddressScopes: (): void => { return; },
        upgrade: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("0900F010", data);
            return { success: success };
        }
    }; };
}