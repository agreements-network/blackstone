//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module ActiveAgreement {
    export const contactName = "ActiveAgreement";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"party","type":"address"},{"indexed":false,"internalType":"address","name":"canceledBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"cancelationTimestamp","type":"uint256"}],"name":"LogActiveAgreementToPartyCancelationsUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"party","type":"address"},{"indexed":false,"internalType":"address","name":"signedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"signatureTimestamp","type":"uint256"}],"name":"LogActiveAgreementToPartySignaturesUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"bool","name":"isPrivate","type":"bool"},{"indexed":false,"internalType":"uint8","name":"legalState","type":"uint8"},{"indexed":false,"internalType":"uint32","name":"maxEventCount","type":"uint32"},{"indexed":false,"internalType":"string","name":"privateParametersFileReference","type":"string"},{"indexed":false,"internalType":"string","name":"eventLogFileReference","type":"string"}],"name":"LogAgreementCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"privateParametersFileReference","type":"string"},{"indexed":false,"internalType":"string","name":"eventLogFileReference","type":"string"},{"indexed":false,"internalType":"bool","name":"isPrivate","type":"bool"},{"indexed":false,"internalType":"uint8","name":"legalState","type":"uint8"},{"indexed":false,"internalType":"uint32","name":"maxEventCount","type":"uint32"}],"name":"LogAgreementCreation_v1_1_0","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"string","name":"eventLogFileReference","type":"string"}],"name":"LogAgreementEventLogReference","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"uint8","name":"legalState","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"legalStateUpdateTimestamp","type":"uint256"}],"name":"LogAgreementLegalStateUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"uint32","name":"maxEventCount","type":"uint32"}],"name":"LogAgreementMaxEventCountUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"LogAgreementOwnerUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"string","name":"privateParametersFileReference","type":"string"}],"name":"LogAgreementPrivateParametersReference","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"__DELETE__","type":"int256"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"}],"name":"LogAgreementRedaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventURN","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"int256","name":"expirationDate","type":"int256"}],"name":"LogAgreementRenewalExpirationDateUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"franchisee","type":"address"},{"indexed":false,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"bool","name":"renew","type":"bool"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"LogAgreementRenewalFranchiseeUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventURN","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"renew","type":"bool"}],"name":"LogAgreementRenewalResultUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventURN","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"int256","name":"expirationDate","type":"int256"},{"indexed":false,"internalType":"uint256","name":"threshold","type":"uint256"},{"indexed":false,"internalType":"string","name":"opensAtOffset","type":"string"},{"indexed":false,"internalType":"string","name":"closesAtOffset","type":"string"},{"indexed":false,"internalType":"string","name":"extensionOffset","type":"string"}],"name":"LogAgreementRenewalTermsDefined","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventURN","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"franchisee","type":"address"},{"indexed":false,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"bool","name":"renew","type":"bool"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"LogAgreementRenewalVoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventURN","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"renewalWindowOpen","type":"bool"},{"indexed":false,"internalType":"uint256","name":"closedAt","type":"uint256"}],"name":"LogAgreementRenewalWindowClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventURN","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"renewalWindowOpen","type":"bool"},{"indexed":false,"internalType":"uint256","name":"openedAt","type":"uint256"}],"name":"LogAgreementRenewalWindowOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"string","name":"signatureLogFileReference","type":"string"}],"name":"LogAgreementSignatureLogReference","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"addressValue","type":"address"}],"name":"LogDataStorageUpdateAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"address[]","name":"addressArrayValue","type":"address[]"}],"name":"LogDataStorageUpdateAddressArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"boolValue","type":"bool"}],"name":"LogDataStorageUpdateBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bool[]","name":"boolArrayValue","type":"bool[]"}],"name":"LogDataStorageUpdateBoolArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"bytes32Value","type":"bytes32"}],"name":"LogDataStorageUpdateBytes32","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bytes32[]","name":"bytes32ArrayValue","type":"bytes32[]"}],"name":"LogDataStorageUpdateBytes32Array","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"intValue","type":"int256"}],"name":"LogDataStorageUpdateInt","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"int256[]","name":"intArrayValue","type":"int256[]"}],"name":"LogDataStorageUpdateIntArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"string","name":"stringValue","type":"string"}],"name":"LogDataStorageUpdateString","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"uintValue","type":"uint256"}],"name":"LogDataStorageUpdateUint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"uint256[]","name":"uintArrayValue","type":"uint256[]"}],"name":"LogDataStorageUpdateUintArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"entityAddress","type":"address"},{"indexed":false,"internalType":"address","name":"scopeAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"scopeContext","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"fixedScope","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"dataPath","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"dataStorageId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"dataStorage","type":"address"}],"name":"LogEntityAddressScopeUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"governingAgreementAddress","type":"address"}],"name":"LogGoverningAgreementUpdate","type":"event"},{"constant":true,"inputs":[],"name":"DATA_FIELD_AGREEMENT_CANCELATION_DATE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"DATA_FIELD_AGREEMENT_CREATION_DATE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"DATA_FIELD_AGREEMENT_EFFECTIVE_DATE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"DATA_FIELD_AGREEMENT_PARTIES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EMPTY_SCOPE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_Address_Scopes","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_CREATED","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_DELETED","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_AGREEMENTS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_AGREEMENT_PARTY_MAP","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_DATA_STORAGE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ENTITIES_ADDRESS_SCOPES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_GOVERNING_AGREEMENT","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_STATE_CHANGED","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_UPDATED","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ROLE_ID_LEGAL_STATE_CONTROLLER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ROLE_ID_OBJECT_ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ROLE_ID_OWNER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_event","type":"bytes32"},{"internalType":"address","name":"_listener","type":"address"}],"name":"addEventListener","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_event","type":"bytes32"}],"name":"addEventListener","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"cancel","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_party","type":"address"}],"name":"cancelAsParty","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bool","name":"_renew","type":"bool"}],"name":"castRenewalVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"closeRenewalWindow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"bool","name":"_multiHolder","type":"bool"},{"internalType":"bool","name":"_revocable","type":"bool"},{"internalType":"bool","name":"_transferable","type":"bool"}],"name":"createPermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address[]","name":"_franchisees","type":"address[]"},{"internalType":"uint256","name":"_threshold","type":"uint256"},{"internalType":"string","name":"_opensAtOffset","type":"string"},{"internalType":"string","name":"_closesAtOffset","type":"string"},{"internalType":"string","name":"_extensionOffset","type":"string"}],"name":"defineRenewalTerms","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"_context","type":"bytes32"}],"name":"getAddressScopeDetails","outputs":[{"internalType":"bytes32","name":"fixedScope","type":"bytes32"},{"internalType":"bytes32","name":"dataPath","type":"bytes32"},{"internalType":"bytes32","name":"dataStorageId","type":"bytes32"},{"internalType":"address","name":"dataStorage","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getAddressScopeDetailsForKey","outputs":[{"internalType":"address","name":"keyAddress","type":"address"},{"internalType":"bytes32","name":"keyContext","type":"bytes32"},{"internalType":"bytes32","name":"fixedScope","type":"bytes32"},{"internalType":"bytes32","name":"dataPath","type":"bytes32"},{"internalType":"bytes32","name":"dataStorageId","type":"bytes32"},{"internalType":"address","name":"dataStorage","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAddressScopeKeys","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArchetype","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getArrayLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCreator","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getDataIdAtIndex","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataType","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsInt","outputs":[{"internalType":"int256","name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsString","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEventLogReference","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getGoverningAgreementAtIndex","outputs":[{"internalType":"address","name":"agreementAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getHolder","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getLegalState","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getMaxNumberOfEvents","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfGoverningAgreements","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfParties","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfRenewalFranchisees","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getPartyAtIndex","outputs":[{"internalType":"address","name":"party","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"}],"name":"getPermissionDetails","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"multiHolder","type":"bool"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bool","name":"transferable","type":"bool"},{"internalType":"uint256","name":"holderSize","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getPrivateParametersReference","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getRenewalFranchiseeAtIndex","outputs":[{"internalType":"address","name":"franchisee","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRenewalState","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRenewalTerms","outputs":[{"internalType":"uint256","name":"renewalThreshold","type":"uint256"},{"internalType":"int256","name":"agreementExpirationDate","type":"int256"},{"internalType":"string","name":"renewalOpensAtOffset","type":"string"},{"internalType":"string","name":"renewalClosesAtOffset","type":"string"},{"internalType":"string","name":"renewalExtensionOffset","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_franchisee","type":"address"}],"name":"getRenewalVoteDetails","outputs":[{"internalType":"address","name":"renewalVoter","type":"address"},{"internalType":"bool","name":"renewVote","type":"bool"},{"internalType":"uint256","name":"voteTimestamp","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_party","type":"address"}],"name":"getSignatureDetails","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSignatureLogReference","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_party","type":"address"}],"name":"getSignatureTimestamp","outputs":[{"internalType":"uint256","name":"signatureTimestamp","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_party","type":"address"}],"name":"getSignee","outputs":[{"internalType":"address","name":"signee","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_newHolder","type":"address"}],"name":"grantPermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_holder","type":"address"}],"name":"hasPermission","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"address","name":"_creator","type":"address"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"string","name":"_privateParametersFileReference","type":"string"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"address[]","name":"_parties","type":"address[]"},{"internalType":"address[]","name":"_governingAgreements","type":"address[]"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"address","name":"_creator","type":"address"},{"internalType":"string","name":"_privateParametersFileReference","type":"string"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"address[]","name":"_parties","type":"address[]"},{"internalType":"address[]","name":"_governingAgreements","type":"address[]"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"initializeObjectAdministrator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isPrivate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isRenewalWindowOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_signee","type":"address"}],"name":"isSignedBy","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"openRenewalWindow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"redact","outputs":[{"internalType":"enum Agreements.LegalState","name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"removeData","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_event","type":"bytes32"},{"internalType":"address","name":"_listener","type":"address"}],"name":"removeEventListener","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_event","type":"bytes32"}],"name":"removeEventListener","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"resetRenewalVotes","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"_context","type":"bytes32"},{"internalType":"contract DataStorage","name":"_dataStorage","type":"address"}],"name":"resolveAddressScope","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_holder","type":"address"}],"name":"revokePermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"_context","type":"bytes32"},{"internalType":"bytes32","name":"_fixedScope","type":"bytes32"},{"internalType":"bytes32","name":"_dataPath","type":"bytes32"},{"internalType":"bytes32","name":"_dataStorageId","type":"bytes32"},{"internalType":"address","name":"_dataStorage","type":"address"}],"name":"setAddressScope","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_value","type":"address"}],"name":"setDataValueAsAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address[]","name":"_value","type":"address[]"}],"name":"setDataValueAsAddressArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bool","name":"_value","type":"bool"}],"name":"setDataValueAsBool","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bool[]","name":"_value","type":"bool[]"}],"name":"setDataValueAsBoolArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bytes32","name":"_value","type":"bytes32"}],"name":"setDataValueAsBytes32","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bytes32[]","name":"_value","type":"bytes32[]"}],"name":"setDataValueAsBytes32Array","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"int256","name":"_value","type":"int256"}],"name":"setDataValueAsInt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"int256[]","name":"_value","type":"int256[]"}],"name":"setDataValueAsIntArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"string","name":"_value","type":"string"}],"name":"setDataValueAsString","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"setDataValueAsUint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256[]","name":"_value","type":"uint256[]"}],"name":"setDataValueAsUintArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_eventLogFileReference","type":"string"}],"name":"setEventLogReference","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"setFulfilled","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"enum Agreements.LegalState","name":"_legalState","type":"uint8"}],"name":"setLegalState","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint32","name":"_maxNumberOfEvents","type":"uint32"}],"name":"setMaxNumberOfEvents","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"int256","name":"_expirationDate","type":"int256"}],"name":"setNextExpirationDate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_privateParametersFileReference","type":"string"}],"name":"setPrivateParametersReference","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_signatureLogFileReference","type":"string"}],"name":"setSignatureLogReference","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"sign","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_party","type":"address"}],"name":"signAsParty","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_newHolder","type":"address"}],"name":"transferPermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogActiveAgreementToPartyCancelationsUpdate: { signature: "B1F29906146CC7D490B7C500DB434C32BB685A3B4AB06C858A51EB601F134F3E", tagged: (eventId: Buffer, agreementAddress: string, party: string, canceledBy: string, cancelationTimestamp: number) => ({ name: "LogActiveAgreementToPartyCancelationsUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, party: party, canceledBy: canceledBy, cancelationTimestamp: cancelationTimestamp } as const } as const) } as const, LogActiveAgreementToPartySignaturesUpdate: { signature: "426746C69DC5D87DB25FF2F3ADE2F69AC26E1C759CF6BE9A11BECEA41E605DDC", tagged: (eventId: Buffer, agreementAddress: string, party: string, signedBy: string, signatureTimestamp: number) => ({ name: "LogActiveAgreementToPartySignaturesUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, party: party, signedBy: signedBy, signatureTimestamp: signatureTimestamp } as const } as const) } as const, LogAgreementCreation: { signature: "8495C61FFEEE8E374FB2B7169345C2E010B3ABA7EE783414F898879680764F92", tagged: (eventId: Buffer, agreementAddress: string, archetypeAddress: string, creator: string, isPrivate: boolean, legalState: number, maxEventCount: number, privateParametersFileReference: string, eventLogFileReference: string) => ({ name: "LogAgreementCreation", payload: { eventId: eventId, agreementAddress: agreementAddress, archetypeAddress: archetypeAddress, creator: creator, isPrivate: isPrivate, legalState: legalState, maxEventCount: maxEventCount, privateParametersFileReference: privateParametersFileReference, eventLogFileReference: eventLogFileReference } as const } as const) } as const, LogAgreementCreation_v1_1_0: { signature: "AF1209150C79D19135C2CBF62BA482AC99586079247AA53C0E25423693DA5D1E", tagged: (eventId: Buffer, agreementAddress: string, archetypeAddress: string, creator: string, owner: string, privateParametersFileReference: string, eventLogFileReference: string, isPrivate: boolean, legalState: number, maxEventCount: number) => ({ name: "LogAgreementCreation_v1_1_0", payload: { eventId: eventId, agreementAddress: agreementAddress, archetypeAddress: archetypeAddress, creator: creator, owner: owner, privateParametersFileReference: privateParametersFileReference, eventLogFileReference: eventLogFileReference, isPrivate: isPrivate, legalState: legalState, maxEventCount: maxEventCount } as const } as const) } as const, LogAgreementEventLogReference: { signature: "A59F1BDF986536320B730FB73D7D2707EB7B8312A743E1BDC144F0D785572683", tagged: (eventId: Buffer, agreementAddress: string, eventLogFileReference: string) => ({ name: "LogAgreementEventLogReference", payload: { eventId: eventId, agreementAddress: agreementAddress, eventLogFileReference: eventLogFileReference } as const } as const) } as const, LogAgreementLegalStateUpdate: { signature: "64B8A7CACD875B7F3D28B9453288CFCC38414B965783E5277C696C655FB4B294", tagged: (eventId: Buffer, agreementAddress: string, legalState: number, legalStateUpdateTimestamp: number) => ({ name: "LogAgreementLegalStateUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, legalState: legalState, legalStateUpdateTimestamp: legalStateUpdateTimestamp } as const } as const) } as const, LogAgreementMaxEventCountUpdate: { signature: "9D21AB71E7E84FE89B2022FF8E6CC1EAD2CBE7BE8A637907EF2279D4B4D19BB4", tagged: (eventId: Buffer, agreementAddress: string, maxEventCount: number) => ({ name: "LogAgreementMaxEventCountUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, maxEventCount: maxEventCount } as const } as const) } as const, LogAgreementOwnerUpdate: { signature: "DC0276B26428605F2E3FB3BFC5BC8F81136E761A84BD0904CB792ECDFBED91C3", tagged: (eventId: Buffer, agreementAddress: string, owner: string) => ({ name: "LogAgreementOwnerUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, owner: owner } as const } as const) } as const, LogAgreementPrivateParametersReference: { signature: "C9690FEAD6289B57DC690E1C50CD5960BB3EC3D16C01DC445E9059D7C05A27C4", tagged: (eventId: Buffer, agreementAddress: string, privateParametersFileReference: string) => ({ name: "LogAgreementPrivateParametersReference", payload: { eventId: eventId, agreementAddress: agreementAddress, privateParametersFileReference: privateParametersFileReference } as const } as const) } as const, LogAgreementRedaction: { signature: "24B79A501D8660D52A906DDC5071C1494AF214A1443BA687072557C16EF96142", tagged: (eventId: Buffer, __DELETE__: number, agreementAddress: string) => ({ name: "LogAgreementRedaction", payload: { eventId: eventId, __DELETE__: __DELETE__, agreementAddress: agreementAddress } as const } as const) } as const, LogAgreementRenewalExpirationDateUpdate: { signature: "065060DDCC74FDB42BD83D60625128B9ACEF117E3FE99B8A50CDFEB0D12B791C", tagged: (eventURN: Buffer, agreementAddress: string, expirationDate: number) => ({ name: "LogAgreementRenewalExpirationDateUpdate", payload: { eventURN: eventURN, agreementAddress: agreementAddress, expirationDate: expirationDate } as const } as const) } as const, LogAgreementRenewalFranchiseeUpdate: { signature: "76C512528B3348A170FCE985B7603A2BA143BDF1E4645153B4D2952E99573E09", tagged: (eventId: Buffer, agreementAddress: string, franchisee: string, voter: string, renew: boolean, timestamp: number) => ({ name: "LogAgreementRenewalFranchiseeUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, franchisee: franchisee, voter: voter, renew: renew, timestamp: timestamp } as const } as const) } as const, LogAgreementRenewalResultUpdate: { signature: "B943EFB3FC1DA02BB1E14EED2EE64F5394E1F6F800EE4EA04C80CEFE3A79BC75", tagged: (eventURN: Buffer, agreementAddress: string, renew: boolean) => ({ name: "LogAgreementRenewalResultUpdate", payload: { eventURN: eventURN, agreementAddress: agreementAddress, renew: renew } as const } as const) } as const, LogAgreementRenewalTermsDefined: { signature: "A4607FDD9293C6F4B8B00C658E9537CB8C9962323EFB992B43517D29D462FFF7", tagged: (eventURN: Buffer, agreementAddress: string, expirationDate: number, threshold: number, opensAtOffset: string, closesAtOffset: string, extensionOffset: string) => ({ name: "LogAgreementRenewalTermsDefined", payload: { eventURN: eventURN, agreementAddress: agreementAddress, expirationDate: expirationDate, threshold: threshold, opensAtOffset: opensAtOffset, closesAtOffset: closesAtOffset, extensionOffset: extensionOffset } as const } as const) } as const, LogAgreementRenewalVoteCast: { signature: "51B47958068FC9BEA1ACF9A821D66C2E1BD06EB6261035948B9185300CBCAC5B", tagged: (eventURN: Buffer, agreementAddress: string, franchisee: string, voter: string, renew: boolean, timestamp: number) => ({ name: "LogAgreementRenewalVoteCast", payload: { eventURN: eventURN, agreementAddress: agreementAddress, franchisee: franchisee, voter: voter, renew: renew, timestamp: timestamp } as const } as const) } as const, LogAgreementRenewalWindowClosed: { signature: "D999895EF4E74C2E812B1770FC1D6FB3B5CD235BA2ACB0429F95846E6CA99A6F", tagged: (eventURN: Buffer, agreementAddress: string, renewalWindowOpen: boolean, closedAt: number) => ({ name: "LogAgreementRenewalWindowClosed", payload: { eventURN: eventURN, agreementAddress: agreementAddress, renewalWindowOpen: renewalWindowOpen, closedAt: closedAt } as const } as const) } as const, LogAgreementRenewalWindowOpened: { signature: "38AFD8082DEF1261A99C6531CD2D0F21A60D79BAEC07015B980D61457B752434", tagged: (eventURN: Buffer, agreementAddress: string, renewalWindowOpen: boolean, openedAt: number) => ({ name: "LogAgreementRenewalWindowOpened", payload: { eventURN: eventURN, agreementAddress: agreementAddress, renewalWindowOpen: renewalWindowOpen, openedAt: openedAt } as const } as const) } as const, LogAgreementSignatureLogReference: { signature: "4F5146E170CE6C18993979384E01F6A3BF0D482E0C024FF728F019E70A7A024A", tagged: (eventId: Buffer, agreementAddress: string, signatureLogFileReference: string) => ({ name: "LogAgreementSignatureLogReference", payload: { eventId: eventId, agreementAddress: agreementAddress, signatureLogFileReference: signatureLogFileReference } as const } as const) } as const, LogDataStorageUpdateAddress: { signature: "5F3782AABDDED4C30D0E717EEFA344F09585650AF94F12A59E413C35C874AA6E", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, addressValue: string) => ({ name: "LogDataStorageUpdateAddress", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressValue: addressValue } as const } as const) } as const, LogDataStorageUpdateAddressArray: { signature: "4FFF484425217F89CE50E27EB9F24A1260AF996F0D4A3726B57815DCA888C8EE", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, addressArrayValue: string[]) => ({ name: "LogDataStorageUpdateAddressArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressArrayValue: addressArrayValue } as const } as const) } as const, LogDataStorageUpdateBool: { signature: "4000BE176D38D7C89B64CED66D386475DB613BF81DDC0F1E78D0FE91585CEE3F", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, boolValue: boolean) => ({ name: "LogDataStorageUpdateBool", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolValue: boolValue } as const } as const) } as const, LogDataStorageUpdateBoolArray: { signature: "054258D5E91863B9C9D6664D6B19BA3C664F82481282BFD032F2C68053EF28A2", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, boolArrayValue: boolean[]) => ({ name: "LogDataStorageUpdateBoolArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolArrayValue: boolArrayValue } as const } as const) } as const, LogDataStorageUpdateBytes32: { signature: "175284BE8D23FFEAFF64148E54DDDF392131E21BDE39E27D34C23925799A9D3B", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, bytes32Value: Buffer) => ({ name: "LogDataStorageUpdateBytes32", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32Value: bytes32Value } as const } as const) } as const, LogDataStorageUpdateBytes32Array: { signature: "95C29751333E692A5607E8D9F8D042D14DE9AC9EF26EF50558D4A59F12B9B65F", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, bytes32ArrayValue: Buffer[]) => ({ name: "LogDataStorageUpdateBytes32Array", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32ArrayValue: bytes32ArrayValue } as const } as const) } as const, LogDataStorageUpdateInt: { signature: "4FAE6699EB0F881C4F8DF1E7D66305898984BD24CB684F775238368F1D77ACD3", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, intValue: number) => ({ name: "LogDataStorageUpdateInt", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intValue: intValue } as const } as const) } as const, LogDataStorageUpdateIntArray: { signature: "D6E61696415CDECD64DE4AEB6B7C4C524171A049D6844883FD60066AE6E1FF23", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, intArrayValue: number[]) => ({ name: "LogDataStorageUpdateIntArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intArrayValue: intArrayValue } as const } as const) } as const, LogDataStorageUpdateString: { signature: "DDC3E5BF46FC6E7FFE2506D0F0DCBA0625F68E6DB07BF879110EA3419E47BC29", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, stringValue: string) => ({ name: "LogDataStorageUpdateString", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, stringValue: stringValue } as const } as const) } as const, LogDataStorageUpdateUint: { signature: "07B481CBEAA4E99FD6638D014C6A9A7459F10E4FDF29E537F41D5FB037C30F35", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, uintValue: number) => ({ name: "LogDataStorageUpdateUint", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintValue: uintValue } as const } as const) } as const, LogDataStorageUpdateUintArray: { signature: "A37058671AEDF6CC65626AB2E805CB856E17E10FC82582B6E878EE4AED1F0ECD", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, uintArrayValue: number[]) => ({ name: "LogDataStorageUpdateUintArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintArrayValue: uintArrayValue } as const } as const) } as const, LogEntityAddressScopeUpdate: { signature: "757FFF527744F487D9C9EC5DF491336680EF60ECCF50F97A494EB216E66725B9", tagged: (eventId: Buffer, entityAddress: string, scopeAddress: string, scopeContext: Buffer, fixedScope: Buffer, dataPath: Buffer, dataStorageId: Buffer, dataStorage: string) => ({ name: "LogEntityAddressScopeUpdate", payload: { eventId: eventId, entityAddress: entityAddress, scopeAddress: scopeAddress, scopeContext: scopeContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage } as const } as const) } as const, LogGoverningAgreementUpdate: { signature: "E7A1C84892A680B6FB7A2D501B58329E31A92D1AF2CD03E6B97C3E74DEC3DFFD", tagged: (eventId: Buffer, agreementAddress: string, governingAgreementAddress: string) => ({ name: "LogGoverningAgreementUpdate", payload: { eventId: eventId, agreementAddress: agreementAddress, governingAgreementAddress: governingAgreementAddress } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { DATA_FIELD_AGREEMENT_CANCELATION_DATE(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).DATA_FIELD_AGREEMENT_CANCELATION_DATE();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DATA_FIELD_AGREEMENT_CANCELATION_DATE();
                });
            }, DATA_FIELD_AGREEMENT_CREATION_DATE(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).DATA_FIELD_AGREEMENT_CREATION_DATE();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DATA_FIELD_AGREEMENT_CREATION_DATE();
                });
            }, DATA_FIELD_AGREEMENT_EFFECTIVE_DATE(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DATA_FIELD_AGREEMENT_EFFECTIVE_DATE();
                });
            }, DATA_FIELD_AGREEMENT_PARTIES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).DATA_FIELD_AGREEMENT_PARTIES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DATA_FIELD_AGREEMENT_PARTIES();
                });
            }, EMPTY_SCOPE(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EMPTY_SCOPE();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EMPTY_SCOPE();
                });
            }, ERC165_ID_Address_Scopes(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_Address_Scopes();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_Address_Scopes();
                });
            }, ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, EVENT_CREATED(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_CREATED();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_CREATED();
                });
            }, EVENT_DELETED(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_DELETED();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_DELETED();
                });
            }, EVENT_ID_AGREEMENTS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_AGREEMENTS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_AGREEMENTS();
                });
            }, EVENT_ID_AGREEMENT_PARTY_MAP(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_AGREEMENT_PARTY_MAP();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_AGREEMENT_PARTY_MAP();
                });
            }, EVENT_ID_DATA_STORAGE(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_DATA_STORAGE();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_DATA_STORAGE();
                });
            }, EVENT_ID_ENTITIES_ADDRESS_SCOPES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
                });
            }, EVENT_ID_GOVERNING_AGREEMENT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_GOVERNING_AGREEMENT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_GOVERNING_AGREEMENT();
                });
            }, EVENT_ID_STATE_CHANGED(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_STATE_CHANGED();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_STATE_CHANGED();
                });
            }, EVENT_UPDATED(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_UPDATED();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_UPDATED();
                });
            }, ROLE_ID_LEGAL_STATE_CONTROLLER(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ROLE_ID_LEGAL_STATE_CONTROLLER();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ROLE_ID_LEGAL_STATE_CONTROLLER();
                });
            }, ROLE_ID_OBJECT_ADMIN(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ROLE_ID_OBJECT_ADMIN();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ROLE_ID_OBJECT_ADMIN();
                });
            }, ROLE_ID_OWNER(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ROLE_ID_OWNER();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ROLE_ID_OWNER();
                });
            }, addEventListener(_event: Buffer, _listener: string, call = defaultCall): Promise<void> {
                const data = encode(client).addEventListener[0](_event, _listener);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addEventListener[0]();
                });
            }, addEventListener_1(_event: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).addEventListener[1](_event);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addEventListener[1]();
                });
            }, cancel(call = defaultCall): Promise<void> {
                const data = encode(client).cancel();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).cancel();
                });
            }, cancelAsParty(_party: string, call = defaultCall): Promise<void> {
                const data = encode(client).cancelAsParty(_party);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).cancelAsParty();
                });
            }, castRenewalVote(_renew: boolean, call = defaultCall): Promise<void> {
                const data = encode(client).castRenewalVote(_renew);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).castRenewalVote();
                });
            }, closeRenewalWindow(call = defaultCall): Promise<void> {
                const data = encode(client).closeRenewalWindow();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).closeRenewalWindow();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean, call = defaultCall): Promise<void> {
                const data = encode(client).createPermission(_permission, _multiHolder, _revocable, _transferable);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createPermission();
                });
            }, defineRenewalTerms(_franchisees: string[], _threshold: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string, call = defaultCall): Promise<void> {
                const data = encode(client).defineRenewalTerms(_franchisees, _threshold, _opensAtOffset, _closesAtOffset, _extensionOffset);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).defineRenewalTerms();
                });
            }, getAddressScopeDetails(_address: string, _context: Buffer, call = defaultCall): Promise<{
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }> {
                const data = encode(client).getAddressScopeDetails(_address, _context);
                return call<{
                    fixedScope: Buffer;
                    dataPath: Buffer;
                    dataStorageId: Buffer;
                    dataStorage: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAddressScopeDetails();
                });
            }, getAddressScopeDetailsForKey(_key: Buffer, call = defaultCall): Promise<{
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }> {
                const data = encode(client).getAddressScopeDetailsForKey(_key);
                return call<{
                    keyAddress: string;
                    keyContext: Buffer;
                    fixedScope: Buffer;
                    dataPath: Buffer;
                    dataStorageId: Buffer;
                    dataStorage: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAddressScopeDetailsForKey();
                });
            }, getAddressScopeKeys(call = defaultCall): Promise<[
                Buffer[]
            ]> {
                const data = encode(client).getAddressScopeKeys();
                return call<[
                    Buffer[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAddressScopeKeys();
                });
            }, getArchetype(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getArchetype();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetype();
                });
            }, getArrayLength(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArrayLength(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArrayLength();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getCreator(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getCreator();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getCreator();
                });
            }, getDataIdAtIndex(_index: number, call = defaultCall): Promise<{
                error: number;
                id: Buffer;
            }> {
                const data = encode(client).getDataIdAtIndex(_index);
                return call<{
                    error: number;
                    id: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataIdAtIndex();
                });
            }, getDataType(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getDataType(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataType();
                });
            }, getDataValueAsAddress(_id: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getDataValueAsAddress(_id);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsAddress();
                });
            }, getDataValueAsAddressArray(_id: Buffer, call = defaultCall): Promise<[
                string[]
            ]> {
                const data = encode(client).getDataValueAsAddressArray(_id);
                return call<[
                    string[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsAddressArray();
                });
            }, getDataValueAsBool(_id: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).getDataValueAsBool(_id);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBool();
                });
            }, getDataValueAsBoolArray(_id: Buffer, call = defaultCall): Promise<[
                boolean[]
            ]> {
                const data = encode(client).getDataValueAsBoolArray(_id);
                return call<[
                    boolean[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBoolArray();
                });
            }, getDataValueAsBytes32(_id: Buffer, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getDataValueAsBytes32(_id);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBytes32();
                });
            }, getDataValueAsBytes32Array(_id: Buffer, call = defaultCall): Promise<[
                Buffer[]
            ]> {
                const data = encode(client).getDataValueAsBytes32Array(_id);
                return call<[
                    Buffer[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBytes32Array();
                });
            }, getDataValueAsInt(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getDataValueAsInt(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsInt();
                });
            }, getDataValueAsIntArray(_id: Buffer, call = defaultCall): Promise<[
                number[]
            ]> {
                const data = encode(client).getDataValueAsIntArray(_id);
                return call<[
                    number[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsIntArray();
                });
            }, getDataValueAsString(_id: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getDataValueAsString(_id);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsString();
                });
            }, getDataValueAsUint(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getDataValueAsUint(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsUint();
                });
            }, getDataValueAsUintArray(_id: Buffer, call = defaultCall): Promise<[
                number[]
            ]> {
                const data = encode(client).getDataValueAsUintArray(_id);
                return call<[
                    number[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsUintArray();
                });
            }, getEventLogReference(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getEventLogReference();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getEventLogReference();
                });
            }, getGoverningAgreementAtIndex(_index: number, call = defaultCall): Promise<{
                agreementAddress: string;
            }> {
                const data = encode(client).getGoverningAgreementAtIndex(_index);
                return call<{
                    agreementAddress: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getGoverningAgreementAtIndex();
                });
            }, getHolder(_permission: Buffer, _index: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getHolder(_permission, _index);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getHolder();
                });
            }, getLegalState(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getLegalState();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getLegalState();
                });
            }, getMaxNumberOfEvents(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getMaxNumberOfEvents();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getMaxNumberOfEvents();
                });
            }, getNumberOfData(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfData();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfData();
                });
            }, getNumberOfGoverningAgreements(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfGoverningAgreements();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfGoverningAgreements();
                });
            }, getNumberOfParties(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfParties();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfParties();
                });
            }, getNumberOfRenewalFranchisees(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfRenewalFranchisees();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfRenewalFranchisees();
                });
            }, getOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getOwner();
                });
            }, getPartyAtIndex(_index: number, call = defaultCall): Promise<{
                party: string;
            }> {
                const data = encode(client).getPartyAtIndex(_index);
                return call<{
                    party: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPartyAtIndex();
                });
            }, getPermissionDetails(_permission: Buffer, call = defaultCall): Promise<{
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }> {
                const data = encode(client).getPermissionDetails(_permission);
                return call<{
                    exists: boolean;
                    multiHolder: boolean;
                    revocable: boolean;
                    transferable: boolean;
                    holderSize: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPermissionDetails();
                });
            }, getPrivateParametersReference(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getPrivateParametersReference();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPrivateParametersReference();
                });
            }, getRenewalFranchiseeAtIndex(_index: number, call = defaultCall): Promise<{
                franchisee: string;
            }> {
                const data = encode(client).getRenewalFranchiseeAtIndex(_index);
                return call<{
                    franchisee: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getRenewalFranchiseeAtIndex();
                });
            }, getRenewalState(call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).getRenewalState();
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getRenewalState();
                });
            }, getRenewalTerms(call = defaultCall): Promise<{
                renewalThreshold: number;
                agreementExpirationDate: number;
                renewalOpensAtOffset: string;
                renewalClosesAtOffset: string;
                renewalExtensionOffset: string;
            }> {
                const data = encode(client).getRenewalTerms();
                return call<{
                    renewalThreshold: number;
                    agreementExpirationDate: number;
                    renewalOpensAtOffset: string;
                    renewalClosesAtOffset: string;
                    renewalExtensionOffset: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getRenewalTerms();
                });
            }, getRenewalVoteDetails(_franchisee: string, call = defaultCall): Promise<{
                renewalVoter: string;
                renewVote: boolean;
                voteTimestamp: number;
            }> {
                const data = encode(client).getRenewalVoteDetails(_franchisee);
                return call<{
                    renewalVoter: string;
                    renewVote: boolean;
                    voteTimestamp: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getRenewalVoteDetails();
                });
            }, getSignatureDetails(_party: string, call = defaultCall): Promise<[
                string,
                number
            ]> {
                const data = encode(client).getSignatureDetails(_party);
                return call<[
                    string,
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSignatureDetails();
                });
            }, getSignatureLogReference(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSignatureLogReference();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSignatureLogReference();
                });
            }, getSignatureTimestamp(_party: string, call = defaultCall): Promise<{
                signatureTimestamp: number;
            }> {
                const data = encode(client).getSignatureTimestamp(_party);
                return call<{
                    signatureTimestamp: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSignatureTimestamp();
                });
            }, getSignee(_party: string, call = defaultCall): Promise<{
                signee: string;
            }> {
                const data = encode(client).getSignee(_party);
                return call<{
                    signee: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSignee();
                });
            }, grantPermission(_permission: Buffer, _newHolder: string, call = defaultCall): Promise<void> {
                const data = encode(client).grantPermission(_permission, _newHolder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).grantPermission();
                });
            }, hasPermission(_permission: Buffer, _holder: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).hasPermission(_permission, _holder);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).hasPermission();
                });
            }, initialize(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[], call = defaultCall): Promise<void> {
                const data = encode(client).initialize[0](_archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initialize[0]();
                });
            }, initialize_1(_archetype: string, _creator: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[], call = defaultCall): Promise<void> {
                const data = encode(client).initialize[1](_archetype, _creator, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initialize[1]();
                });
            }, initializeObjectAdministrator(_admin: string, call = defaultCall): Promise<void> {
                const data = encode(client).initializeObjectAdministrator(_admin);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initializeObjectAdministrator();
                });
            }, isPrivate(call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).isPrivate();
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).isPrivate();
                });
            }, isRenewalWindowOpen(call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).isRenewalWindowOpen();
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).isRenewalWindowOpen();
                });
            }, isSignedBy(_signee: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).isSignedBy(_signee);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).isSignedBy();
                });
            }, openRenewalWindow(call = defaultCall): Promise<void> {
                const data = encode(client).openRenewalWindow();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).openRenewalWindow();
                });
            }, redact(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).redact();
                return call<[
                    number
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).redact();
                });
            }, removeData(_id: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).removeData(_id);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeData();
                });
            }, removeEventListener(_event: Buffer, _listener: string, call = defaultCall): Promise<void> {
                const data = encode(client).removeEventListener[0](_event, _listener);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeEventListener[0]();
                });
            }, removeEventListener_1(_event: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).removeEventListener[1](_event);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeEventListener[1]();
                });
            }, resetRenewalVotes(call = defaultCall): Promise<void> {
                const data = encode(client).resetRenewalVotes();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).resetRenewalVotes();
                });
            }, resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).resolveAddressScope(_address, _context, _dataStorage);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).resolveAddressScope();
                });
            }, revokePermission(_permission: Buffer, _holder: string, call = defaultCall): Promise<void> {
                const data = encode(client).revokePermission(_permission, _holder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).revokePermission();
                });
            }, setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, call = defaultCall): Promise<void> {
                const data = encode(client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setAddressScope();
                });
            }, setDataValueAsAddress(_id: Buffer, _value: string, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsAddress(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsAddress();
                });
            }, setDataValueAsAddressArray(_id: Buffer, _value: string[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsAddressArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsAddressArray();
                });
            }, setDataValueAsBool(_id: Buffer, _value: boolean, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBool(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBool();
                });
            }, setDataValueAsBoolArray(_id: Buffer, _value: boolean[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBoolArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBoolArray();
                });
            }, setDataValueAsBytes32(_id: Buffer, _value: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBytes32(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBytes32();
                });
            }, setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBytes32Array(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBytes32Array();
                });
            }, setDataValueAsInt(_id: Buffer, _value: number, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsInt(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsInt();
                });
            }, setDataValueAsIntArray(_id: Buffer, _value: number[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsIntArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsIntArray();
                });
            }, setDataValueAsString(_id: Buffer, _value: string, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsString(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsString();
                });
            }, setDataValueAsUint(_id: Buffer, _value: number, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsUint(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsUint();
                });
            }, setDataValueAsUintArray(_id: Buffer, _value: number[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsUintArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsUintArray();
                });
            }, setEventLogReference(_eventLogFileReference: string, call = defaultCall): Promise<void> {
                const data = encode(client).setEventLogReference(_eventLogFileReference);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setEventLogReference();
                });
            }, setFulfilled(call = defaultCall): Promise<void> {
                const data = encode(client).setFulfilled();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setFulfilled();
                });
            }, setLegalState(_legalState: number, call = defaultCall): Promise<void> {
                const data = encode(client).setLegalState(_legalState);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setLegalState();
                });
            }, setMaxNumberOfEvents(_maxNumberOfEvents: number, call = defaultCall): Promise<void> {
                const data = encode(client).setMaxNumberOfEvents(_maxNumberOfEvents);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setMaxNumberOfEvents();
                });
            }, setNextExpirationDate(_expirationDate: number, call = defaultCall): Promise<void> {
                const data = encode(client).setNextExpirationDate(_expirationDate);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setNextExpirationDate();
                });
            }, setPrivateParametersReference(_privateParametersFileReference: string, call = defaultCall): Promise<void> {
                const data = encode(client).setPrivateParametersReference(_privateParametersFileReference);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setPrivateParametersReference();
                });
            }, setSignatureLogReference(_signatureLogFileReference: string, call = defaultCall): Promise<void> {
                const data = encode(client).setSignatureLogReference(_signatureLogFileReference);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setSignatureLogReference();
                });
            }, sign(call = defaultCall): Promise<void> {
                const data = encode(client).sign();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).sign();
                });
            }, signAsParty(_party: string, call = defaultCall): Promise<void> {
                const data = encode(client).signAsParty(_party);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).signAsParty();
                });
            }, transferPermission(_permission: Buffer, _newHolder: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferPermission(_permission, _newHolder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferPermission();
                });
            } } as const, listeners: { LogActiveAgreementToPartyCancelationsUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                party: string;
                canceledBy: string;
                cancelationTimestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["B1F29906146CC7D490B7C500DB434C32BB685A3B4AB06C858A51EB601F134F3E"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogActiveAgreementToPartyCancelationsUpdate()); }, start, end); }, LogActiveAgreementToPartySignaturesUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                party: string;
                signedBy: string;
                signatureTimestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["426746C69DC5D87DB25FF2F3ADE2F69AC26E1C759CF6BE9A11BECEA41E605DDC"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogActiveAgreementToPartySignaturesUpdate()); }, start, end); }, LogAgreementCreation(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                archetypeAddress: string;
                creator: string;
                isPrivate: boolean;
                legalState: number;
                maxEventCount: number;
                privateParametersFileReference: string;
                eventLogFileReference: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["8495C61FFEEE8E374FB2B7169345C2E010B3ABA7EE783414F898879680764F92"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCreation()); }, start, end); }, LogAgreementCreation_v1_1_0(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                archetypeAddress: string;
                creator: string;
                owner: string;
                privateParametersFileReference: string;
                eventLogFileReference: string;
                isPrivate: boolean;
                legalState: number;
                maxEventCount: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["AF1209150C79D19135C2CBF62BA482AC99586079247AA53C0E25423693DA5D1E"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCreation_v1_1_0()); }, start, end); }, LogAgreementEventLogReference(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                eventLogFileReference: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["A59F1BDF986536320B730FB73D7D2707EB7B8312A743E1BDC144F0D785572683"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementEventLogReference()); }, start, end); }, LogAgreementLegalStateUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                legalState: number;
                legalStateUpdateTimestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["64B8A7CACD875B7F3D28B9453288CFCC38414B965783E5277C696C655FB4B294"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementLegalStateUpdate()); }, start, end); }, LogAgreementMaxEventCountUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                maxEventCount: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["9D21AB71E7E84FE89B2022FF8E6CC1EAD2CBE7BE8A637907EF2279D4B4D19BB4"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementMaxEventCountUpdate()); }, start, end); }, LogAgreementOwnerUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                owner: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["DC0276B26428605F2E3FB3BFC5BC8F81136E761A84BD0904CB792ECDFBED91C3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementOwnerUpdate()); }, start, end); }, LogAgreementPrivateParametersReference(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                privateParametersFileReference: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["C9690FEAD6289B57DC690E1C50CD5960BB3EC3D16C01DC445E9059D7C05A27C4"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementPrivateParametersReference()); }, start, end); }, LogAgreementRedaction(callback: (err?: Error, event?: {
                eventId: Buffer;
                __DELETE__: number;
                agreementAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["24B79A501D8660D52A906DDC5071C1494AF214A1443BA687072557C16EF96142"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRedaction()); }, start, end); }, LogAgreementRenewalExpirationDateUpdate(callback: (err?: Error, event?: {
                eventURN: Buffer;
                agreementAddress: string;
                expirationDate: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["065060DDCC74FDB42BD83D60625128B9ACEF117E3FE99B8A50CDFEB0D12B791C"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRenewalExpirationDateUpdate()); }, start, end); }, LogAgreementRenewalFranchiseeUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                franchisee: string;
                voter: string;
                renew: boolean;
                timestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["76C512528B3348A170FCE985B7603A2BA143BDF1E4645153B4D2952E99573E09"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRenewalFranchiseeUpdate()); }, start, end); }, LogAgreementRenewalResultUpdate(callback: (err?: Error, event?: {
                eventURN: Buffer;
                agreementAddress: string;
                renew: boolean;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["B943EFB3FC1DA02BB1E14EED2EE64F5394E1F6F800EE4EA04C80CEFE3A79BC75"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRenewalResultUpdate()); }, start, end); }, LogAgreementRenewalTermsDefined(callback: (err?: Error, event?: {
                eventURN: Buffer;
                agreementAddress: string;
                expirationDate: number;
                threshold: number;
                opensAtOffset: string;
                closesAtOffset: string;
                extensionOffset: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["A4607FDD9293C6F4B8B00C658E9537CB8C9962323EFB992B43517D29D462FFF7"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRenewalTermsDefined()); }, start, end); }, LogAgreementRenewalVoteCast(callback: (err?: Error, event?: {
                eventURN: Buffer;
                agreementAddress: string;
                franchisee: string;
                voter: string;
                renew: boolean;
                timestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["51B47958068FC9BEA1ACF9A821D66C2E1BD06EB6261035948B9185300CBCAC5B"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRenewalVoteCast()); }, start, end); }, LogAgreementRenewalWindowClosed(callback: (err?: Error, event?: {
                eventURN: Buffer;
                agreementAddress: string;
                renewalWindowOpen: boolean;
                closedAt: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["D999895EF4E74C2E812B1770FC1D6FB3B5CD235BA2ACB0429F95846E6CA99A6F"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRenewalWindowClosed()); }, start, end); }, LogAgreementRenewalWindowOpened(callback: (err?: Error, event?: {
                eventURN: Buffer;
                agreementAddress: string;
                renewalWindowOpen: boolean;
                openedAt: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["38AFD8082DEF1261A99C6531CD2D0F21A60D79BAEC07015B980D61457B752434"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementRenewalWindowOpened()); }, start, end); }, LogAgreementSignatureLogReference(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                signatureLogFileReference: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["4F5146E170CE6C18993979384E01F6A3BF0D482E0C024FF728F019E70A7A024A"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementSignatureLogReference()); }, start, end); }, LogDataStorageUpdateAddress(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                addressValue: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["5F3782AABDDED4C30D0E717EEFA344F09585650AF94F12A59E413C35C874AA6E"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateAddress()); }, start, end); }, LogDataStorageUpdateAddressArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                addressArrayValue: string[];
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["4FFF484425217F89CE50E27EB9F24A1260AF996F0D4A3726B57815DCA888C8EE"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateAddressArray()); }, start, end); }, LogDataStorageUpdateBool(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                boolValue: boolean;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["4000BE176D38D7C89B64CED66D386475DB613BF81DDC0F1E78D0FE91585CEE3F"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateBool()); }, start, end); }, LogDataStorageUpdateBoolArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                boolArrayValue: boolean[];
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["054258D5E91863B9C9D6664D6B19BA3C664F82481282BFD032F2C68053EF28A2"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateBoolArray()); }, start, end); }, LogDataStorageUpdateBytes32(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                bytes32Value: Buffer;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["175284BE8D23FFEAFF64148E54DDDF392131E21BDE39E27D34C23925799A9D3B"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateBytes32()); }, start, end); }, LogDataStorageUpdateBytes32Array(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                bytes32ArrayValue: Buffer[];
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["95C29751333E692A5607E8D9F8D042D14DE9AC9EF26EF50558D4A59F12B9B65F"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateBytes32Array()); }, start, end); }, LogDataStorageUpdateInt(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                intValue: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["4FAE6699EB0F881C4F8DF1E7D66305898984BD24CB684F775238368F1D77ACD3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateInt()); }, start, end); }, LogDataStorageUpdateIntArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                intArrayValue: number[];
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["D6E61696415CDECD64DE4AEB6B7C4C524171A049D6844883FD60066AE6E1FF23"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateIntArray()); }, start, end); }, LogDataStorageUpdateString(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                stringValue: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["DDC3E5BF46FC6E7FFE2506D0F0DCBA0625F68E6DB07BF879110EA3419E47BC29"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateString()); }, start, end); }, LogDataStorageUpdateUint(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                uintValue: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["07B481CBEAA4E99FD6638D014C6A9A7459F10E4FDF29E537F41D5FB037C30F35"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateUint()); }, start, end); }, LogDataStorageUpdateUintArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                uintArrayValue: number[];
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["A37058671AEDF6CC65626AB2E805CB856E17E10FC82582B6E878EE4AED1F0ECD"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDataStorageUpdateUintArray()); }, start, end); }, LogEntityAddressScopeUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                entityAddress: string;
                scopeAddress: string;
                scopeContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["757FFF527744F487D9C9EC5DF491336680EF60ECCF50F97A494EB216E66725B9"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogEntityAddressScopeUpdate()); }, start, end); }, LogGoverningAgreementUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                agreementAddress: string;
                governingAgreementAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["E7A1C84892A680B6FB7A2D501B58329E31A92D1AF2CD03E6B97C3E74DEC3DFFD"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogGoverningAgreementUpdate()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        DATA_FIELD_AGREEMENT_CANCELATION_DATE: () => { return codec.encodeFunctionData("CB1DC8CB"); },
        DATA_FIELD_AGREEMENT_CREATION_DATE: () => { return codec.encodeFunctionData("CA66F015"); },
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: () => { return codec.encodeFunctionData("1314CF66"); },
        DATA_FIELD_AGREEMENT_PARTIES: () => { return codec.encodeFunctionData("80C86BA7"); },
        EMPTY_SCOPE: () => { return codec.encodeFunctionData("F6EC229E"); },
        ERC165_ID_Address_Scopes: () => { return codec.encodeFunctionData("BD9E0660"); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        EVENT_CREATED: () => { return codec.encodeFunctionData("F0897DB7"); },
        EVENT_DELETED: () => { return codec.encodeFunctionData("6F78733B"); },
        EVENT_ID_AGREEMENTS: () => { return codec.encodeFunctionData("4828C43B"); },
        EVENT_ID_AGREEMENT_PARTY_MAP: () => { return codec.encodeFunctionData("6DBBC67B"); },
        EVENT_ID_DATA_STORAGE: () => { return codec.encodeFunctionData("D42EA976"); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return codec.encodeFunctionData("B7D64777"); },
        EVENT_ID_GOVERNING_AGREEMENT: () => { return codec.encodeFunctionData("FC344A73"); },
        EVENT_ID_STATE_CHANGED: () => { return codec.encodeFunctionData("11CE5844"); },
        EVENT_UPDATED: () => { return codec.encodeFunctionData("7207B07F"); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: () => { return codec.encodeFunctionData("F76829C9"); },
        ROLE_ID_OBJECT_ADMIN: () => { return codec.encodeFunctionData("E6F936F9"); },
        ROLE_ID_OWNER: () => { return codec.encodeFunctionData("9090FD85"); },
        addEventListener: [(_event: Buffer, _listener: string) => { return codec.encodeFunctionData("2A7CBFDE", _event, _listener); }, (_event: Buffer) => { return codec.encodeFunctionData("6EA1944B", _event); }] as const,
        cancel: () => { return codec.encodeFunctionData("EA8A1AF0"); },
        cancelAsParty: (_party: string) => { return codec.encodeFunctionData("B14E09BB", _party); },
        castRenewalVote: (_renew: boolean) => { return codec.encodeFunctionData("B20BA337", _renew); },
        closeRenewalWindow: () => { return codec.encodeFunctionData("C0647C2E"); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return codec.encodeFunctionData("94FEB152", _permission, _multiHolder, _revocable, _transferable); },
        defineRenewalTerms: (_franchisees: string[], _threshold: number, _opensAtOffset: string, _closesAtOffset: string, _extensionOffset: string) => { return codec.encodeFunctionData("B00B6428", _franchisees, _threshold, _opensAtOffset, _closesAtOffset, _extensionOffset); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return codec.encodeFunctionData("9561AA32", _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return codec.encodeFunctionData("FE3C84B2", _key); },
        getAddressScopeKeys: () => { return codec.encodeFunctionData("70A9C997"); },
        getArchetype: () => { return codec.encodeFunctionData("FB1A1493"); },
        getArrayLength: (_id: Buffer) => { return codec.encodeFunctionData("AA0AC16F", _id); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getCreator: () => { return codec.encodeFunctionData("0EE2CB10"); },
        getDataIdAtIndex: (_index: number) => { return codec.encodeFunctionData("374B7D22", _index); },
        getDataType: (_id: Buffer) => { return codec.encodeFunctionData("31502F13", _id); },
        getDataValueAsAddress: (_id: Buffer) => { return codec.encodeFunctionData("F364E379", _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return codec.encodeFunctionData("EEB8B809", _id); },
        getDataValueAsBool: (_id: Buffer) => { return codec.encodeFunctionData("30C676C9", _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return codec.encodeFunctionData("D734C53A", _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return codec.encodeFunctionData("2512E6F1", _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return codec.encodeFunctionData("FCB4862A", _id); },
        getDataValueAsInt: (_id: Buffer) => { return codec.encodeFunctionData("E2BE8FE1", _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return codec.encodeFunctionData("F0A40527", _id); },
        getDataValueAsString: (_id: Buffer) => { return codec.encodeFunctionData("D2E8A0FA", _id); },
        getDataValueAsUint: (_id: Buffer) => { return codec.encodeFunctionData("35CE1BD1", _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return codec.encodeFunctionData("31185182", _id); },
        getEventLogReference: () => { return codec.encodeFunctionData("F9F3F283"); },
        getGoverningAgreementAtIndex: (_index: number) => { return codec.encodeFunctionData("C4521FFB", _index); },
        getHolder: (_permission: Buffer, _index: number) => { return codec.encodeFunctionData("141B422A", _permission, _index); },
        getLegalState: () => { return codec.encodeFunctionData("59D585EE"); },
        getMaxNumberOfEvents: () => { return codec.encodeFunctionData("5ABF3202"); },
        getNumberOfData: () => { return codec.encodeFunctionData("5666F9AC"); },
        getNumberOfGoverningAgreements: () => { return codec.encodeFunctionData("0D9BFA80"); },
        getNumberOfParties: () => { return codec.encodeFunctionData("7F809381"); },
        getNumberOfRenewalFranchisees: () => { return codec.encodeFunctionData("D779C8A1"); },
        getOwner: () => { return codec.encodeFunctionData("893D20E8"); },
        getPartyAtIndex: (_index: number) => { return codec.encodeFunctionData("79CE3CB2", _index); },
        getPermissionDetails: (_permission: Buffer) => { return codec.encodeFunctionData("63A84C04", _permission); },
        getPrivateParametersReference: () => { return codec.encodeFunctionData("9F75DFD9"); },
        getRenewalFranchiseeAtIndex: (_index: number) => { return codec.encodeFunctionData("6A78A815", _index); },
        getRenewalState: () => { return codec.encodeFunctionData("04FCE015"); },
        getRenewalTerms: () => { return codec.encodeFunctionData("40514A1A"); },
        getRenewalVoteDetails: (_franchisee: string) => { return codec.encodeFunctionData("84A6CD4D", _franchisee); },
        getSignatureDetails: (_party: string) => { return codec.encodeFunctionData("F4B9D96E", _party); },
        getSignatureLogReference: () => { return codec.encodeFunctionData("0CB61B34"); },
        getSignatureTimestamp: (_party: string) => { return codec.encodeFunctionData("D39C4FAA", _party); },
        getSignee: (_party: string) => { return codec.encodeFunctionData("51E213FC", _party); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return codec.encodeFunctionData("BC586456", _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return codec.encodeFunctionData("28545C0D", _permission, _holder); },
        initialize: [(_archetype: string, _creator: string, _owner: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => { return codec.encodeFunctionData("BE60FC0C", _archetype, _creator, _owner, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements); }, (_archetype: string, _creator: string, _privateParametersFileReference: string, _isPrivate: boolean, _parties: string[], _governingAgreements: string[]) => { return codec.encodeFunctionData("E703A9E4", _archetype, _creator, _privateParametersFileReference, _isPrivate, _parties, _governingAgreements); }] as const,
        initializeObjectAdministrator: (_admin: string) => { return codec.encodeFunctionData("859360F5", _admin); },
        isPrivate: () => { return codec.encodeFunctionData("FAFF660E"); },
        isRenewalWindowOpen: () => { return codec.encodeFunctionData("8AAEFF8C"); },
        isSignedBy: (_signee: string) => { return codec.encodeFunctionData("7F91FB7D", _signee); },
        openRenewalWindow: () => { return codec.encodeFunctionData("8C2A4DAE"); },
        redact: () => { return codec.encodeFunctionData("91BEC712"); },
        removeData: (_id: Buffer) => { return codec.encodeFunctionData("47DD48E0", _id); },
        removeEventListener: [(_event: Buffer, _listener: string) => { return codec.encodeFunctionData("0775CB00", _event, _listener); }, (_event: Buffer) => { return codec.encodeFunctionData("586CA7AB", _event); }] as const,
        resetRenewalVotes: () => { return codec.encodeFunctionData("72EA1826"); },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return codec.encodeFunctionData("3C0E5245", _address, _context, _dataStorage); },
        revokePermission: (_permission: Buffer, _holder: string) => { return codec.encodeFunctionData("A6A8F17B", _permission, _holder); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return codec.encodeFunctionData("6D73C8BC", _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return codec.encodeFunctionData("68E78011", _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return codec.encodeFunctionData("641375AD", _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return codec.encodeFunctionData("1CB35540", _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return codec.encodeFunctionData("F5081E9F", _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return codec.encodeFunctionData("8AA137F5", _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return codec.encodeFunctionData("EDEC4C4F", _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return codec.encodeFunctionData("720E72E9", _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return codec.encodeFunctionData("6D6A7E8F", _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return codec.encodeFunctionData("1C5422D2", _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return codec.encodeFunctionData("F3420D1A", _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return codec.encodeFunctionData("94E38624", _id, _value); },
        setEventLogReference: (_eventLogFileReference: string) => { return codec.encodeFunctionData("4F7E37BB", _eventLogFileReference); },
        setFulfilled: () => { return codec.encodeFunctionData("C3F0A895"); },
        setLegalState: (_legalState: number) => { return codec.encodeFunctionData("58892B86", _legalState); },
        setMaxNumberOfEvents: (_maxNumberOfEvents: number) => { return codec.encodeFunctionData("130C5985", _maxNumberOfEvents); },
        setNextExpirationDate: (_expirationDate: number) => { return codec.encodeFunctionData("C6E8DFD0", _expirationDate); },
        setPrivateParametersReference: (_privateParametersFileReference: string) => { return codec.encodeFunctionData("4773F6FC", _privateParametersFileReference); },
        setSignatureLogReference: (_signatureLogFileReference: string) => { return codec.encodeFunctionData("F8D660D3", _signatureLogFileReference); },
        sign: () => { return codec.encodeFunctionData("2CA15122"); },
        signAsParty: (_party: string) => { return codec.encodeFunctionData("9AAEE210", _party); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return codec.encodeFunctionData("EC9CB2CE", _permission, _newHolder); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogActiveAgreementToPartyCancelationsUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            party: string;
            canceledBy: string;
            cancelationTimestamp: number;
        } => {
            const [eventId, agreementAddress, party, canceledBy, cancelationTimestamp] = codec.decodeEventLog ("B1F29906146CC7D490B7C500DB434C32BB685A3B4AB06C858A51EB601F134F3E", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, party: party, canceledBy: canceledBy, cancelationTimestamp: cancelationTimestamp };
        },
        LogActiveAgreementToPartySignaturesUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            party: string;
            signedBy: string;
            signatureTimestamp: number;
        } => {
            const [eventId, agreementAddress, party, signedBy, signatureTimestamp] = codec.decodeEventLog ("426746C69DC5D87DB25FF2F3ADE2F69AC26E1C759CF6BE9A11BECEA41E605DDC", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, party: party, signedBy: signedBy, signatureTimestamp: signatureTimestamp };
        },
        LogAgreementCreation: (): {
            eventId: Buffer;
            agreementAddress: string;
            archetypeAddress: string;
            creator: string;
            isPrivate: boolean;
            legalState: number;
            maxEventCount: number;
            privateParametersFileReference: string;
            eventLogFileReference: string;
        } => {
            const [eventId, agreementAddress, archetypeAddress, creator, isPrivate, legalState, maxEventCount, privateParametersFileReference, eventLogFileReference] = codec.decodeEventLog ("8495C61FFEEE8E374FB2B7169345C2E010B3ABA7EE783414F898879680764F92", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, archetypeAddress: archetypeAddress, creator: creator, isPrivate: isPrivate, legalState: legalState, maxEventCount: maxEventCount, privateParametersFileReference: privateParametersFileReference, eventLogFileReference: eventLogFileReference };
        },
        LogAgreementCreation_v1_1_0: (): {
            eventId: Buffer;
            agreementAddress: string;
            archetypeAddress: string;
            creator: string;
            owner: string;
            privateParametersFileReference: string;
            eventLogFileReference: string;
            isPrivate: boolean;
            legalState: number;
            maxEventCount: number;
        } => {
            const [eventId, agreementAddress, archetypeAddress, creator, owner, privateParametersFileReference, eventLogFileReference, isPrivate, legalState, maxEventCount] = codec.decodeEventLog ("AF1209150C79D19135C2CBF62BA482AC99586079247AA53C0E25423693DA5D1E", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, archetypeAddress: archetypeAddress, creator: creator, owner: owner, privateParametersFileReference: privateParametersFileReference, eventLogFileReference: eventLogFileReference, isPrivate: isPrivate, legalState: legalState, maxEventCount: maxEventCount };
        },
        LogAgreementEventLogReference: (): {
            eventId: Buffer;
            agreementAddress: string;
            eventLogFileReference: string;
        } => {
            const [eventId, agreementAddress, eventLogFileReference] = codec.decodeEventLog ("A59F1BDF986536320B730FB73D7D2707EB7B8312A743E1BDC144F0D785572683", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, eventLogFileReference: eventLogFileReference };
        },
        LogAgreementLegalStateUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            legalState: number;
            legalStateUpdateTimestamp: number;
        } => {
            const [eventId, agreementAddress, legalState, legalStateUpdateTimestamp] = codec.decodeEventLog ("64B8A7CACD875B7F3D28B9453288CFCC38414B965783E5277C696C655FB4B294", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, legalState: legalState, legalStateUpdateTimestamp: legalStateUpdateTimestamp };
        },
        LogAgreementMaxEventCountUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            maxEventCount: number;
        } => {
            const [eventId, agreementAddress, maxEventCount] = codec.decodeEventLog ("9D21AB71E7E84FE89B2022FF8E6CC1EAD2CBE7BE8A637907EF2279D4B4D19BB4", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, maxEventCount: maxEventCount };
        },
        LogAgreementOwnerUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            owner: string;
        } => {
            const [eventId, agreementAddress, owner] = codec.decodeEventLog ("DC0276B26428605F2E3FB3BFC5BC8F81136E761A84BD0904CB792ECDFBED91C3", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, owner: owner };
        },
        LogAgreementPrivateParametersReference: (): {
            eventId: Buffer;
            agreementAddress: string;
            privateParametersFileReference: string;
        } => {
            const [eventId, agreementAddress, privateParametersFileReference] = codec.decodeEventLog ("C9690FEAD6289B57DC690E1C50CD5960BB3EC3D16C01DC445E9059D7C05A27C4", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, privateParametersFileReference: privateParametersFileReference };
        },
        LogAgreementRedaction: (): {
            eventId: Buffer;
            __DELETE__: number;
            agreementAddress: string;
        } => {
            const [eventId, __DELETE__, agreementAddress] = codec.decodeEventLog ("24B79A501D8660D52A906DDC5071C1494AF214A1443BA687072557C16EF96142", data, topics);
            return { eventId: eventId, __DELETE__: __DELETE__, agreementAddress: agreementAddress };
        },
        LogAgreementRenewalExpirationDateUpdate: (): {
            eventURN: Buffer;
            agreementAddress: string;
            expirationDate: number;
        } => {
            const [eventURN, agreementAddress, expirationDate] = codec.decodeEventLog ("065060DDCC74FDB42BD83D60625128B9ACEF117E3FE99B8A50CDFEB0D12B791C", data, topics);
            return { eventURN: eventURN, agreementAddress: agreementAddress, expirationDate: expirationDate };
        },
        LogAgreementRenewalFranchiseeUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            franchisee: string;
            voter: string;
            renew: boolean;
            timestamp: number;
        } => {
            const [eventId, agreementAddress, franchisee, voter, renew, timestamp] = codec.decodeEventLog ("76C512528B3348A170FCE985B7603A2BA143BDF1E4645153B4D2952E99573E09", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, franchisee: franchisee, voter: voter, renew: renew, timestamp: timestamp };
        },
        LogAgreementRenewalResultUpdate: (): {
            eventURN: Buffer;
            agreementAddress: string;
            renew: boolean;
        } => {
            const [eventURN, agreementAddress, renew] = codec.decodeEventLog ("B943EFB3FC1DA02BB1E14EED2EE64F5394E1F6F800EE4EA04C80CEFE3A79BC75", data, topics);
            return { eventURN: eventURN, agreementAddress: agreementAddress, renew: renew };
        },
        LogAgreementRenewalTermsDefined: (): {
            eventURN: Buffer;
            agreementAddress: string;
            expirationDate: number;
            threshold: number;
            opensAtOffset: string;
            closesAtOffset: string;
            extensionOffset: string;
        } => {
            const [eventURN, agreementAddress, expirationDate, threshold, opensAtOffset, closesAtOffset, extensionOffset] = codec.decodeEventLog ("A4607FDD9293C6F4B8B00C658E9537CB8C9962323EFB992B43517D29D462FFF7", data, topics);
            return { eventURN: eventURN, agreementAddress: agreementAddress, expirationDate: expirationDate, threshold: threshold, opensAtOffset: opensAtOffset, closesAtOffset: closesAtOffset, extensionOffset: extensionOffset };
        },
        LogAgreementRenewalVoteCast: (): {
            eventURN: Buffer;
            agreementAddress: string;
            franchisee: string;
            voter: string;
            renew: boolean;
            timestamp: number;
        } => {
            const [eventURN, agreementAddress, franchisee, voter, renew, timestamp] = codec.decodeEventLog ("51B47958068FC9BEA1ACF9A821D66C2E1BD06EB6261035948B9185300CBCAC5B", data, topics);
            return { eventURN: eventURN, agreementAddress: agreementAddress, franchisee: franchisee, voter: voter, renew: renew, timestamp: timestamp };
        },
        LogAgreementRenewalWindowClosed: (): {
            eventURN: Buffer;
            agreementAddress: string;
            renewalWindowOpen: boolean;
            closedAt: number;
        } => {
            const [eventURN, agreementAddress, renewalWindowOpen, closedAt] = codec.decodeEventLog ("D999895EF4E74C2E812B1770FC1D6FB3B5CD235BA2ACB0429F95846E6CA99A6F", data, topics);
            return { eventURN: eventURN, agreementAddress: agreementAddress, renewalWindowOpen: renewalWindowOpen, closedAt: closedAt };
        },
        LogAgreementRenewalWindowOpened: (): {
            eventURN: Buffer;
            agreementAddress: string;
            renewalWindowOpen: boolean;
            openedAt: number;
        } => {
            const [eventURN, agreementAddress, renewalWindowOpen, openedAt] = codec.decodeEventLog ("38AFD8082DEF1261A99C6531CD2D0F21A60D79BAEC07015B980D61457B752434", data, topics);
            return { eventURN: eventURN, agreementAddress: agreementAddress, renewalWindowOpen: renewalWindowOpen, openedAt: openedAt };
        },
        LogAgreementSignatureLogReference: (): {
            eventId: Buffer;
            agreementAddress: string;
            signatureLogFileReference: string;
        } => {
            const [eventId, agreementAddress, signatureLogFileReference] = codec.decodeEventLog ("4F5146E170CE6C18993979384E01F6A3BF0D482E0C024FF728F019E70A7A024A", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, signatureLogFileReference: signatureLogFileReference };
        },
        LogDataStorageUpdateAddress: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            addressValue: string;
        } => {
            const [eventId, storageAddress, dataId, addressValue] = codec.decodeEventLog ("5F3782AABDDED4C30D0E717EEFA344F09585650AF94F12A59E413C35C874AA6E", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressValue: addressValue };
        },
        LogDataStorageUpdateAddressArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            addressArrayValue: string[];
        } => {
            const [eventId, storageAddress, dataId, addressArrayValue] = codec.decodeEventLog ("4FFF484425217F89CE50E27EB9F24A1260AF996F0D4A3726B57815DCA888C8EE", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressArrayValue: addressArrayValue };
        },
        LogDataStorageUpdateBool: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            boolValue: boolean;
        } => {
            const [eventId, storageAddress, dataId, boolValue] = codec.decodeEventLog ("4000BE176D38D7C89B64CED66D386475DB613BF81DDC0F1E78D0FE91585CEE3F", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolValue: boolValue };
        },
        LogDataStorageUpdateBoolArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            boolArrayValue: boolean[];
        } => {
            const [eventId, storageAddress, dataId, boolArrayValue] = codec.decodeEventLog ("054258D5E91863B9C9D6664D6B19BA3C664F82481282BFD032F2C68053EF28A2", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolArrayValue: boolArrayValue };
        },
        LogDataStorageUpdateBytes32: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            bytes32Value: Buffer;
        } => {
            const [eventId, storageAddress, dataId, bytes32Value] = codec.decodeEventLog ("175284BE8D23FFEAFF64148E54DDDF392131E21BDE39E27D34C23925799A9D3B", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32Value: bytes32Value };
        },
        LogDataStorageUpdateBytes32Array: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            bytes32ArrayValue: Buffer[];
        } => {
            const [eventId, storageAddress, dataId, bytes32ArrayValue] = codec.decodeEventLog ("95C29751333E692A5607E8D9F8D042D14DE9AC9EF26EF50558D4A59F12B9B65F", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32ArrayValue: bytes32ArrayValue };
        },
        LogDataStorageUpdateInt: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            intValue: number;
        } => {
            const [eventId, storageAddress, dataId, intValue] = codec.decodeEventLog ("4FAE6699EB0F881C4F8DF1E7D66305898984BD24CB684F775238368F1D77ACD3", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intValue: intValue };
        },
        LogDataStorageUpdateIntArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            intArrayValue: number[];
        } => {
            const [eventId, storageAddress, dataId, intArrayValue] = codec.decodeEventLog ("D6E61696415CDECD64DE4AEB6B7C4C524171A049D6844883FD60066AE6E1FF23", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intArrayValue: intArrayValue };
        },
        LogDataStorageUpdateString: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            stringValue: string;
        } => {
            const [eventId, storageAddress, dataId, stringValue] = codec.decodeEventLog ("DDC3E5BF46FC6E7FFE2506D0F0DCBA0625F68E6DB07BF879110EA3419E47BC29", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, stringValue: stringValue };
        },
        LogDataStorageUpdateUint: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            uintValue: number;
        } => {
            const [eventId, storageAddress, dataId, uintValue] = codec.decodeEventLog ("07B481CBEAA4E99FD6638D014C6A9A7459F10E4FDF29E537F41D5FB037C30F35", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintValue: uintValue };
        },
        LogDataStorageUpdateUintArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            uintArrayValue: number[];
        } => {
            const [eventId, storageAddress, dataId, uintArrayValue] = codec.decodeEventLog ("A37058671AEDF6CC65626AB2E805CB856E17E10FC82582B6E878EE4AED1F0ECD", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintArrayValue: uintArrayValue };
        },
        LogEntityAddressScopeUpdate: (): {
            eventId: Buffer;
            entityAddress: string;
            scopeAddress: string;
            scopeContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [eventId, entityAddress, scopeAddress, scopeContext, fixedScope, dataPath, dataStorageId, dataStorage] = codec.decodeEventLog ("757FFF527744F487D9C9EC5DF491336680EF60ECCF50F97A494EB216E66725B9", data, topics);
            return { eventId: eventId, entityAddress: entityAddress, scopeAddress: scopeAddress, scopeContext: scopeContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        LogGoverningAgreementUpdate: (): {
            eventId: Buffer;
            agreementAddress: string;
            governingAgreementAddress: string;
        } => {
            const [eventId, agreementAddress, governingAgreementAddress] = codec.decodeEventLog ("E7A1C84892A680B6FB7A2D501B58329E31A92D1AF2CD03E6B97C3E74DEC3DFFD", data, topics);
            return { eventId: eventId, agreementAddress: agreementAddress, governingAgreementAddress: governingAgreementAddress };
        },
        DATA_FIELD_AGREEMENT_CANCELATION_DATE: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("CB1DC8CB", data); },
        DATA_FIELD_AGREEMENT_CREATION_DATE: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("CA66F015", data); },
        DATA_FIELD_AGREEMENT_EFFECTIVE_DATE: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("1314CF66", data); },
        DATA_FIELD_AGREEMENT_PARTIES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("80C86BA7", data); },
        EMPTY_SCOPE: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("F6EC229E", data); },
        ERC165_ID_Address_Scopes: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("BD9E0660", data); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        EVENT_CREATED: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("F0897DB7", data); },
        EVENT_DELETED: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("6F78733B", data); },
        EVENT_ID_AGREEMENTS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("4828C43B", data); },
        EVENT_ID_AGREEMENT_PARTY_MAP: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("6DBBC67B", data); },
        EVENT_ID_DATA_STORAGE: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("D42EA976", data); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("B7D64777", data); },
        EVENT_ID_GOVERNING_AGREEMENT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("FC344A73", data); },
        EVENT_ID_STATE_CHANGED: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("11CE5844", data); },
        EVENT_UPDATED: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("7207B07F", data); },
        ROLE_ID_LEGAL_STATE_CONTROLLER: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("F76829C9", data); },
        ROLE_ID_OBJECT_ADMIN: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E6F936F9", data); },
        ROLE_ID_OWNER: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("9090FD85", data); },
        addEventListener: [(): void => { return; }, (): void => { return; }] as const,
        cancel: (): void => { return; },
        cancelAsParty: (): void => { return; },
        castRenewalVote: (): void => { return; },
        closeRenewalWindow: (): void => { return; },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        createPermission: (): void => { return; },
        defineRenewalTerms: (): void => { return; },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = codec.decodeFunctionResult ("9561AA32", data);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = codec.decodeFunctionResult ("FE3C84B2", data);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [
            Buffer[]
        ] => { return codec.decodeFunctionResult ("70A9C997", data); },
        getArchetype: (): [
            string
        ] => { return codec.decodeFunctionResult ("FB1A1493", data); },
        getArrayLength: (): [
            number
        ] => { return codec.decodeFunctionResult ("AA0AC16F", data); },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getCreator: (): [
            string
        ] => { return codec.decodeFunctionResult ("0EE2CB10", data); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = codec.decodeFunctionResult ("374B7D22", data);
            return { error: error, id: id };
        },
        getDataType: (): [
            number
        ] => { return codec.decodeFunctionResult ("31502F13", data); },
        getDataValueAsAddress: (): [
            string
        ] => { return codec.decodeFunctionResult ("F364E379", data); },
        getDataValueAsAddressArray: (): [
            string[]
        ] => { return codec.decodeFunctionResult ("EEB8B809", data); },
        getDataValueAsBool: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("30C676C9", data); },
        getDataValueAsBoolArray: (): [
            boolean[]
        ] => { return codec.decodeFunctionResult ("D734C53A", data); },
        getDataValueAsBytes32: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("2512E6F1", data); },
        getDataValueAsBytes32Array: (): [
            Buffer[]
        ] => { return codec.decodeFunctionResult ("FCB4862A", data); },
        getDataValueAsInt: (): [
            number
        ] => { return codec.decodeFunctionResult ("E2BE8FE1", data); },
        getDataValueAsIntArray: (): [
            number[]
        ] => { return codec.decodeFunctionResult ("F0A40527", data); },
        getDataValueAsString: (): [
            string
        ] => { return codec.decodeFunctionResult ("D2E8A0FA", data); },
        getDataValueAsUint: (): [
            number
        ] => { return codec.decodeFunctionResult ("35CE1BD1", data); },
        getDataValueAsUintArray: (): [
            number[]
        ] => { return codec.decodeFunctionResult ("31185182", data); },
        getEventLogReference: (): [
            string
        ] => { return codec.decodeFunctionResult ("F9F3F283", data); },
        getGoverningAgreementAtIndex: (): {
            agreementAddress: string;
        } => {
            const [agreementAddress] = codec.decodeFunctionResult ("C4521FFB", data);
            return { agreementAddress: agreementAddress };
        },
        getHolder: (): [
            string
        ] => { return codec.decodeFunctionResult ("141B422A", data); },
        getLegalState: (): [
            number
        ] => { return codec.decodeFunctionResult ("59D585EE", data); },
        getMaxNumberOfEvents: (): [
            number
        ] => { return codec.decodeFunctionResult ("5ABF3202", data); },
        getNumberOfData: (): [
            number
        ] => { return codec.decodeFunctionResult ("5666F9AC", data); },
        getNumberOfGoverningAgreements: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("0D9BFA80", data);
            return { size: size };
        },
        getNumberOfParties: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("7F809381", data);
            return { size: size };
        },
        getNumberOfRenewalFranchisees: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("D779C8A1", data);
            return { size: size };
        },
        getOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("893D20E8", data); },
        getPartyAtIndex: (): {
            party: string;
        } => {
            const [party] = codec.decodeFunctionResult ("79CE3CB2", data);
            return { party: party };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = codec.decodeFunctionResult ("63A84C04", data);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrivateParametersReference: (): [
            string
        ] => { return codec.decodeFunctionResult ("9F75DFD9", data); },
        getRenewalFranchiseeAtIndex: (): {
            franchisee: string;
        } => {
            const [franchisee] = codec.decodeFunctionResult ("6A78A815", data);
            return { franchisee: franchisee };
        },
        getRenewalState: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("04FCE015", data); },
        getRenewalTerms: (): {
            renewalThreshold: number;
            agreementExpirationDate: number;
            renewalOpensAtOffset: string;
            renewalClosesAtOffset: string;
            renewalExtensionOffset: string;
        } => {
            const [renewalThreshold, agreementExpirationDate, renewalOpensAtOffset, renewalClosesAtOffset, renewalExtensionOffset] = codec.decodeFunctionResult ("40514A1A", data);
            return { renewalThreshold: renewalThreshold, agreementExpirationDate: agreementExpirationDate, renewalOpensAtOffset: renewalOpensAtOffset, renewalClosesAtOffset: renewalClosesAtOffset, renewalExtensionOffset: renewalExtensionOffset };
        },
        getRenewalVoteDetails: (): {
            renewalVoter: string;
            renewVote: boolean;
            voteTimestamp: number;
        } => {
            const [renewalVoter, renewVote, voteTimestamp] = codec.decodeFunctionResult ("84A6CD4D", data);
            return { renewalVoter: renewalVoter, renewVote: renewVote, voteTimestamp: voteTimestamp };
        },
        getSignatureDetails: (): [
            string,
            number
        ] => { return codec.decodeFunctionResult ("F4B9D96E", data); },
        getSignatureLogReference: (): [
            string
        ] => { return codec.decodeFunctionResult ("0CB61B34", data); },
        getSignatureTimestamp: (): {
            signatureTimestamp: number;
        } => {
            const [signatureTimestamp] = codec.decodeFunctionResult ("D39C4FAA", data);
            return { signatureTimestamp: signatureTimestamp };
        },
        getSignee: (): {
            signee: string;
        } => {
            const [signee] = codec.decodeFunctionResult ("51E213FC", data);
            return { signee: signee };
        },
        grantPermission: (): void => { return; },
        hasPermission: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("28545C0D", data); },
        initialize: [(): void => { return; }, (): void => { return; }] as const,
        initializeObjectAdministrator: (): void => { return; },
        isPrivate: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("FAFF660E", data); },
        isRenewalWindowOpen: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("8AAEFF8C", data); },
        isSignedBy: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("7F91FB7D", data); },
        openRenewalWindow: (): void => { return; },
        redact: (): [
            number
        ] => { return codec.decodeFunctionResult ("91BEC712", data); },
        removeData: (): void => { return; },
        removeEventListener: [(): void => { return; }, (): void => { return; }] as const,
        resetRenewalVotes: (): void => { return; },
        resolveAddressScope: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("3C0E5245", data); },
        revokePermission: (): void => { return; },
        setAddressScope: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setEventLogReference: (): void => { return; },
        setFulfilled: (): void => { return; },
        setLegalState: (): void => { return; },
        setMaxNumberOfEvents: (): void => { return; },
        setNextExpirationDate: (): void => { return; },
        setPrivateParametersReference: (): void => { return; },
        setSignatureLogReference: (): void => { return; },
        sign: (): void => { return; },
        signAsParty: (): void => { return; },
        transferPermission: (): void => { return; }
    }; };
}