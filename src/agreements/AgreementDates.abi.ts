//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module AgreementDates {
    export function Deploy<Tx>(client: Provider<Tx>, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_utils_Strings_sol_Strings: string): Promise<string> {
        let bytecode = "6080604052600160008060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260016000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff16021790555081600180600381106200009957fe5b602091828204019190066101000a81548160ff021916908360ff160217905550806001600260038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120620001e160201b60201c565b50505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001db60405160200180807f7570677261646528616464726573732900000000000000000000000000000000815250601001905060405160208183030381529060405280519060200120620001e160201b60201c565b620002ce565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000262576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806200467d602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61439f80620002de6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806378bc0b0d116100ad578063b21c815f11610071578063b21c815f146106fa578063b679f75014610756578063e10533c6146107a4578063e728487914610800578063f085f6dd1461084a5761012c565b806378bc0b0d146104e05780637d903e9a1461055957806396479c2f146105bb578063a6d1fe7a14610668578063ac83ec7c146106b65761012c565b806357e0ebca116100f457806357e0ebca146103575780635c0301381461037b5780636aff33a9146103d3578063756b2e6c146104765780637589adb7146104bc5761012c565b806301ffc9a7146101315780630900f0101461019657806335657e68146101f25780634ddaf8f21461024e578063535cf3dd146102aa575b600080fd5b61017c6004803603602081101561014757600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061086e565b604051808215151515815260200191505060405180910390f35b6101d8600480360360208110156101ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d5565b604051808215151515815260200191505060405180910390f35b6102346004803603602081101561020857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6a565b604051808215151515815260200191505060405180910390f35b6102906004803603602081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d75565b604051808215151515815260200191505060405180910390f35b610355600480360360808110156102c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561031157600080fd5b82018360208201111561032357600080fd5b8035906020019184600183028401116401000000008311171561034557600080fd5b9091929391929390505050610d80565b005b61035f61180f565b604051808260ff1660ff16815260200191505060405180910390f35b6103bd6004803603602081101561039157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061183a565b6040518082815260200191505060405180910390f35b610474600480360360608110156103e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561043057600080fd5b82018360208201111561044257600080fd5b8035906020019184600183028401116401000000008311171561046457600080fd5b9091929391929390505050611936565b005b61047e611e34565b6040518082600360200280838360005b838110156104a957808201518184015260208101905061048e565b5050505090500191505060405180910390f35b6104c4611ea5565b604051808260ff1660ff16815260200191505060405180910390f35b610543600480360360608110156104f657600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611ecf565b6040518082815260200191505060405180910390f35b6105a56004803603604081101561056f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f45565b6040518082815260200191505060405180910390f35b610666600480360360808110156105d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561061857600080fd5b82018360208201111561062a57600080fd5b8035906020019184600183028401116401000000008311171561064c57600080fd5b90919293919293908035906020019092919050505061247c565b005b6106b46004803603604081101561067e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612957565b005b6106f8600480360360208110156106cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612dec565b005b6107026131ed565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6107a26004803603604081101561076c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613237565b005b6107ac6136bc565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610808613706565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610852613730565b604051808260ff1660ff16815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561094b61375b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156109ac578082015181840152602081019050610991565b50505050905090810190601f1680156109d95780820380516001836020036101000a031916815260200191505b508481038352602381526020018061432660239139604001848103825260278152602001806142b0602791396040019550505050505060006040518083038186803b158015610a2757600080fd5b505af4158015610a3b573d6000803e3d6000fd5b505050508173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6001610a658461183a565b12610a6e613798565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610acf578082015181840152602081019050610ab4565b50505050905090810190601f168015610afc5780820380516001836020036101000a031916815260200191505b50848103835260298152602001806142d7602991396040018481038252604b815260200180614200604b91396060019550505050505060006040518083038186803b158015610b4a57600080fd5b505af4158015610b5e573d6000803e3d6000fd5b50505050610b6b83610d75565b8015610c2d57508273ffffffffffffffffffffffffffffffffffffffff166335657e68306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610bf157600080fd5b505af1158015610c05573d6000803e3d6000fd5b505050506040513d6020811015610c1b57600080fd5b81019080805190602001909291905050505b915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8315610c536137d5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610cb4578082015181840152602081019050610c99565b50505050905090810190601f168015610ce15780820380516001836020036101000a031916815260200191505b508481038352601b8152602001807f41627374726163745570677261646561626c652e75706772616465000000000081525060200184810382526040815260200180614270604091396040019550505050505060006040518083038186803b158015610d4c57600080fd5b505af4158015610d60573d6000803e3d6000fd5b5050505050919050565b600060019050919050565b600060019050919050565b84600073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015610dfd57600080fd5b505af4158015610e11573d6000803e3d6000fd5b505050506040513d6040811015610e2757600080fd5b8101908080519060200190929190805190602001909291905050505080915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110ca57611029604051806060016040528060228152602001614349602291398373ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b158015610f2b57600080fd5b505af4158015610f3f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610f6957600080fd5b8101908080516040519392919084640100000000821115610f8957600080fd5b83820191506020820185811115610f9f57600080fd5b8251866001820283011164010000000082111715610fbc57600080fd5b8083526020830192505050908051906020019080838360005b83811015610ff0578082015181840152602081019050610fd5565b50505050905090810190601f16801561101d5780820380516001836020036101000a031916815260200191505b50604052505050613812565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561108f578082015181840152602081019050611074565b50505050905090810190601f1680156110bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b8686866110d88383836138da565b15611655576115b48273__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561113157600080fd5b505af4158015611145573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561116f57600080fd5b810190808051604051939291908464010000000082111561118f57600080fd5b838201915060208201858111156111a557600080fd5b82518660018202830111640100000000821117156111c257600080fd5b8083526020830192505050908051906020019080838360005b838110156111f65780820151818401526020810190506111db565b50505050905090810190601f1680156112235780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600e81526020017f206f6e2061677265656d656e74200000000000000000000000000000000000008152508573ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__630b39ed4790916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b1580156112f357600080fd5b505af4158015611307573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561133157600080fd5b810190808051604051939291908464010000000082111561135157600080fd5b8382019150602082018581111561136757600080fd5b825186600182028301116401000000008211171561138457600080fd5b8083526020830192505050908051906020019080838360005b838110156113b857808201518184015260208101905061139d565b50505050905090810190601f1680156113e55780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601081526020017f697320646572697665642066726f6d20000000000000000000000000000000008152508573__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561147357600080fd5b505af4158015611487573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156114b157600080fd5b81019080805160405193929190846401000000008211156114d157600080fd5b838201915060208201858111156114e757600080fd5b825186600182028301116401000000008211171561150457600080fd5b8083526020830192505050908051906020019080838360005b8381101561153857808201518184015260208101905061151d565b50505050905090810190601f1680156115655780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600581526020017f4461746520000000000000000000000000000000000000000000000000000000815250613aa39095949392919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561161a5780820151818401526020810190506115ff565b50505050905090810190601f1680156116475780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60006116618b8b613cbb565b90508060036000838152602001908152602001600020600001819055508a6003600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550896003600083815260200190815260200160002060020181905550886003600083815260200190815260200160002060030181905550878760036000848152602001908152602001600020600401919061172e929190614099565b5060016003600083815260200190815260200160002060050160006101000a81548160ff021916908315150217905550898b73ffffffffffffffffffffffffffffffffffffffff167f414e3a2f2f646174652d72656c6174696f6e00000000000000000000000000007f24afacb07df9e937e5b31845655a77bebfb01411f47269091a2762a471e80fb88c8c8c60405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a45050505050505050505050565b6000600160006003811061181f57fe5b602091828204019190069054906101000a900460ff16905090565b600061192f600160038060200260405190810160405280929190826003801561189e576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116118675790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156118e957600080fd5b505afa1580156118fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561192257600080fd5b8101908091905050613d23565b9050919050565b838360006119448383613dd6565b90506004600082815260200190815260200160002060040160009054906101000a900460ff16611d8f57611cee6040518060400160405280600581526020017f44617465200000000000000000000000000000000000000000000000000000008152508373__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b1580156119f857600080fd5b505af4158015611a0c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611a3657600080fd5b8101908080516040519392919084640100000000821115611a5657600080fd5b83820191506020820185811115611a6c57600080fd5b8251866001820283011164010000000082111715611a8957600080fd5b8083526020830192505050908051906020019080838360005b83811015611abd578082015181840152602081019050611aa2565b50505050905090810190601f168015611aea5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600e81526020017f206f6e2061677265656d656e74200000000000000000000000000000000000008152508673ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__630b39ed4790916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b158015611bba57600080fd5b505af4158015611bce573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611bf857600080fd5b8101908080516040519392919084640100000000821115611c1857600080fd5b83820191506020820185811115611c2e57600080fd5b8251866001820283011164010000000082111715611c4b57600080fd5b8083526020830192505050908051906020019080838360005b83811015611c7f578082015181840152602081019050611c64565b50505050905090810190601f168015611cac5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601b81526020017f206973206e6f7420636f6e6669677572656420746f2072656375720000000000815250613e3e565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d54578082015181840152602081019050611d39565b50505050905090810190601f168015611d815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b858773ffffffffffffffffffffffffffffffffffffffff167f414e3a2f2f646174652d6379636c6500000000000000000000000000000000007ffbced5a3cfc3a885d275e57ea1ebe7f7237e6909a01ac147472bdf4002cb8211888860405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a450505050505050565b611e3c614119565b6001600380602002604051908101604052809291908260038015611e9b576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411611e645790505b5050505050905090565b600060018060038110611eb457fe5b602091828204019190069054906101000a900460ff16905090565b6000611f3e6001600380602002604051908101604052809291908260038015611f33576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411611efc5790505b505050505083613d23565b9050919050565b600082826000611f558383613dd6565b90506004600082815260200190815260200160002060040160009054906101000a900460ff166123a0576122ff6040518060400160405280600581526020017f44617465200000000000000000000000000000000000000000000000000000008152508373__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561200957600080fd5b505af415801561201d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561204757600080fd5b810190808051604051939291908464010000000082111561206757600080fd5b8382019150602082018581111561207d57600080fd5b825186600182028301116401000000008211171561209a57600080fd5b8083526020830192505050908051906020019080838360005b838110156120ce5780820151818401526020810190506120b3565b50505050905090810190601f1680156120fb5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600e81526020017f206f6e2061677265656d656e74200000000000000000000000000000000000008152508673ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__630b39ed4790916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b1580156121cb57600080fd5b505af41580156121df573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561220957600080fd5b810190808051604051939291908464010000000082111561222957600080fd5b8382019150602082018581111561223f57600080fd5b825186600182028301116401000000008211171561225c57600080fd5b8083526020830192505050908051906020019080838360005b83811015612290578082015181840152602081019050612275565b50505050905090810190601f1680156122bd5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601b81526020017f206973206e6f7420636f6e6669677572656420746f2072656375720000000000815250613e3e565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561236557808201518184015260208101905061234a565b50505050905090810190601f1680156123925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60006123ac8787613dd6565b905060016004600083815260200190815260200160002060030160008282540192505081905550858773ffffffffffffffffffffffffffffffffffffffff167f414e3a2f2f646174652d6379636c6500000000000000000000000000000000007fe6f72cc6c82fb0564b0283d8aaca50ea30abb8cf76ff216d6e44ab07e8e446e860046000868152602001908152602001600020600301546040518082815260200191505060405180910390a4600460008281526020019081526020016000206003015494505050505092915050565b84600073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156124f957600080fd5b505af415801561250d573d6000803e3d6000fd5b505050506040513d604081101561252357600080fd5b8101908080519060200190929190805190602001909291905050505080915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156127c657612725604051806060016040528060228152602001614349602291398373ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b15801561262757600080fd5b505af415801561263b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561266557600080fd5b810190808051604051939291908464010000000082111561268557600080fd5b8382019150602082018581111561269b57600080fd5b82518660018202830111640100000000821117156126b857600080fd5b8083526020830192505050908051906020019080838360005b838110156126ec5780820151818401526020810190506126d1565b50505050905090810190601f1680156127195780820380516001836020036101000a031916815260200191505b50604052505050613812565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561278b578082015181840152602081019050612770565b50505050905090810190601f1680156127b85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60006127d28888613dd6565b9050806004600083815260200190815260200160002060000181905550876004600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600460008381526020019081526020016000206002018190555083600460008381526020019081526020016000206003018190555060016004600083815260200190815260200160002060040160006101000a81548160ff021916908315150217905550868873ffffffffffffffffffffffffffffffffffffffff167f414e3a2f2f646174652d6379636c6500000000000000000000000000000000007fda51648dde63196f64b5a75374d06446eaacf2fc9c94ccdd0b3a0e966af883f289898960405180806020018381526020018281038252858582818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a45050505050505050565b81600073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156129d457600080fd5b505af41580156129e8573d6000803e3d6000fd5b505050506040513d60408110156129fe57600080fd5b8101908080519060200190929190805190602001909291905050505080915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ca157612c00604051806060016040528060228152602001614349602291398373ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b158015612b0257600080fd5b505af4158015612b16573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015612b4057600080fd5b8101908080516040519392919084640100000000821115612b6057600080fd5b83820191506020820185811115612b7657600080fd5b8251866001820283011164010000000082111715612b9357600080fd5b8083526020830192505050908051906020019080838360005b83811015612bc7578082015181840152602081019050612bac565b50505050905090810190601f168015612bf45780820380516001836020036101000a031916815260200191505b50604052505050613812565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c66578082015181840152602081019050612c4b565b50505050905090810190601f168015612c935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6000612cad8585613cbb565b905060036000828152602001908152602001600020600201546003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f414e3a2f2f646174652d72656c6174696f6e00000000000000000000000000007f0891ad488d66c49e5d5aa5a66c9f0dba033a462c1ab343fc68de60024450b74a60006040518082815260200191505060405180910390a4600360008281526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160009055600482016000612dcf919061413b565b6005820160006101000a81549060ff021916905550505050505050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612e6061375b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612ec1578082015181840152602081019050612ea6565b50505050905090810190601f168015612eee5780820380516001836020036101000a031916815260200191505b508481038352602381526020018061432660239139604001848103825260278152602001806142b0602791396040019550505050505060006040518083038186803b158015612f3c57600080fd5b505af4158015612f50573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612fa6614002565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015613007578082015181840152602081019050612fec565b50505050905090810190601f1680156130345780820380516001836020036101000a031916815260200191505b508481038352602581526020018061424b6025913960400184810382526026815260200180614300602691396040019550505050505060006040518083038186803b15801561308257600080fd5b505af4158015613096573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146131ea5780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd5b062c07f8a61fda452024e9c9d7db09548980e5f298d0f5cab47c3c9c172b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60405160200180807f757067726164652861646472657373290000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012081565b81600073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156132b457600080fd5b505af41580156132c8573d6000803e3d6000fd5b505050506040513d60408110156132de57600080fd5b8101908080519060200190929190805190602001909291905050505080915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613581576134e0604051806060016040528060228152602001614349602291398373ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$";
        bytecode = Replace(bytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        bytecode = Replace(bytecode, "$1483b111869e15ef6c698c5f10f0d4a934$", commons_utils_Strings_sol_Strings);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogDeleteAgreementDateCycle(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDeleteAgreementDateCycle", this.address, callback); }
        LogDeleteAgreementDateRelation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogDeleteAgreementDateRelation", this.address, callback); }
        LogIncrementAgreementDateCycle(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogIncrementAgreementDateCycle", this.address, callback); }
        LogInitAgreementDateCycle(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogInitAgreementDateCycle", this.address, callback); }
        LogInitAgreementDateRelation(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogInitAgreementDateRelation", this.address, callback); }
        LogSetAgreementDateCycleMetadata(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogSetAgreementDateCycleMetadata", this.address, callback); }
        LogUpgradeOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogUpgradeOwnerChanged", this.address, callback); }
        ERC165_ID_Upgradeable() {
            const data = Encode(this.client).ERC165_ID_Upgradeable();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Upgradeable();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getUpgradeOwner() {
            const data = Encode(this.client).getUpgradeOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUpgradeOwner();
            });
        }
        incrementRecurrences(agreementAddress: string, date: Buffer) {
            const data = Encode(this.client).incrementRecurrences(agreementAddress, date);
            return Call<Tx, [number]>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).incrementRecurrences();
            });
        }
        migrateFrom() {
            const data = Encode(this.client).migrateFrom();
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).migrateFrom();
            });
        }
        migrateTo() {
            const data = Encode(this.client).migrateTo();
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).migrateTo();
            });
        }
        removeCycle(agreementAddress: string, date: Buffer) {
            const data = Encode(this.client).removeCycle(agreementAddress, date);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeCycle();
            });
        }
        removeRelation(agreementAddress: string, derived: Buffer) {
            const data = Encode(this.client).removeRelation(agreementAddress, derived);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).removeRelation();
            });
        }
        setCycle(agreementAddress: string, date: Buffer, metadata: string, recurred: number) {
            const data = Encode(this.client).setCycle(agreementAddress, date, metadata, recurred);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setCycle();
            });
        }
        setCycleMetadata(agreementAddress: string, date: Buffer, metadata: string) {
            const data = Encode(this.client).setCycleMetadata(agreementAddress, date, metadata);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setCycleMetadata();
            });
        }
        setRelation(agreementAddress: string, derived: Buffer, base: Buffer, offset: string) {
            const data = Encode(this.client).setRelation(agreementAddress, derived, base, offset);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setRelation();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferUpgradeOwnership(_newOwner: string) {
            const data = Encode(this.client).transferUpgradeOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferUpgradeOwnership();
            });
        }
        upgrade(_successor: string) {
            const data = Encode(this.client).upgrade(_successor);
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).upgrade();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_Upgradeable: () => { return client.encode("B21C815F", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getUpgradeOwner: () => { return client.encode("E7284879", []); },
        incrementRecurrences: (agreementAddress: string, date: Buffer) => { return client.encode("7D903E9A", ["address", "bytes32"], agreementAddress, date); },
        migrateFrom: () => { return client.encode("35657E68", []); },
        migrateTo: () => { return client.encode("4DDAF8F2", []); },
        removeCycle: (agreementAddress: string, date: Buffer) => { return client.encode("B679F750", ["address", "bytes32"], agreementAddress, date); },
        removeRelation: (agreementAddress: string, derived: Buffer) => { return client.encode("A6D1FE7A", ["address", "bytes32"], agreementAddress, derived); },
        setCycle: (agreementAddress: string, date: Buffer, metadata: string, recurred: number) => { return client.encode("96479C2F", ["address", "bytes32", "string", "uint256"], agreementAddress, date, metadata, recurred); },
        setCycleMetadata: (agreementAddress: string, date: Buffer, metadata: string) => { return client.encode("6AFF33A9", ["address", "bytes32", "string"], agreementAddress, date, metadata); },
        setRelation: (agreementAddress: string, derived: Buffer, base: Buffer, offset: string) => { return client.encode("535CF3DD", ["address", "bytes32", "bytes32", "string"], agreementAddress, derived, base, offset); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferUpgradeOwnership: (_newOwner: string) => { return client.encode("AC83EC7C", ["address"], _newOwner); },
        upgrade: (_successor: string) => { return client.encode("0900F010", ["address"], _successor); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_Upgradeable: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getUpgradeOwner: (): [string] => { return client.decode(data, ["address"]); },
        incrementRecurrences: (): [number] => { return client.decode(data, ["uint256"]); },
        migrateFrom: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        migrateTo: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        removeCycle: (): void => { return; },
        removeRelation: (): void => { return; },
        setCycle: (): void => { return; },
        setCycleMetadata: (): void => { return; },
        setRelation: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferUpgradeOwnership: (): void => { return; },
        upgrade: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        }
    }; };
}