//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultArchetypeRegistry {
    export const contactName = "DefaultArchetypeRegistry";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"packageId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"LogArchetypePackageActivation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"packageId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"bool","name":"isPrivate","type":"bool"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"LogArchetypePackageCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"packageId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"}],"name":"LogArchetypeToPackageUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogUpgradeOwnerChanged","type":"event"},{"constant":true,"inputs":[],"name":"ERC165_ID_ArtifactsFinderEnabled","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_ObjectFactory","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_Upgradeable","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARCHETYPES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARCHETYPE_PACKAGES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARCHETYPE_PACKAGE_MAP","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"OBJECT_CLASS_ARCHETYPE","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_db","type":"address"}],"name":"acceptDatabase","outputs":[{"internalType":"bool","name":"accepted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_author","type":"address"}],"name":"activatePackage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_packageId","type":"bytes32"},{"internalType":"address","name":"_archetype","type":"address"}],"name":"addArchetypeToPackage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"string","name":"_fileReference","type":"string"}],"name":"addDocument","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"bytes2","name":"_country","type":"bytes2"},{"internalType":"bytes32","name":"_region","type":"bytes32"}],"name":"addJurisdiction","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"bytes2[]","name":"_countries","type":"bytes2[]"},{"internalType":"bytes32[]","name":"_regions","type":"bytes32[]"}],"name":"addJurisdictions","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"enum DataTypes.ParameterType","name":"_parameterType","type":"uint8"},{"internalType":"bytes32","name":"_parameterName","type":"bytes32"}],"name":"addParameter","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"enum DataTypes.ParameterType[]","name":"_parameterTypes","type":"uint8[]"},{"internalType":"bytes32[]","name":"_parameterNames","type":"bytes32[]"}],"name":"addParameters","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"bool","name":"_active","type":"bool"},{"internalType":"address","name":"_author","type":"address"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_formationProcess","type":"address"},{"internalType":"address","name":"_executionProcess","type":"address"},{"internalType":"bytes32","name":"_packageId","type":"bytes32"},{"internalType":"address[]","name":"_governingArchetypes","type":"address[]"}],"name":"createArchetype","outputs":[{"internalType":"address","name":"archetype","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_author","type":"address"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"bool","name":"_active","type":"bool"}],"name":"createArchetypePackage","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_author","type":"address"}],"name":"deactivatePackage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getArchetypeAtIndex","outputs":[{"internalType":"address","name":"archetype","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getArchetypeAtIndexInPackage","outputs":[{"internalType":"address","name":"archetype","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"}],"name":"getArchetypeData","outputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"address","name":"author","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"bool","name":"isPrivate","type":"bool"},{"internalType":"address","name":"successor","type":"address"},{"internalType":"address","name":"formationProcessDefinition","type":"address"},{"internalType":"address","name":"executionProcessDefinition","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getArchetypePackageAtIndex","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getArchetypePackageData","outputs":[{"internalType":"address","name":"author","type":"address"},{"internalType":"bool","name":"isPrivate","type":"bool"},{"internalType":"bool","name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"}],"name":"getArchetypeSuccessor","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArchetypesSize","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getGoverningArchetypeAtIndex","outputs":[{"internalType":"address","name":"governingArchetype","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getJurisdictionAtIndexForArchetype","outputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getJurisdictionDataForArchetype","outputs":[{"internalType":"bytes2","name":"country","type":"bytes2"},{"internalType":"bytes32","name":"region","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfArchetypePackages","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getNumberOfArchetypesInPackage","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"}],"name":"getNumberOfGoverningArchetypes","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"}],"name":"getNumberOfJurisdictionsForArchetype","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getParameterByArchetypeAtIndex","outputs":[{"internalType":"bytes32","name":"name","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"bytes32","name":"_name","type":"bytes32"}],"name":"getParameterByArchetypeData","outputs":[{"internalType":"uint256","name":"position","type":"uint256"},{"internalType":"enum DataTypes.ParameterType","name":"parameterType","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_archetype","type":"address"}],"name":"getParametersByArchetypeSize","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpgradeOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"migrateFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_successor","type":"address"}],"name":"migrateTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_packageId","type":"bytes32"},{"internalType":"address","name":"_archetype","type":"address"}],"name":"packageHasArchetype","outputs":[{"internalType":"bool","name":"hasArchetype","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_archetype","type":"address"},{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"setArchetypePrice","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_artifactsFinder","type":"address"}],"name":"setArtifactsFinder","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferUpgradeOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_successor","type":"address"}],"name":"upgrade","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    export const bytecode = '6080604052600180600180600160006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260026000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200009a57fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508060028060038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e28290000000000000000000000008152506014019050604051602081830303815290604052805190602001206200028f60201b60201c565b5050506200019a60405160200180807f6765744f626a656374436c6173736573282900000000000000000000000000008152506012019050604051602081830303815290604052805190602001206200028f60201b60201c565b620001f160405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b019050604051602081830303815290604052805190602001206200028f60201b60201c565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200028960405160200180807f75706772616465286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206200028f60201b60201c565b6200037c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062007594602f913960400191505060405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b617208806200038c6000396000f3fe60806040523480156200001157600080fd5b50600436106200033a5760003560e01c80637e712dcb11620001c5578063c22af3a411620000ff578063e8aa445911620000b1578063f0eaa7ac1162000087578063f0eaa7ac146200177c578063f34d4d6f14620017d7578063f4ace0d0146200185f578063ff93e8fb14620018be576200033a565b8063e8aa44591462001675578063f085f6dd14620016c6578063f0b5c5a214620016ec576200033a565b8063c22af3a41462001396578063d119d31e14620014a1578063d556028d1462001512578063e10533c61462001570578063e728487914620015ce578063e7c541fe146200161a576200033a565b80639e4a88cf1162000177578063a84c8382116200014d578063a84c83821462001280578063ac83ec7c14620012a0578063b21c815f14620012e7578063b8019b681462001345576200033a565b80639e4a88cf1462001165578063a296020714620011e0578063a60a06661462001225576200033a565b80637e712dcb1462000e3d57806380557f011462000ea2578063846af9081462000f1c578063861f62141462000f8e57806386f8929014620010095780638f9ab49a146200105a576200033a565b80634dbcd73711620002975780635c030138116200024957806372a61096116200021f57806372a610961462000be1578063756b2e6c1462000d515780637589adb71462000d9b57806378bc0b0d1462000dc1576200033a565b80635c0301381462000a60578063656687641462000abb5780636c3ad00e1462000b5a576200033a565b80634dbcd73714620006fa5780634ddaf8f2146200086657806354af67b714620008c557806357e0ebca1462000923578063587bcfda14620009495780635bada39a14620009f7576200033a565b806311d751e111620002f157806311d751e1146200056d5780631ba8f89c146200058d5780632a8e9ab2146200061457806335657e68146200065b578063378afc8c14620006ba5780633921f39f14620006da576200033a565b806301ffc9a7146200033f5780630662931d14620003a7578063077738d814620004385780630900f01014620004585780630ecff8a114620004b75780631095479d1462000508575b600080fd5b6200038d600480360360208110156200035757600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062001903565b604051808215151515815260200191505060405180910390f35b620003f660048036036040811015620003bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506200196b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200044262001a04565b6040518082815260200191505060405180910390f35b6200049d600480360360208110156200047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001ab0565b604051808215151515815260200191505060405180910390f35b6200050660048036036040811015620004cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001f67565b005b62000557600480360360408110156200052057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001fd8565b6040518082815260200191505060405180910390f35b6200057762002082565b6040518082815260200191505060405180910390f35b620005bc60048036036020811015620005a557600080fd5b81019080803590602001909291905050506200212e565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182151515158152602001935050505060405180910390f35b62000659600480360360208110156200062c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002204565b005b620006a0600480360360208110156200067357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002397565b604051808215151515815260200191505060405180910390f35b620006c4620023a2565b6040518082815260200191505060405180910390f35b620006e4620023c6565b6040518082815260200191505060405180910390f35b6200082460048036036101208110156200071357600080fd5b8101908080359060200190929190803515159060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115620007dd57600080fd5b820183602082011115620007f057600080fd5b803590602001918460208302840111640100000000831117156200081357600080fd5b9091929391929390505050620023ea565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620008ab600480360360208110156200087e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620028f6565b604051808215151515815260200191505060405180910390f35b620008cf62002bd4565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6200092d62002c1e565b604051808260ff1660ff16815260200191505060405180910390f35b62000998600480360360408110156200096157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062002c4a565b60405180837dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018281526020019250505060405180910390f35b62000a466004803603604081101562000a0f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002cf0565b604051808215151515815260200191505060405180910390f35b62000aa56004803603602081101562000a7857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002ec4565b6040518082815260200191505060405180910390f35b62000b586004803603604081101562000ad357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111562000b1157600080fd5b82018360208201111562000b2457600080fd5b8035906020019184600183028401116401000000008311171562000b4757600080fd5b909192939192939050505062002fc7565b005b62000b9f6004803603602081101562000b7257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062003261565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000c266004803603602081101562000bf957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200343d565b604051808981526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186151515158152602001851515151581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019850505050505050505060405180910390f35b62000d5b62003967565b6040518082600360200280838360005b8381101562000d8857808201518184015260208101905062000d6b565b5050505090500191505060405180910390f35b62000da5620039dc565b604051808260ff1660ff16815260200191505060405180910390f35b62000e276004803603606081101562000dd957600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505062003a08565b6040518082815260200191505060405180910390f35b62000e8c6004803603604081101562000e5557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062003a82565b6040518082815260200191505060405180910390f35b62000eff6004803603606081101562000eba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919080351515906020019092919050505062003b1b565b604051808381526020018281526020019250505060405180910390f35b62000f786004803603606081101562000f3457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190803590602001909291905050506200406d565b6040518082815260200191505060405180910390f35b62000fc76004803603604081101562000fa657600080fd5b81019080803590602001909291908035906020019092919050505062004226565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001058600480360360408110156200102157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620042e8565b005b6200114f600480360360608110156200107257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115620010b057600080fd5b820183602082011115620010c357600080fd5b80359060200191846020830284011164010000000083111715620010e657600080fd5b9091929391929390803590602001906401000000008111156200110857600080fd5b8201836020820111156200111b57600080fd5b803590602001918460208302840111640100000000831117156200113e57600080fd5b9091929391929390505050620047e8565b6040518082815260200191505060405180910390f35b620011b4600480360360408110156200117d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620048a2565b60405180838152602001826010811115620011cb57fe5b60ff1681526020019250505060405180910390f35b6200120f60048036036020811015620011f857600080fd5b810190808035906020019092919050505062004948565b6040518082815260200191505060405180910390f35b6200126a600480360360208110156200123d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004a01565b6040518082815260200191505060405180910390f35b6200128a62004a8e565b6040518082815260200191505060405180910390f35b620012e560048036036020811015620012b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004ab2565b005b620012f162004ec6565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62001394600480360360408110156200135d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062004f10565b005b6200148b60048036036060811015620013ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115620013ec57600080fd5b820183602082011115620013ff57600080fd5b803590602001918460208302840111640100000000831117156200142257600080fd5b9091929391929390803590602001906401000000008111156200144457600080fd5b8201836020820111156200145757600080fd5b803590602001918460208302840111640100000000831117156200147a57600080fd5b9091929391929390505050620051d3565b6040518082815260200191505060405180910390f35b620014d060048036036020811015620014b957600080fd5b81019080803590602001909291905050506200529d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200151c62005367565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6200157a620053b1565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b620015d8620053fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200165f600480360360208110156200163257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005425565b6040518082815260200191505060405180910390f35b620016c4600480360360408110156200168d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620054b2565b005b620016d0620059b2565b604051808260ff1660ff16815260200191505060405180910390f35b62001766600480360360608110156200170457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919080359060200190929190505050620059dd565b6040518082815260200191505060405180910390f35b620017c1600480360360208110156200179457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005bc9565b6040518082815260200191505060405180910390f35b620017e162005c56565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200182357808201518184015260208101905062001806565b50505050905090810190601f168015620018515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b620018a4600480360360208110156200187757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062005c8f565b604051808215151515815260200191505060405180910390f35b620018ed60048036036020811015620018d657600080fd5b810190808035906020019092919050505062005fe2565b6040518082815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60008273ffffffffffffffffffffffffffffffffffffffff1663b23115fc836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620019bf57600080fd5b505afa158015620019d4573d6000803e3d6000fd5b505050506040513d6020811015620019eb57600080fd5b8101908080519060200190929190505050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663786e3f416040518163ffffffff1660e01b815260040160206040518083038186803b15801562001a6e57600080fd5b505afa15801562001a83573d6000803e3d6000fd5b505050506040513d602081101562001a9a57600080fd5b8101908080519060200190929190505050905090565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141562001b286200609b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001b8b57808201518184015260208101905062001b6e565b50505050905090810190601f16801562001bb95780820380516001836020036101000a031916815260200191505b50848103835260238152602001806200708d602391396040018481038252602781526020018062006ee3602791396040019550505050505060006040518083038186803b15801562001c0a57600080fd5b505af415801562001c1f573d6000803e3d6000fd5b505050508173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600162001c4b8462002ec4565b1262001c56620060d8565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001cb957808201518184015260208101905062001c9c565b50505050905090810190601f16801562001ce75780820380516001836020036101000a031916815260200191505b508481038352602981526020018062006fa2602991396040018481038252604b81526020018062006da1604b91396060019550505050505060006040518083038186803b15801562001d3857600080fd5b505af415801562001d4d573d6000803e3d6000fd5b5050505062001d5c83620028f6565b801562001e2257508273ffffffffffffffffffffffffffffffffffffffff166335657e68306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562001de457600080fd5b505af115801562001df9573d6000803e3d6000fd5b505050506040513d602081101562001e1057600080fd5b81019080805190602001909291905050505b915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef831562001e4a62006115565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001ead57808201518184015260208101905062001e90565b50505050905090810190601f16801562001edb5780820380516001836020036101000a031916815260200191505b508481038352601b8152602001807f41627374726163745570677261646561626c652e7570677261646500000000008152506020018481038252604081526020018062006ea3604091396040019550505050505060006040518083038186803b15801562001f4857600080fd5b505af415801562001f5d573d6000803e3d6000fd5b5050505050919050565b8173ffffffffffffffffffffffffffffffffffffffff166391b7f5ed826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801562001fbb57600080fd5b505af115801562001fd0573d6000803e3d6000fd5b505050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663d9b860d6846040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b1580156200202c57600080fd5b505afa15801562002041573d6000803e3d6000fd5b505050506040513d60408110156200205857600080fd5b81019080805190602001909291908051906020019092919050505080935081925050505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524de76b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620020ec57600080fd5b505afa15801562002101573d6000803e3d6000fd5b505050506040513d60208110156200211857600080fd5b8101908080519060200190929190505050905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4d6d4c7856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015620021a657600080fd5b505afa158015620021bb573d6000803e3d6000fd5b505050506040513d6060811015620021d257600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146200225862006152565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620022bb5780820151818401526020810190506200229e565b50505050905090810190601f168015620022e95780820380516001836020036101000a031916815260200191505b508481038352602981526020018062006d54602991396040018481038252602c81526020018062007130602c91396040019550505050505060006040518083038186803b1580156200233a57600080fd5b505af41580156200234f573d6000803e3d6000fd5b5050505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019050919050565b7f414e3a2f2f61726368657479706573000000000000000000000000000000000081565b7f414e3a2f2f6172636865747970652d7061636b6167657300000000000000000081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146200244062006152565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620024a357808201518184015260208101905062002486565b50505050905090810190601f168015620024d15780820380516001836020036101000a031916815260200191505b508481038352602881526020018062006ff9602891396040018481038252602a81526020018062006f78602a91396040019550505050505060006040518083038186803b1580156200252257600080fd5b505af415801562002537573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601481526020017f61677265656d656e74732e417263686574797065000000000000000000000000815250604051620025a2906200630a565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562002613578082015181840152602081019050620025f6565b50505050905090810190601f168015620026415780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f08015801562002664573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff166336d4bfca8c8c8c8c8c8c8c8b8b6040518a63ffffffff1660e01b8152600401808a815260200189151515158152602001881515151581526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925060200280828437600081840152601f19601f8201169050808301925050509a5050505050505050505050600060405180830381600087803b158015620027da57600080fd5b505af1158015620027ef573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387bd4a22826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200289457600080fd5b505af1158015620028a9573d6000803e3d6000fd5b505050506040513d6020811015620028c057600080fd5b81019080805190602001909291905050505060008414620028e857620028e7848262004f10565b5b9a9950505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630a452ad6836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156200299957600080fd5b505af1158015620029ae573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663f4ace0d06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562002a5357600080fd5b505af115801562002a68573d6000803e3d6000fd5b505050506040513d602081101562002a7f57600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef821562002ab862006115565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002b1b57808201518184015260208101905062002afe565b50505050905090810190601f16801562002b495780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f416273747261637444625570677261646561626c652e6d696772617465546f008152506020018481038252603181526020018062006f47603191396040019550505050505060006040518083038186803b15801562002bb657600080fd5b505af415801562002bcb573d6000803e3d6000fd5b50505050919050565b60405160200180807f6765744f626a656374436c61737365732829000000000000000000000000000081525060120190506040516020818303038152906040528051906020012081565b6000600260006003811062002c2f57fe5b602091828204019190069054906101000a900460ff16905090565b6000808373ffffffffffffffffffffffffffffffffffffffff1663714bc1ff846040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b15801562002c9e57600080fd5b505afa15801562002cb3573d6000803e3d6000fd5b505050506040513d604081101562002cca57600080fd5b810190808051906020019092919080519060200190929190505050915091509250929050565b600080905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a2960207856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562002d6a57600080fd5b505afa15801562002d7f573d6000803e3d6000fd5b505050506040513d602081101562002d9657600080fd5b8101908080519060200190929190505050905060008090505b8181101562002ebc578373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663861f621487846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801562002e4a57600080fd5b505afa15801562002e5f573d6000803e3d6000fd5b505050506040513d602081101562002e7657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141562002eae576001925062002ebc565b808060010191505062002daf565b505092915050565b600062002fc0600260038060200260405190810160405280929190826003801562002f2b576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841162002ef35790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801562002f7757600080fd5b505afa15801562002f8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101562002fb257600080fd5b81019080919050506200618f565b9050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d2739ef0866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200308057600080fd5b505afa15801562003095573d6000803e3d6000fd5b505050506040513d6020811015620030ac57600080fd5b810190808051906020019092919050505015620030c862006252565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200312b5780820151818401526020810190506200310e565b50505050905090810190601f168015620031595780820380516001836020036101000a031916815260200191505b508481038352602481526020018062006e11602491396040018481038252604681526020018062007021604691396060019550505050505060006040518083038186803b158015620031aa57600080fd5b505af4158015620031bf573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663f740e04583836040518363ffffffff1660e01b815260040180806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509350505050600060405180830381600087803b1580156200324357600080fd5b505af115801562003258573d6000803e3d6000fd5b50505050505050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614620032b762006152565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200331a578082015181840152602081019050620032fd565b50505050905090810190601f168015620033485780820380516001836020036101000a031916815260200191505b508481038352602e8152602001806200717e602e9139604001848103825260228152602001806200715c602291396040019550505050505060006040518083038186803b1580156200339957600080fd5b505af4158015620033ae573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d9bccbf76040518163ffffffff1660e01b815260040160206040518083038186803b158015620033f957600080fd5b505afa1580156200340e573d6000803e3d6000fd5b505050506040513d60208110156200342557600080fd5b81019080805190602001909291905050509050919050565b6000806000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d2739ef08a6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015620034e857600080fd5b505afa158015620034fd573d6000803e3d6000fd5b505050506040513d60208110156200351457600080fd5b8101908080519060200190929190505050156200395c578873ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200357257600080fd5b505afa15801562003587573d6000803e3d6000fd5b505050506040513d60208110156200359e57600080fd5b810190808051906020019092919050505097508873ffffffffffffffffffffffffffffffffffffffff1663a5faa1256040518163ffffffff1660e01b815260040160206040518083038186803b158015620035f857600080fd5b505afa1580156200360d573d6000803e3d6000fd5b505050506040513d60208110156200362457600080fd5b810190808051906020019092919050505096508873ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b1580156200367e57600080fd5b505afa15801562003693573d6000803e3d6000fd5b505050506040513d6020811015620036aa57600080fd5b810190808051906020019092919050505095508873ffffffffffffffffffffffffffffffffffffffff166322f3e2d46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200370457600080fd5b505afa15801562003719573d6000803e3d6000fd5b505050506040513d60208110156200373057600080fd5b810190808051906020019092919050505094508873ffffffffffffffffffffffffffffffffffffffff1663faff660e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200378a57600080fd5b505afa1580156200379f573d6000803e3d6000fd5b505050506040513d6020811015620037b657600080fd5b810190808051906020019092919050505093508873ffffffffffffffffffffffffffffffffffffffff1663d9bccbf76040518163ffffffff1660e01b815260040160206040518083038186803b1580156200381057600080fd5b505afa15801562003825573d6000803e3d6000fd5b505050506040513d60208110156200383c57600080fd5b810190808051906020019092919050505092508873ffffffffffffffffffffffffffffffffffffffff16631ea7a8d36040518163ffffffff1660e01b815260040160206040518083038186803b1580156200389657600080fd5b505afa158015620038ab573d6000803e3d6000fd5b505050506040513d6020811015620038c257600080fd5b810190808051906020019092919050505091508873ffffffffffffffffffffffffffffffffffffffff1663aa26f68b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200391c57600080fd5b505afa15801562003931573d6000803e3d6000fd5b505050506040513d60208110156200394857600080fd5b810190808051906020019092919050505090505b919395975091939597565b6200397162006318565b6002600380602002604051908101604052809291908260038015620039d2576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116200399a5790505b5050505050905090565b60006002600160038110620039ed57fe5b602091828204019190069054906101000a900460ff16905090565b600062003a7b600260038060200260405190810160405280929190826003801562003a6f576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841162003a375790505b5050505050836200618f565b9050919050565b60008273ffffffffffffffffffffffffffffffffffffffff1663eb246075836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562003ad657600080fd5b505afa15801562003aeb573d6000803e3d6000fd5b505050506040513d602081101562003b0257600080fd5b8101908080519060200190929190505050905092915050565b60008073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161462003b7262006152565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562003bd557808201518184015260208101905062003bb8565b50505050905090810190601f16801562003c035780820380516001836020036101000a031916815260200191505b508481038352602f81526020018062006e74602f9139604001848103825260208152602001807f5061636b61676520617574686f72206d757374206e6f7420626520656d7074798152506020019550505050505060006040518083038186803b15801562003c7057600080fd5b505af415801562003c85573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524de76b6040518163ffffffff1660e01b815260040160206040518083038186803b15801562003cf157600080fd5b505afa15801562003d06573d6000803e3d6000fd5b505050506040513d602081101562003d1d57600080fd5b81019080805190602001909291905050508542604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663187dd6aa828787876040518563ffffffff1660e01b8152600401808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182151515158152602001945050505050602060405180830381600087803b15801562003e5657600080fd5b505af115801562003e6b573d6000803e3d6000fd5b505050506040513d602081101562003e8257600080fd5b8101908080519060200190929190505050915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62003eb96200628f565b84141562003ec662006115565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562003f2957808201518184015260208101905062003f0c565b50505050905090810190601f16801562003f575780820380516001836020036101000a031916815260200191505b508481038352602f81526020018062006e74602f913960400184810382526029815260200180620070b0602991396040019550505050505060006040518083038186803b15801562003fa857600080fd5b505af415801562003fbd573d6000803e3d6000fd5b505050507f414e3a2f2f6172636865747970652d7061636b616765730000000000000000007ff1c38ab7abe967e483bb00e2556571b33037426b77ddb27a2704a68930053a9b82878787604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018215151515815260200194505050505060405180910390a2935093915050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d2739ef0866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200410f57600080fd5b505afa15801562004124573d6000803e3d6000fd5b505050506040513d60208110156200413b57600080fd5b810190808051906020019092919050505062004164576200415b62006298565b9150506200421f565b8473ffffffffffffffffffffffffffffffffffffffff16636f90338885856040518363ffffffff1660e01b815260040180836010811115620041a257fe5b60ff168152602001828152602001925050506040805180830381600087803b158015620041ce57600080fd5b505af1158015620041e3573d6000803e3d6000fd5b505050506040513d6040811015620041fa57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050505b9392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663861f621484846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015620042a357600080fd5b505afa158015620042b8573d6000803e3d6000fd5b505050506040513d6020811015620042cf57600080fd5b8101908080519060200190929190505050905092915050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9b35240856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200437557600080fd5b505afa1580156200438a573d6000803e3d6000fd5b505050506040513d6020811015620043a157600080fd5b810190808051906020019092919050505015620043bd62006252565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200442057808201518184015260208101905062004403565b50505050905090810190601f1680156200444e5780820380516001836020036101000a031916815260200191505b5084810383526028815260200180620071ac602891396040018481038252601f8152602001807f5061636b616765207769746820676976656e206964206e6f7420666f756e64008152506020019550505050505060006040518083038186803b158015620044bb57600080fd5b505af4158015620044d0573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4d6d4c7846040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b1580156200454957600080fd5b505afa1580156200455e573d6000803e3d6000fd5b505050506040513d60608110156200457557600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509050508091505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415620045f56200609b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620046585780820151818401526020810190506200463b565b50505050905090810190601f168015620046865780820380516001836020036101000a031916815260200191505b5084810383526028815260200180620071ac602891396040018481038252603f81526020018062006e35603f91396040019550505050505060006040518083038186803b158015620046d757600080fd5b505af4158015620046ec573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663faca9c86846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156200476557600080fd5b505af11580156200477a573d6000803e3d6000fd5b505050507f414e3a2f2f6172636865747970652d7061636b616765730000000000000000007ff28fc5959b58c6dcd0ff491115678e72221b7ac69db1275af9265eddebcec89084600060405180838152602001821515151581526020019250505060405180910390a2505050565b60008282905085859050146200480a5762004802620062a2565b905062004899565b60008090505b858590508110156200488b5762004860878787848181106200482e57fe5b905060200201356010811180156200484557600080fd5b508686858181106200485357fe5b905060200201356200406d565b91506200486c6200628f565b82146200487d578191505062004899565b808060010191505062004810565b50620048966200628f565b90505b95945050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff166337cc95b5846040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b158015620048f657600080fd5b505afa1580156200490b573d6000803e3d6000fd5b505050506040513d60408110156200492257600080fd5b810190808051906020019092919080519060200190929190505050915091509250929050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a2960207836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620049bd57600080fd5b505afa158015620049d2573d6000803e3d6000fd5b505050506040513d6020811015620049e957600080fd5b81019080805190602001909291905050509050919050565b60008173ffffffffffffffffffffffffffffffffffffffff1663b428f0756040518163ffffffff1660e01b815260040160206040518083038186803b15801562004a4a57600080fd5b505afa15801562004a5f573d6000803e3d6000fd5b505050506040513d602081101562004a7657600080fd5b81019080805190602001909291905050509050919050565b7f414e3a2f2f6172636865747970652d746f2d7061636b6167650000000000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141562004b286200609b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562004b8b57808201518184015260208101905062004b6e565b50505050905090810190601f16801562004bb95780820380516001836020036101000a031916815260200191505b50848103835260238152602001806200708d602391396040018481038252602781526020018062006ee3602791396040019550505050505060006040518083038186803b15801562004c0a57600080fd5b505af415801562004c1f573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462004c7762006152565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562004cda57808201518184015260208101905062004cbd565b50505050905090810190601f16801562004d085780820380516001836020036101000a031916815260200191505b508481038352602581526020018062006dec602591396040018481038252602681526020018062007067602691396040019550505050505060006040518083038186803b15801562004d5957600080fd5b505af415801562004d6e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462004ec35780600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd5b062c07f8a61fda452024e9c9d7db09548980e5f298d0f5cab47c3c9c172b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60405160200180807f757067726164652861646472657373290000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b8019b6884846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801562004fbb57600080fd5b505af115801562004fd0573d6000803e3d6000fd5b505050506040513d602081101562004fe757600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6200501e6200628f565b8314156200502b62006252565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200508e57808201518184015260208101905062005071565b50505050905090810190601f168015620050bc5780820380516001836020036101000a031916815260200191505b508481038352602e81526020018062006fcb602e91396040018481038252601b8152602001807f537065636966696564207061636b616765206e6f7420666f756e6400000000008152506020019550505050505060006040518083038186803b1580156200512957600080fd5b505af41580156200513e573d6000803e3d6000fd5b505050507f414e3a2f2f6172636865747970652d746f2d7061636b616765000000000000007fc4121be009b542b8d5f15b21e4b055cbf761e5b1fac3eceebf4a330949480b9c8484604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a2505050565b6000828290508585905014620051f557620051ed620062a2565b905062005294565b60008090505b8585905081101562005286576200525b878787848181106200521957fe5b905060200201357dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168686858181106200524e57fe5b90506020020135620059dd565b9150620052676200628f565b821462005278578191505062005294565b8080600101915050620051fb565b50620052916200628f565b90505b95945050505050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d119d31e846040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b1580156200531257600080fd5b505afa15801562005327573d6000803e3d6000fd5b505050506040513d60408110156200533e57600080fd5b810190808051906020019092919080519060200190929190505050809350819250505050919050565b60405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b0190506040516020818303038152906040528051906020012081565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008173ffffffffffffffffffffffffffffffffffffffff16639b70202e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200546e57600080fd5b505afa15801562005483573d6000803e3d6000fd5b505050506040513d60208110156200549a57600080fd5b81019080805190602001909291905050509050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9b35240856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200553f57600080fd5b505afa15801562005554573d6000803e3d6000fd5b505050506040513d60208110156200556b57600080fd5b8101908080519060200190929190505050156200558762006252565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015620055ea578082015181840152602081019050620055cd565b50505050905090810190601f168015620056185780820380516001836020036101000a031916815260200191505b5084810383526028815260200180620071ac602891396040018481038252601f8152602001807f5061636b616765207769746820676976656e206964206e6f7420666f756e64008152506020019550505050505060006040518083038186803b1580156200568557600080fd5b505af41580156200569a573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4d6d4c7846040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b1580156200571357600080fd5b505afa15801562005728573d6000803e3d6000fd5b505050506040513d60608110156200573f57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509050508091505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415620057bf6200609b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200582257808201518184015260208101905062005805565b50505050905090810190601f168015620058505780820380516001836020036101000a031916815260200191505b5084810383526028815260200180620071ac602891396040018481038252603d81526020018062006f0a603d91396040019550505050505060006040518083038186803b158015620058a157600080fd5b505af4158015620058b6573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eba7df04846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156200592f57600080fd5b505af115801562005944573d6000803e3d6000fd5b505050507f414e3a2f2f6172636865747970652d7061636b616765730000000000000000007ff28fc5959b58c6dcd0ff491115678e72221b7ac69db1275af9265eddebcec89084600160405180838152602001821515151581526020019250505060405180910390a2505050565b600060028060038110620059c257fe5b602091828204019190069054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d2739ef0856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801562005a7e57600080fd5b505afa15801562005a93573d6000803e3d6000fd5b505050506040513d602081101562005aaa57600080fd5b810190808051906020019092919050505062005ad25762005aca62006298565b905062005bc2565b60008473ffffffffffffffffffffffffffffffffffffffff1663083d091885856040518363ffffffff1660e01b815260040180837dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001828152602001925050506040805180830381600087803b15801562005b7157600080fd5b505af115801562005b86573d6000803e3d6000fd5b505050506040513d604081101562005b9d57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050505b9392505050565b60008173ffffffffffffffffffffffffffffffffffffffff166320c225ce6040518163ffffffff1660e01b815260040160206040518083038186803b15801562005c1257600080fd5b505afa15801562005c27573d6000803e3d6000fd5b505050506040513d602081101562005c3e57600080fd5b81019080805190602001909291905050509050919050565b6040518060400160405280601481526020017f61677265656d656e74732e41726368657479706500000000000000000000000081525081565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801562005ddb5750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1663e72848796040518163ffffffff1660e01b815260040160206040518083038186803b15801562005d8557600080fd5b505afa15801562005d9a573d6000803e3d6000fd5b505050506040513d602081101562005db157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614155b62005de56200609b565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562005e4857808201518184015260208101905062005e2b565b50505050905090810190601f16801562005e765780820380516001836020036101000a031916815260200191505b508481038352602481526020018062006d7d6024913960400184810382526057815260200180620070d9605791396060019550505050505060006040518083038186803b15801562005ec757600080fd5b505af415801562005edc573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16637f692a2a6040518163ffffffff1660e01b815260040160206040518083038186803b15801562005f3e57600080fd5b505afa15801562005f53573d6000803e3d6000fd5b505050506040513d602081101562005f6a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141562005fdd57816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c589e0fd836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200605757600080fd5b505afa1580156200606c573d6000803e3d6000fd5b505050506040513d60208110156200608357600080fd5b81019080805190602001909291905050509050919050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b6000620061c183600060038110620061a357fe5b602002015183600060038110620061b657fe5b6020020151620062ac565b905060008114620061d5578090506200624c565b6200620583600160038110620061e757fe5b602002015183600160038110620061fa57fe5b6020020151620062ac565b90506000811462006219578090506200624c565b62006249836002600381106200622b57fe5b6020020151836002600381106200623e57fe5b6020020151620062ac565b90505b92915050565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b60006103e9905090565b600061100a905090565b60008260ff168260ff161415620062c7576000905062006304565b8260ff168260ff161015620062ff577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905062006304565b600190505b92915050565b610a19806200633b83390190565b604051806060016040528060039060208202803883398082019150509050509056fe608060405234801561001057600080fd5b50604051610a19380380610a198339818101604052604081101561003357600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b5060405250505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461015461041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156101b557808201518184015260208101905061019a565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f720000000000000000008152506020018481038252602a8152602001806109c7602a91396040019550505050505060006040518083038186803b15801561024d57600080fd5b505af4158015610261573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600083511461029661041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f7200000000000000000081525060200184810382526025815260200180610953602591396040019550505050505060006040518083038186803b15801561038f57600080fd5b505af41580156103a3573d6000803e3d6000fd5b50505050600060405180806109a1602691396026019050604051809103902090506000604051808061097860299139602901905060405180910390209050600060405180806109f16028913960280190506040518091039020905084835583518255602084015181555050505050610453565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b6104f1806104626000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bc7f3b50146101c1575b600061003561020b565b905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610089610324565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156100ea5780820151818401526020810190506100cf565b50505050905090810190601f1680156101175780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f416273747261637444656c656761746550726f787900000000000000000000008152506020018481038252602981526020018061041d602991396040019550505050505060006040518083038186803b15801561018257600080fd5b505af4158015610196573d6000803e3d6000fd5b5050505060405136600082376000813683855af43d806000843e81600081146101bd578184f35b8184fd5b6101c961020b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610215610361565b73ffffffffffffffffffffffffffffffffffffffff1663c4c4a8a1610238610387565b6040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028757808201518184015260208101905061026c565b50505050905090810190601f1680156102b45780820380516001836020036101000a031916815260200191505b509250505060806040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250608081101561030a57600080fd5b810190808051906020019092919091905050508091505090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b600080604051808061046f60269139602601905060405180910390209050805491505090565b6060600060405180806104466029913960290190506040518091039020905060006040518080610495602891396028019050604051809103902090506040519250815483528054602084015260408301604052505090565b60606040518060400160405280600681526020017f455252363131000000000000000000000000000000000000000000000000000081525090509056fe44656c6567617465207461726765742061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e646572414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c7565a265627a7a723158201a1f8fd564872c22f611b2f1b7a0d5e703a0616136abbe83969c2719613e205064736f6c634300051100325f6f626a656374436c61737320737472696e67206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e6465725f61727469666163747346696e6465722061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c756541727469666163747346696e646572456e61626c65642e73657441727469666163747346696e646572416273747261637444625570677261646561626c652e6163636570744461746162617365546865207570677261646520737563636573736f72206d75737420686176652061206869676865722076657273696f6e207468616e207468652063757272656e7420636f6e74726163742e557067726164654f776e65642e7472616e73666572557067726164654f776e65727368697044656661756c7441726368657479706552656769737472792e616464446f63756d656e74476976656e2061646472657373206973206e6f7420617574686f72697a656420746f206465616374697661746520617263686574797065207061636b61676544656661756c7441726368657479706552656769737472792e6372656174654172636865747970655061636b6167654f6e65206f66206d696772617465546f202f206d69677261746546726f6d2072657475726e65642066616c73652e2041626f7274696e6720757067726164652e546865206d73672e73656e646572206973206e6f74207468652075706772616465206f776e6572476976656e2061646472657373206973206e6f7420617574686f72697a656420746f20616374697661746520617263686574797065207061636b61676554686520444220636f6e747261637420776173206e6f7420616363657074656420627920746865206e6577206f776e657241726368657479706520617574686f722061646472657373206d757374206e6f7420626520656d70747941627374726163745570677261646561626c652e7072655f68696768657256657273696f6e4f6e6c7944656661756c7441726368657479706552656769737472792e616464417263686574797065546f5061636b61676544656661756c7441726368657479706552656769737472792e63726561746541726368657479706554686520737065636966696564206172636865747970652061646472657373206973206e6f74206b6e6f776e20746f2074686973204172636865747970655265676973747279546865206e65772075706772616465206f776e6572206d757374206e6f74206265204e554c4c557067726164654f776e65642e7072655f6f6e6c794279557067726164654f776e657241207061636b6167652077697468207468652073616d6520494420616c726561647920657869737473546865206d73672e73656e646572206d757374206569746865722062652074686520757067726164654f776e6572206f72206120636f6e74726163742077697468207468652073616d6520757067726164654f776e65725468652041727469666163747346696e6465722061646472657373206d757374206e6f74206265206e756c6c4172636865747970652061646472657373206d75737420626520737570706c69656444656661756c7441726368657479706552656769737472792e676574417263686574797065537563636573736f7244656661756c7441726368657479706552656769737472792e61637469766174655061636b616765a265627a7a72315820b4f453dea525388e4a70e578c2e1ed23bece6719e3234e5b4b7b4399d77231db64736f6c63430005110032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string): Promise<string> {
        const codec = client.contractCodec(abi);
        let linkedBytecode = bytecode;
        linkedBytecode = linker(linkedBytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        const payload = client.payload(data);
        return client.deploy(payload);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogArchetypePackageActivation: { signature: "F28FC5959B58C6DCD0FF491115678E72221B7AC69DB1275AF9265EDDEBCEC890", tagged: (eventId: Buffer, packageId: Buffer, active: boolean) => ({ name: "LogArchetypePackageActivation", payload: { eventId: eventId, packageId: packageId, active: active } as const } as const) } as const, LogArchetypePackageCreation: { signature: "F1C38AB7ABE967E483BB00E2556571B33037426B77DDB27A2704A68930053A9B", tagged: (eventId: Buffer, packageId: Buffer, author: string, isPrivate: boolean, active: boolean) => ({ name: "LogArchetypePackageCreation", payload: { eventId: eventId, packageId: packageId, author: author, isPrivate: isPrivate, active: active } as const } as const) } as const, LogArchetypeToPackageUpdate: { signature: "C4121BE009B542B8D5F15B21E4B055CBF761E5B1FAC3ECEEBF4A330949480B9C", tagged: (eventId: Buffer, packageId: Buffer, archetypeAddress: string) => ({ name: "LogArchetypeToPackageUpdate", payload: { eventId: eventId, packageId: packageId, archetypeAddress: archetypeAddress } as const } as const) } as const, LogUpgradeOwnerChanged: { signature: "D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogUpgradeOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { ERC165_ID_ArtifactsFinderEnabled(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_ArtifactsFinderEnabled();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_ArtifactsFinderEnabled();
                });
            }, ERC165_ID_ObjectFactory(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_ObjectFactory();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_ObjectFactory();
                });
            }, ERC165_ID_Upgradeable(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_Upgradeable();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_Upgradeable();
                });
            }, ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, EVENT_ID_ARCHETYPES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARCHETYPES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARCHETYPES();
                });
            }, EVENT_ID_ARCHETYPE_PACKAGES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARCHETYPE_PACKAGES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARCHETYPE_PACKAGES();
                });
            }, EVENT_ID_ARCHETYPE_PACKAGE_MAP(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARCHETYPE_PACKAGE_MAP();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARCHETYPE_PACKAGE_MAP();
                });
            }, OBJECT_CLASS_ARCHETYPE(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).OBJECT_CLASS_ARCHETYPE();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).OBJECT_CLASS_ARCHETYPE();
                });
            }, acceptDatabase(_db: string, call = defaultCall): Promise<{
                accepted: boolean;
            }> {
                const data = encode(client).acceptDatabase(_db);
                return call<{
                    accepted: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).acceptDatabase();
                });
            }, activatePackage(_id: Buffer, _author: string, call = defaultCall): Promise<void> {
                const data = encode(client).activatePackage(_id, _author);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).activatePackage();
                });
            }, addArchetypeToPackage(_packageId: Buffer, _archetype: string, call = defaultCall): Promise<void> {
                const data = encode(client).addArchetypeToPackage(_packageId, _archetype);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addArchetypeToPackage();
                });
            }, addDocument(_archetype: string, _fileReference: string, call = defaultCall): Promise<void> {
                const data = encode(client).addDocument(_archetype, _fileReference);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addDocument();
                });
            }, addJurisdiction(_archetype: string, _country: Buffer, _region: Buffer, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addJurisdiction(_archetype, _country, _region);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addJurisdiction();
                });
            }, addJurisdictions(_archetype: string, _countries: Buffer[], _regions: Buffer[], call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addJurisdictions(_archetype, _countries, _regions);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addJurisdictions();
                });
            }, addParameter(_archetype: string, _parameterType: number, _parameterName: Buffer, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addParameter(_archetype, _parameterType, _parameterName);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addParameter();
                });
            }, addParameters(_archetype: string, _parameterTypes: number[], _parameterNames: Buffer[], call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addParameters(_archetype, _parameterTypes, _parameterNames);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addParameters();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, createArchetype(_price: number, _isPrivate: boolean, _active: boolean, _author: string, _owner: string, _formationProcess: string, _executionProcess: string, _packageId: Buffer, _governingArchetypes: string[], call = defaultCall): Promise<{
                archetype: string;
            }> {
                const data = encode(client).createArchetype(_price, _isPrivate, _active, _author, _owner, _formationProcess, _executionProcess, _packageId, _governingArchetypes);
                return call<{
                    archetype: string;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createArchetype();
                });
            }, createArchetypePackage(_author: string, _isPrivate: boolean, _active: boolean, call = defaultCall): Promise<{
                error: number;
                id: Buffer;
            }> {
                const data = encode(client).createArchetypePackage(_author, _isPrivate, _active);
                return call<{
                    error: number;
                    id: Buffer;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createArchetypePackage();
                });
            }, deactivatePackage(_id: Buffer, _author: string, call = defaultCall): Promise<void> {
                const data = encode(client).deactivatePackage(_id, _author);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).deactivatePackage();
                });
            }, getArchetypeAtIndex(_index: number, call = defaultCall): Promise<{
                archetype: string;
            }> {
                const data = encode(client).getArchetypeAtIndex(_index);
                return call<{
                    archetype: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypeAtIndex();
                });
            }, getArchetypeAtIndexInPackage(_id: Buffer, _index: number, call = defaultCall): Promise<{
                archetype: string;
            }> {
                const data = encode(client).getArchetypeAtIndexInPackage(_id, _index);
                return call<{
                    archetype: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypeAtIndexInPackage();
                });
            }, getArchetypeData(_archetype: string, call = defaultCall): Promise<{
                price: number;
                author: string;
                owner: string;
                active: boolean;
                isPrivate: boolean;
                successor: string;
                formationProcessDefinition: string;
                executionProcessDefinition: string;
            }> {
                const data = encode(client).getArchetypeData(_archetype);
                return call<{
                    price: number;
                    author: string;
                    owner: string;
                    active: boolean;
                    isPrivate: boolean;
                    successor: string;
                    formationProcessDefinition: string;
                    executionProcessDefinition: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypeData();
                });
            }, getArchetypePackageAtIndex(_index: number, call = defaultCall): Promise<{
                id: Buffer;
            }> {
                const data = encode(client).getArchetypePackageAtIndex(_index);
                return call<{
                    id: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypePackageAtIndex();
                });
            }, getArchetypePackageData(_id: Buffer, call = defaultCall): Promise<{
                author: string;
                isPrivate: boolean;
                active: boolean;
            }> {
                const data = encode(client).getArchetypePackageData(_id);
                return call<{
                    author: string;
                    isPrivate: boolean;
                    active: boolean;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypePackageData();
                });
            }, getArchetypeSuccessor(_archetype: string, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getArchetypeSuccessor(_archetype);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypeSuccessor();
                });
            }, getArchetypesSize(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getArchetypesSize();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArchetypesSize();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getGoverningArchetypeAtIndex(_archetype: string, _index: number, call = defaultCall): Promise<{
                governingArchetype: string;
            }> {
                const data = encode(client).getGoverningArchetypeAtIndex(_archetype, _index);
                return call<{
                    governingArchetype: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getGoverningArchetypeAtIndex();
                });
            }, getJurisdictionAtIndexForArchetype(_archetype: string, _index: number, call = defaultCall): Promise<{
                key: Buffer;
            }> {
                const data = encode(client).getJurisdictionAtIndexForArchetype(_archetype, _index);
                return call<{
                    key: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getJurisdictionAtIndexForArchetype();
                });
            }, getJurisdictionDataForArchetype(_archetype: string, _key: Buffer, call = defaultCall): Promise<{
                country: Buffer;
                region: Buffer;
            }> {
                const data = encode(client).getJurisdictionDataForArchetype(_archetype, _key);
                return call<{
                    country: Buffer;
                    region: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getJurisdictionDataForArchetype();
                });
            }, getNumberOfArchetypePackages(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfArchetypePackages();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfArchetypePackages();
                });
            }, getNumberOfArchetypesInPackage(_id: Buffer, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfArchetypesInPackage(_id);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfArchetypesInPackage();
                });
            }, getNumberOfGoverningArchetypes(_archetype: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfGoverningArchetypes(_archetype);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfGoverningArchetypes();
                });
            }, getNumberOfJurisdictionsForArchetype(_archetype: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfJurisdictionsForArchetype(_archetype);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfJurisdictionsForArchetype();
                });
            }, getParameterByArchetypeAtIndex(_archetype: string, _index: number, call = defaultCall): Promise<{
                name: Buffer;
            }> {
                const data = encode(client).getParameterByArchetypeAtIndex(_archetype, _index);
                return call<{
                    name: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getParameterByArchetypeAtIndex();
                });
            }, getParameterByArchetypeData(_archetype: string, _name: Buffer, call = defaultCall): Promise<{
                position: number;
                parameterType: number;
            }> {
                const data = encode(client).getParameterByArchetypeData(_archetype, _name);
                return call<{
                    position: number;
                    parameterType: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getParameterByArchetypeData();
                });
            }, getParametersByArchetypeSize(_archetype: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getParametersByArchetypeSize(_archetype);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getParametersByArchetypeSize();
                });
            }, getUpgradeOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getUpgradeOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUpgradeOwner();
                });
            }, migrateFrom(call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).migrateFrom();
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).migrateFrom();
                });
            }, migrateTo(_successor: string, call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).migrateTo(_successor);
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).migrateTo();
                });
            }, packageHasArchetype(_packageId: Buffer, _archetype: string, call = defaultCall): Promise<{
                hasArchetype: boolean;
            }> {
                const data = encode(client).packageHasArchetype(_packageId, _archetype);
                return call<{
                    hasArchetype: boolean;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).packageHasArchetype();
                });
            }, setArchetypePrice(_archetype: string, _price: number, call = defaultCall): Promise<void> {
                const data = encode(client).setArchetypePrice(_archetype, _price);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setArchetypePrice();
                });
            }, setArtifactsFinder(_artifactsFinder: string, call = defaultCall): Promise<void> {
                const data = encode(client).setArtifactsFinder(_artifactsFinder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setArtifactsFinder();
                });
            }, supportsInterface(_interfaceId: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).supportsInterface(_interfaceId);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).supportsInterface();
                });
            }, transferUpgradeOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferUpgradeOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferUpgradeOwnership();
                });
            }, upgrade(_successor: string, call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).upgrade(_successor);
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).upgrade();
                });
            } } as const, listeners: { LogArchetypePackageActivation(callback: (err?: Error, event?: {
                eventId: Buffer;
                packageId: Buffer;
                active: boolean;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["F28FC5959B58C6DCD0FF491115678E72221B7AC69DB1275AF9265EDDEBCEC890"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypePackageActivation()); }, start, end); }, LogArchetypePackageCreation(callback: (err?: Error, event?: {
                eventId: Buffer;
                packageId: Buffer;
                author: string;
                isPrivate: boolean;
                active: boolean;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["F1C38AB7ABE967E483BB00E2556571B33037426B77DDB27A2704A68930053A9B"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypePackageCreation()); }, start, end); }, LogArchetypeToPackageUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                packageId: Buffer;
                archetypeAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["C4121BE009B542B8D5F15B21E4B055CBF761E5B1FAC3ECEEBF4A330949480B9C"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeToPackageUpdate()); }, start, end); }, LogUpgradeOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogUpgradeOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        ERC165_ID_ArtifactsFinderEnabled: () => { return codec.encodeFunctionData("D556028D"); },
        ERC165_ID_ObjectFactory: () => { return codec.encodeFunctionData("54AF67B7"); },
        ERC165_ID_Upgradeable: () => { return codec.encodeFunctionData("B21C815F"); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        EVENT_ID_ARCHETYPES: () => { return codec.encodeFunctionData("378AFC8C"); },
        EVENT_ID_ARCHETYPE_PACKAGES: () => { return codec.encodeFunctionData("3921F39F"); },
        EVENT_ID_ARCHETYPE_PACKAGE_MAP: () => { return codec.encodeFunctionData("A84C8382"); },
        OBJECT_CLASS_ARCHETYPE: () => { return codec.encodeFunctionData("F34D4D6F"); },
        acceptDatabase: (_db: string) => { return codec.encodeFunctionData("F4ACE0D0", _db); },
        activatePackage: (_id: Buffer, _author: string) => { return codec.encodeFunctionData("E8AA4459", _id, _author); },
        addArchetypeToPackage: (_packageId: Buffer, _archetype: string) => { return codec.encodeFunctionData("B8019B68", _packageId, _archetype); },
        addDocument: (_archetype: string, _fileReference: string) => { return codec.encodeFunctionData("65668764", _archetype, _fileReference); },
        addJurisdiction: (_archetype: string, _country: Buffer, _region: Buffer) => { return codec.encodeFunctionData("F0B5C5A2", _archetype, _country, _region); },
        addJurisdictions: (_archetype: string, _countries: Buffer[], _regions: Buffer[]) => { return codec.encodeFunctionData("C22AF3A4", _archetype, _countries, _regions); },
        addParameter: (_archetype: string, _parameterType: number, _parameterName: Buffer) => { return codec.encodeFunctionData("846AF908", _archetype, _parameterType, _parameterName); },
        addParameters: (_archetype: string, _parameterTypes: number[], _parameterNames: Buffer[]) => { return codec.encodeFunctionData("8F9AB49A", _archetype, _parameterTypes, _parameterNames); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        createArchetype: (_price: number, _isPrivate: boolean, _active: boolean, _author: string, _owner: string, _formationProcess: string, _executionProcess: string, _packageId: Buffer, _governingArchetypes: string[]) => { return codec.encodeFunctionData("4DBCD737", _price, _isPrivate, _active, _author, _owner, _formationProcess, _executionProcess, _packageId, _governingArchetypes); },
        createArchetypePackage: (_author: string, _isPrivate: boolean, _active: boolean) => { return codec.encodeFunctionData("80557F01", _author, _isPrivate, _active); },
        deactivatePackage: (_id: Buffer, _author: string) => { return codec.encodeFunctionData("86F89290", _id, _author); },
        getArchetypeAtIndex: (_index: number) => { return codec.encodeFunctionData("D119D31E", _index); },
        getArchetypeAtIndexInPackage: (_id: Buffer, _index: number) => { return codec.encodeFunctionData("861F6214", _id, _index); },
        getArchetypeData: (_archetype: string) => { return codec.encodeFunctionData("72A61096", _archetype); },
        getArchetypePackageAtIndex: (_index: number) => { return codec.encodeFunctionData("FF93E8FB", _index); },
        getArchetypePackageData: (_id: Buffer) => { return codec.encodeFunctionData("1BA8F89C", _id); },
        getArchetypeSuccessor: (_archetype: string) => { return codec.encodeFunctionData("6C3AD00E", _archetype); },
        getArchetypesSize: () => { return codec.encodeFunctionData("077738D8"); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getGoverningArchetypeAtIndex: (_archetype: string, _index: number) => { return codec.encodeFunctionData("0662931D", _archetype, _index); },
        getJurisdictionAtIndexForArchetype: (_archetype: string, _index: number) => { return codec.encodeFunctionData("1095479D", _archetype, _index); },
        getJurisdictionDataForArchetype: (_archetype: string, _key: Buffer) => { return codec.encodeFunctionData("587BCFDA", _archetype, _key); },
        getNumberOfArchetypePackages: () => { return codec.encodeFunctionData("11D751E1"); },
        getNumberOfArchetypesInPackage: (_id: Buffer) => { return codec.encodeFunctionData("A2960207", _id); },
        getNumberOfGoverningArchetypes: (_archetype: string) => { return codec.encodeFunctionData("A60A0666", _archetype); },
        getNumberOfJurisdictionsForArchetype: (_archetype: string) => { return codec.encodeFunctionData("F0EAA7AC", _archetype); },
        getParameterByArchetypeAtIndex: (_archetype: string, _index: number) => { return codec.encodeFunctionData("7E712DCB", _archetype, _index); },
        getParameterByArchetypeData: (_archetype: string, _name: Buffer) => { return codec.encodeFunctionData("9E4A88CF", _archetype, _name); },
        getParametersByArchetypeSize: (_archetype: string) => { return codec.encodeFunctionData("E7C541FE", _archetype); },
        getUpgradeOwner: () => { return codec.encodeFunctionData("E7284879"); },
        migrateFrom: () => { return codec.encodeFunctionData("35657E68"); },
        migrateTo: (_successor: string) => { return codec.encodeFunctionData("4DDAF8F2", _successor); },
        packageHasArchetype: (_packageId: Buffer, _archetype: string) => { return codec.encodeFunctionData("5BADA39A", _packageId, _archetype); },
        setArchetypePrice: (_archetype: string, _price: number) => { return codec.encodeFunctionData("0ECFF8A1", _archetype, _price); },
        setArtifactsFinder: (_artifactsFinder: string) => { return codec.encodeFunctionData("2A8E9AB2", _artifactsFinder); },
        supportsInterface: (_interfaceId: Buffer) => { return codec.encodeFunctionData("01FFC9A7", _interfaceId); },
        transferUpgradeOwnership: (_newOwner: string) => { return codec.encodeFunctionData("AC83EC7C", _newOwner); },
        upgrade: (_successor: string) => { return codec.encodeFunctionData("0900F010", _successor); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogArchetypePackageActivation: (): {
            eventId: Buffer;
            packageId: Buffer;
            active: boolean;
        } => {
            const [eventId, packageId, active] = codec.decodeEventLog ("F28FC5959B58C6DCD0FF491115678E72221B7AC69DB1275AF9265EDDEBCEC890", data, topics);
            return { eventId: eventId, packageId: packageId, active: active };
        },
        LogArchetypePackageCreation: (): {
            eventId: Buffer;
            packageId: Buffer;
            author: string;
            isPrivate: boolean;
            active: boolean;
        } => {
            const [eventId, packageId, author, isPrivate, active] = codec.decodeEventLog ("F1C38AB7ABE967E483BB00E2556571B33037426B77DDB27A2704A68930053A9B", data, topics);
            return { eventId: eventId, packageId: packageId, author: author, isPrivate: isPrivate, active: active };
        },
        LogArchetypeToPackageUpdate: (): {
            eventId: Buffer;
            packageId: Buffer;
            archetypeAddress: string;
        } => {
            const [eventId, packageId, archetypeAddress] = codec.decodeEventLog ("C4121BE009B542B8D5F15B21E4B055CBF761E5B1FAC3ECEEBF4A330949480B9C", data, topics);
            return { eventId: eventId, packageId: packageId, archetypeAddress: archetypeAddress };
        },
        LogUpgradeOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        ERC165_ID_ArtifactsFinderEnabled: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("D556028D", data); },
        ERC165_ID_ObjectFactory: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("54AF67B7", data); },
        ERC165_ID_Upgradeable: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("B21C815F", data); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        EVENT_ID_ARCHETYPES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("378AFC8C", data); },
        EVENT_ID_ARCHETYPE_PACKAGES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("3921F39F", data); },
        EVENT_ID_ARCHETYPE_PACKAGE_MAP: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("A84C8382", data); },
        OBJECT_CLASS_ARCHETYPE: (): [
            string
        ] => { return codec.decodeFunctionResult ("F34D4D6F", data); },
        acceptDatabase: (): {
            accepted: boolean;
        } => {
            const [accepted] = codec.decodeFunctionResult ("F4ACE0D0", data);
            return { accepted: accepted };
        },
        activatePackage: (): void => { return; },
        addArchetypeToPackage: (): void => { return; },
        addDocument: (): void => { return; },
        addJurisdiction: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("F0B5C5A2", data);
            return { error: error };
        },
        addJurisdictions: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("C22AF3A4", data);
            return { error: error };
        },
        addParameter: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("846AF908", data);
            return { error: error };
        },
        addParameters: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("8F9AB49A", data);
            return { error: error };
        },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        createArchetype: (): {
            archetype: string;
        } => {
            const [archetype] = codec.decodeFunctionResult ("4DBCD737", data);
            return { archetype: archetype };
        },
        createArchetypePackage: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = codec.decodeFunctionResult ("80557F01", data);
            return { error: error, id: id };
        },
        deactivatePackage: (): void => { return; },
        getArchetypeAtIndex: (): {
            archetype: string;
        } => {
            const [archetype] = codec.decodeFunctionResult ("D119D31E", data);
            return { archetype: archetype };
        },
        getArchetypeAtIndexInPackage: (): {
            archetype: string;
        } => {
            const [archetype] = codec.decodeFunctionResult ("861F6214", data);
            return { archetype: archetype };
        },
        getArchetypeData: (): {
            price: number;
            author: string;
            owner: string;
            active: boolean;
            isPrivate: boolean;
            successor: string;
            formationProcessDefinition: string;
            executionProcessDefinition: string;
        } => {
            const [price, author, owner, active, isPrivate, successor, formationProcessDefinition, executionProcessDefinition] = codec.decodeFunctionResult ("72A61096", data);
            return { price: price, author: author, owner: owner, active: active, isPrivate: isPrivate, successor: successor, formationProcessDefinition: formationProcessDefinition, executionProcessDefinition: executionProcessDefinition };
        },
        getArchetypePackageAtIndex: (): {
            id: Buffer;
        } => {
            const [id] = codec.decodeFunctionResult ("FF93E8FB", data);
            return { id: id };
        },
        getArchetypePackageData: (): {
            author: string;
            isPrivate: boolean;
            active: boolean;
        } => {
            const [author, isPrivate, active] = codec.decodeFunctionResult ("1BA8F89C", data);
            return { author: author, isPrivate: isPrivate, active: active };
        },
        getArchetypeSuccessor: (): [
            string
        ] => { return codec.decodeFunctionResult ("6C3AD00E", data); },
        getArchetypesSize: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("077738D8", data);
            return { size: size };
        },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getGoverningArchetypeAtIndex: (): {
            governingArchetype: string;
        } => {
            const [governingArchetype] = codec.decodeFunctionResult ("0662931D", data);
            return { governingArchetype: governingArchetype };
        },
        getJurisdictionAtIndexForArchetype: (): {
            key: Buffer;
        } => {
            const [key] = codec.decodeFunctionResult ("1095479D", data);
            return { key: key };
        },
        getJurisdictionDataForArchetype: (): {
            country: Buffer;
            region: Buffer;
        } => {
            const [country, region] = codec.decodeFunctionResult ("587BCFDA", data);
            return { country: country, region: region };
        },
        getNumberOfArchetypePackages: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("11D751E1", data);
            return { size: size };
        },
        getNumberOfArchetypesInPackage: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("A2960207", data);
            return { size: size };
        },
        getNumberOfGoverningArchetypes: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("A60A0666", data);
            return { size: size };
        },
        getNumberOfJurisdictionsForArchetype: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("F0EAA7AC", data);
            return { size: size };
        },
        getParameterByArchetypeAtIndex: (): {
            name: Buffer;
        } => {
            const [name] = codec.decodeFunctionResult ("7E712DCB", data);
            return { name: name };
        },
        getParameterByArchetypeData: (): {
            position: number;
            parameterType: number;
        } => {
            const [position, parameterType] = codec.decodeFunctionResult ("9E4A88CF", data);
            return { position: position, parameterType: parameterType };
        },
        getParametersByArchetypeSize: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("E7C541FE", data);
            return { size: size };
        },
        getUpgradeOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("E7284879", data); },
        migrateFrom: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("35657E68", data);
            return { success: success };
        },
        migrateTo: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("4DDAF8F2", data);
            return { success: success };
        },
        packageHasArchetype: (): {
            hasArchetype: boolean;
        } => {
            const [hasArchetype] = codec.decodeFunctionResult ("5BADA39A", data);
            return { hasArchetype: hasArchetype };
        },
        setArchetypePrice: (): void => { return; },
        setArtifactsFinder: (): void => { return; },
        supportsInterface: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("01FFC9A7", data); },
        transferUpgradeOwnership: (): void => { return; },
        upgrade: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("0900F010", data);
            return { success: success };
        }
    }; };
}