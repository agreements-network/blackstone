//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module Archetype {
    export const contactName = "Archetype";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"LogArchetypeActivation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"},{"indexed":false,"internalType":"bool","name":"isPrivate","type":"bool"},{"indexed":false,"internalType":"address","name":"successor","type":"address"},{"indexed":false,"internalType":"address","name":"formationProcessDefinition","type":"address"},{"indexed":false,"internalType":"address","name":"executionProcessDefinition","type":"address"}],"name":"LogArchetypeCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"},{"indexed":false,"internalType":"bool","name":"isPrivate","type":"bool"},{"indexed":false,"internalType":"address","name":"successor","type":"address"},{"indexed":false,"internalType":"address","name":"formationProcessDefinition","type":"address"},{"indexed":false,"internalType":"address","name":"executionProcessDefinition","type":"address"}],"name":"LogArchetypeCreation_v1_1_0","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"__DELETE__","type":"int256"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"documentKey","type":"bytes32"}],"name":"LogArchetypeDocumentRemoval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"documentKey","type":"bytes32"},{"indexed":false,"internalType":"string","name":"documentReference","type":"string"}],"name":"LogArchetypeDocumentUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"bytes2","name":"country","type":"bytes2"},{"indexed":false,"internalType":"bytes32","name":"region","type":"bytes32"}],"name":"LogArchetypeJurisdictionUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"LogArchetypeOwnerUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"parameterName","type":"bytes32"},{"indexed":false,"internalType":"uint8","name":"parameterType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"position","type":"uint256"}],"name":"LogArchetypeParameterUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"LogArchetypePriceUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"address","name":"successor","type":"address"}],"name":"LogArchetypeSuccessorUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"archetypeAddress","type":"address"},{"indexed":false,"internalType":"address","name":"governingArchetypeAddress","type":"address"}],"name":"LogGoverningArchetypeUpdate","type":"event"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARCHETYPES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARCHETYPE_DOCUMENTS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARCHETYPE_JURISDICTIONS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARCHETYPE_PARAMETERS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_GOVERNING_ARCHETYPES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ROLE_ID_OBJECT_ADMIN","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ROLE_ID_OWNER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"activate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_fileReference","type":"string"}],"name":"addDocument","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes2","name":"_country","type":"bytes2"},{"internalType":"bytes32","name":"_region","type":"bytes32"}],"name":"addJurisdiction","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"enum DataTypes.ParameterType","name":"_parameterType","type":"uint8"},{"internalType":"bytes32","name":"_parameterName","type":"bytes32"}],"name":"addParameter","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"uint256","name":"position","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"clearDocuments","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"bool","name":"_multiHolder","type":"bool"},{"internalType":"bool","name":"_revocable","type":"bool"},{"internalType":"bool","name":"_transferable","type":"bool"}],"name":"createPermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"deactivate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAuthor","outputs":[{"internalType":"address","name":"author","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getDocument","outputs":[{"internalType":"string","name":"fileReference","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getDocumentKeyAtIndex","outputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getExecutionProcessDefinition","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getFormationProcessDefinition","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getGoverningArchetypeAtIndex","outputs":[{"internalType":"address","name":"archetypeAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getGoverningArchetypes","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getHolder","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getJurisdictionAtIndex","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"bytes32","name":"key","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getJurisdictionData","outputs":[{"internalType":"bytes2","name":"country","type":"bytes2"},{"internalType":"bytes32","name":"region","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfDocuments","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfGoverningArchetypes","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfJurisdictions","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfParameters","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getParameterAtIndex","outputs":[{"internalType":"bytes32","name":"parameter","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_parameter","type":"bytes32"}],"name":"getParameterDetails","outputs":[{"internalType":"uint256","name":"position","type":"uint256"},{"internalType":"enum DataTypes.ParameterType","name":"parameterType","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"}],"name":"getPermissionDetails","outputs":[{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"bool","name":"multiHolder","type":"bool"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bool","name":"transferable","type":"bool"},{"internalType":"uint256","name":"holderSize","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSuccessor","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_newHolder","type":"address"}],"name":"grantPermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_holder","type":"address"}],"name":"hasPermission","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"bool","name":"_active","type":"bool"},{"internalType":"address","name":"_author","type":"address"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_formationProcess","type":"address"},{"internalType":"address","name":"_executionProcess","type":"address"},{"internalType":"address[]","name":"_governingArchetypes","type":"address[]"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"bool","name":"_isPrivate","type":"bool"},{"internalType":"bool","name":"_active","type":"bool"},{"internalType":"address","name":"_author","type":"address"},{"internalType":"address","name":"_formationProcess","type":"address"},{"internalType":"address","name":"_executionProcess","type":"address"},{"internalType":"address[]","name":"_governingArchetypes","type":"address[]"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"initializeObjectAdministrator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isPrivate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_holder","type":"address"}],"name":"revokePermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"setPrice","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_successor","type":"address"}],"name":"setSuccessor","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_permission","type":"bytes32"},{"internalType":"address","name":"_newHolder","type":"address"}],"name":"transferPermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"upgradeOwnerPermission","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogArchetypeActivation: { signature: "E4AC67EBCCB90B06B7F90867A2CBAF0E103465CBB9457C569BBF04B46876A8CD", tagged: (eventId: Buffer, archetypeAddress: string, active: boolean) => ({ name: "LogArchetypeActivation", payload: { eventId: eventId, archetypeAddress: archetypeAddress, active: active } as const } as const) } as const, LogArchetypeCreation: { signature: "5E1AA3806109E460AD3CF9F44367A1C7B3722DF2A38F7088121F443FD3B0DC7C", tagged: (eventId: Buffer, archetypeAddress: string, price: number, author: string, active: boolean, isPrivate: boolean, successor: string, formationProcessDefinition: string, executionProcessDefinition: string) => ({ name: "LogArchetypeCreation", payload: { eventId: eventId, archetypeAddress: archetypeAddress, price: price, author: author, active: active, isPrivate: isPrivate, successor: successor, formationProcessDefinition: formationProcessDefinition, executionProcessDefinition: executionProcessDefinition } as const } as const) } as const, LogArchetypeCreation_v1_1_0: { signature: "ADBF13CDB6C80F311F6DD8311F0B575E49E5939DEF1FB02ECD69349BB1116ECE", tagged: (eventId: Buffer, archetypeAddress: string, price: number, author: string, owner: string, active: boolean, isPrivate: boolean, successor: string, formationProcessDefinition: string, executionProcessDefinition: string) => ({ name: "LogArchetypeCreation_v1_1_0", payload: { eventId: eventId, archetypeAddress: archetypeAddress, price: price, author: author, owner: owner, active: active, isPrivate: isPrivate, successor: successor, formationProcessDefinition: formationProcessDefinition, executionProcessDefinition: executionProcessDefinition } as const } as const) } as const, LogArchetypeDocumentRemoval: { signature: "A2456C134CC9E5250C388D2650D30D6F21B5529345D0C0DBCB829ECE97670C1A", tagged: (eventId: Buffer, __DELETE__: number, archetypeAddress: string, documentKey: Buffer) => ({ name: "LogArchetypeDocumentRemoval", payload: { eventId: eventId, __DELETE__: __DELETE__, archetypeAddress: archetypeAddress, documentKey: documentKey } as const } as const) } as const, LogArchetypeDocumentUpdate: { signature: "F9EE5F44FF582EA8A3C432AB7C7E81B0C8B158ABB4DD2BDFDD507BBBA85D3DE5", tagged: (eventId: Buffer, archetypeAddress: string, documentKey: Buffer, documentReference: string) => ({ name: "LogArchetypeDocumentUpdate", payload: { eventId: eventId, archetypeAddress: archetypeAddress, documentKey: documentKey, documentReference: documentReference } as const } as const) } as const, LogArchetypeJurisdictionUpdate: { signature: "7B43ADFD44FB34CCDA45CB66697BADA72F644D3BA1FE522FBDAAE461DB41B371", tagged: (eventId: Buffer, archetypeAddress: string, country: Buffer, region: Buffer) => ({ name: "LogArchetypeJurisdictionUpdate", payload: { eventId: eventId, archetypeAddress: archetypeAddress, country: country, region: region } as const } as const) } as const, LogArchetypeOwnerUpdate: { signature: "A89ADDD6BE29302BCF6DFBC1BCE137479D58502C5A88DF66AF0C8D0A30CEA906", tagged: (eventId: Buffer, archetypeAddress: string, owner: string) => ({ name: "LogArchetypeOwnerUpdate", payload: { eventId: eventId, archetypeAddress: archetypeAddress, owner: owner } as const } as const) } as const, LogArchetypeParameterUpdate: { signature: "ED6ECB67E04911432D92AE0346B39AC3E380A22A9D6222FC7A5501BF122C6CA0", tagged: (eventId: Buffer, archetypeAddress: string, parameterName: Buffer, parameterType: number, position: number) => ({ name: "LogArchetypeParameterUpdate", payload: { eventId: eventId, archetypeAddress: archetypeAddress, parameterName: parameterName, parameterType: parameterType, position: position } as const } as const) } as const, LogArchetypePriceUpdate: { signature: "394DCE76AD1D7F179B8F9E11E9CDC3BF972D9BBDB577EDCDC5110FAE56AE9327", tagged: (eventId: Buffer, archetypeAddress: string, price: number) => ({ name: "LogArchetypePriceUpdate", payload: { eventId: eventId, archetypeAddress: archetypeAddress, price: price } as const } as const) } as const, LogArchetypeSuccessorUpdate: { signature: "0D31ADE3B1C51346CB72ACD198B6D68C4C7DA023E4CE413902926AB3C3E07AC7", tagged: (eventId: Buffer, archetypeAddress: string, successor: string) => ({ name: "LogArchetypeSuccessorUpdate", payload: { eventId: eventId, archetypeAddress: archetypeAddress, successor: successor } as const } as const) } as const, LogGoverningArchetypeUpdate: { signature: "61347B45AA3A6B34E2C936DE09333C251CA75E2D31E072B401016375F58525CC", tagged: (eventId: Buffer, archetypeAddress: string, governingArchetypeAddress: string) => ({ name: "LogGoverningArchetypeUpdate", payload: { eventId: eventId, archetypeAddress: archetypeAddress, governingArchetypeAddress: governingArchetypeAddress } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, EVENT_ID_ARCHETYPES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARCHETYPES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARCHETYPES();
                });
            }, EVENT_ID_ARCHETYPE_DOCUMENTS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARCHETYPE_DOCUMENTS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARCHETYPE_DOCUMENTS();
                });
            }, EVENT_ID_ARCHETYPE_JURISDICTIONS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARCHETYPE_JURISDICTIONS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARCHETYPE_JURISDICTIONS();
                });
            }, EVENT_ID_ARCHETYPE_PARAMETERS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARCHETYPE_PARAMETERS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARCHETYPE_PARAMETERS();
                });
            }, EVENT_ID_GOVERNING_ARCHETYPES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_GOVERNING_ARCHETYPES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_GOVERNING_ARCHETYPES();
                });
            }, ROLE_ID_OBJECT_ADMIN(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ROLE_ID_OBJECT_ADMIN();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ROLE_ID_OBJECT_ADMIN();
                });
            }, ROLE_ID_OWNER(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ROLE_ID_OWNER();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ROLE_ID_OWNER();
                });
            }, activate(call = defaultCall): Promise<void> {
                const data = encode(client).activate();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).activate();
                });
            }, addDocument(_fileReference: string, call = defaultCall): Promise<void> {
                const data = encode(client).addDocument(_fileReference);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addDocument();
                });
            }, addJurisdiction(_country: Buffer, _region: Buffer, call = defaultCall): Promise<{
                error: number;
                key: Buffer;
            }> {
                const data = encode(client).addJurisdiction(_country, _region);
                return call<{
                    error: number;
                    key: Buffer;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addJurisdiction();
                });
            }, addParameter(_parameterType: number, _parameterName: Buffer, call = defaultCall): Promise<{
                error: number;
                position: number;
            }> {
                const data = encode(client).addParameter(_parameterType, _parameterName);
                return call<{
                    error: number;
                    position: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addParameter();
                });
            }, clearDocuments(call = defaultCall): Promise<void> {
                const data = encode(client).clearDocuments();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).clearDocuments();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, createPermission(_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean, call = defaultCall): Promise<void> {
                const data = encode(client).createPermission(_permission, _multiHolder, _revocable, _transferable);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createPermission();
                });
            }, deactivate(call = defaultCall): Promise<void> {
                const data = encode(client).deactivate();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).deactivate();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getAuthor(call = defaultCall): Promise<{
                author: string;
            }> {
                const data = encode(client).getAuthor();
                return call<{
                    author: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAuthor();
                });
            }, getDocument(_key: Buffer, call = defaultCall): Promise<{
                fileReference: string;
            }> {
                const data = encode(client).getDocument(_key);
                return call<{
                    fileReference: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDocument();
                });
            }, getDocumentKeyAtIndex(_index: number, call = defaultCall): Promise<{
                key: Buffer;
            }> {
                const data = encode(client).getDocumentKeyAtIndex(_index);
                return call<{
                    key: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDocumentKeyAtIndex();
                });
            }, getExecutionProcessDefinition(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getExecutionProcessDefinition();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getExecutionProcessDefinition();
                });
            }, getFormationProcessDefinition(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getFormationProcessDefinition();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getFormationProcessDefinition();
                });
            }, getGoverningArchetypeAtIndex(_index: number, call = defaultCall): Promise<{
                archetypeAddress: string;
            }> {
                const data = encode(client).getGoverningArchetypeAtIndex(_index);
                return call<{
                    archetypeAddress: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getGoverningArchetypeAtIndex();
                });
            }, getGoverningArchetypes(call = defaultCall): Promise<[
                string[]
            ]> {
                const data = encode(client).getGoverningArchetypes();
                return call<[
                    string[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getGoverningArchetypes();
                });
            }, getHolder(_permission: Buffer, _index: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getHolder(_permission, _index);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getHolder();
                });
            }, getJurisdictionAtIndex(_index: number, call = defaultCall): Promise<{
                error: number;
                key: Buffer;
            }> {
                const data = encode(client).getJurisdictionAtIndex(_index);
                return call<{
                    error: number;
                    key: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getJurisdictionAtIndex();
                });
            }, getJurisdictionData(_key: Buffer, call = defaultCall): Promise<{
                country: Buffer;
                region: Buffer;
            }> {
                const data = encode(client).getJurisdictionData(_key);
                return call<{
                    country: Buffer;
                    region: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getJurisdictionData();
                });
            }, getNumberOfDocuments(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfDocuments();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfDocuments();
                });
            }, getNumberOfGoverningArchetypes(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfGoverningArchetypes();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfGoverningArchetypes();
                });
            }, getNumberOfJurisdictions(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfJurisdictions();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfJurisdictions();
                });
            }, getNumberOfParameters(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfParameters();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfParameters();
                });
            }, getOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getOwner();
                });
            }, getParameterAtIndex(_index: number, call = defaultCall): Promise<{
                parameter: Buffer;
            }> {
                const data = encode(client).getParameterAtIndex(_index);
                return call<{
                    parameter: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getParameterAtIndex();
                });
            }, getParameterDetails(_parameter: Buffer, call = defaultCall): Promise<{
                position: number;
                parameterType: number;
            }> {
                const data = encode(client).getParameterDetails(_parameter);
                return call<{
                    position: number;
                    parameterType: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getParameterDetails();
                });
            }, getPermissionDetails(_permission: Buffer, call = defaultCall): Promise<{
                exists: boolean;
                multiHolder: boolean;
                revocable: boolean;
                transferable: boolean;
                holderSize: number;
            }> {
                const data = encode(client).getPermissionDetails(_permission);
                return call<{
                    exists: boolean;
                    multiHolder: boolean;
                    revocable: boolean;
                    transferable: boolean;
                    holderSize: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPermissionDetails();
                });
            }, getPrice(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getPrice();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getPrice();
                });
            }, getSuccessor(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSuccessor();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSuccessor();
                });
            }, grantPermission(_permission: Buffer, _newHolder: string, call = defaultCall): Promise<void> {
                const data = encode(client).grantPermission(_permission, _newHolder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).grantPermission();
                });
            }, hasPermission(_permission: Buffer, _holder: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).hasPermission(_permission, _holder);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).hasPermission();
                });
            }, initialize(_price: number, _isPrivate: boolean, _active: boolean, _author: string, _owner: string, _formationProcess: string, _executionProcess: string, _governingArchetypes: string[], call = defaultCall): Promise<void> {
                const data = encode(client).initialize[0](_price, _isPrivate, _active, _author, _owner, _formationProcess, _executionProcess, _governingArchetypes);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initialize[0]();
                });
            }, initialize_1(_price: number, _isPrivate: boolean, _active: boolean, _author: string, _formationProcess: string, _executionProcess: string, _governingArchetypes: string[], call = defaultCall): Promise<void> {
                const data = encode(client).initialize[1](_price, _isPrivate, _active, _author, _formationProcess, _executionProcess, _governingArchetypes);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initialize[1]();
                });
            }, initializeObjectAdministrator(_admin: string, call = defaultCall): Promise<void> {
                const data = encode(client).initializeObjectAdministrator(_admin);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initializeObjectAdministrator();
                });
            }, isActive(call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).isActive();
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).isActive();
                });
            }, isPrivate(call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).isPrivate();
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).isPrivate();
                });
            }, revokePermission(_permission: Buffer, _holder: string, call = defaultCall): Promise<void> {
                const data = encode(client).revokePermission(_permission, _holder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).revokePermission();
                });
            }, setPrice(_price: number, call = defaultCall): Promise<void> {
                const data = encode(client).setPrice(_price);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setPrice();
                });
            }, setSuccessor(_successor: string, call = defaultCall): Promise<void> {
                const data = encode(client).setSuccessor(_successor);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setSuccessor();
                });
            }, transferPermission(_permission: Buffer, _newHolder: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferPermission(_permission, _newHolder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferPermission();
                });
            }, upgradeOwnerPermission(_owner: string, call = defaultCall): Promise<void> {
                const data = encode(client).upgradeOwnerPermission(_owner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).upgradeOwnerPermission();
                });
            } } as const, listeners: { LogArchetypeActivation(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                active: boolean;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["E4AC67EBCCB90B06B7F90867A2CBAF0E103465CBB9457C569BBF04B46876A8CD"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeActivation()); }, start, end); }, LogArchetypeCreation(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                price: number;
                author: string;
                active: boolean;
                isPrivate: boolean;
                successor: string;
                formationProcessDefinition: string;
                executionProcessDefinition: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["5E1AA3806109E460AD3CF9F44367A1C7B3722DF2A38F7088121F443FD3B0DC7C"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeCreation()); }, start, end); }, LogArchetypeCreation_v1_1_0(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                price: number;
                author: string;
                owner: string;
                active: boolean;
                isPrivate: boolean;
                successor: string;
                formationProcessDefinition: string;
                executionProcessDefinition: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["ADBF13CDB6C80F311F6DD8311F0B575E49E5939DEF1FB02ECD69349BB1116ECE"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeCreation_v1_1_0()); }, start, end); }, LogArchetypeDocumentRemoval(callback: (err?: Error, event?: {
                eventId: Buffer;
                __DELETE__: number;
                archetypeAddress: string;
                documentKey: Buffer;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["A2456C134CC9E5250C388D2650D30D6F21B5529345D0C0DBCB829ECE97670C1A"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeDocumentRemoval()); }, start, end); }, LogArchetypeDocumentUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                documentKey: Buffer;
                documentReference: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["F9EE5F44FF582EA8A3C432AB7C7E81B0C8B158ABB4DD2BDFDD507BBBA85D3DE5"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeDocumentUpdate()); }, start, end); }, LogArchetypeJurisdictionUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                country: Buffer;
                region: Buffer;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["7B43ADFD44FB34CCDA45CB66697BADA72F644D3BA1FE522FBDAAE461DB41B371"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeJurisdictionUpdate()); }, start, end); }, LogArchetypeOwnerUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                owner: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["A89ADDD6BE29302BCF6DFBC1BCE137479D58502C5A88DF66AF0C8D0A30CEA906"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeOwnerUpdate()); }, start, end); }, LogArchetypeParameterUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                parameterName: Buffer;
                parameterType: number;
                position: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["ED6ECB67E04911432D92AE0346B39AC3E380A22A9D6222FC7A5501BF122C6CA0"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeParameterUpdate()); }, start, end); }, LogArchetypePriceUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                price: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["394DCE76AD1D7F179B8F9E11E9CDC3BF972D9BBDB577EDCDC5110FAE56AE9327"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypePriceUpdate()); }, start, end); }, LogArchetypeSuccessorUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                successor: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["0D31ADE3B1C51346CB72ACD198B6D68C4C7DA023E4CE413902926AB3C3E07AC7"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogArchetypeSuccessorUpdate()); }, start, end); }, LogGoverningArchetypeUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                archetypeAddress: string;
                governingArchetypeAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["61347B45AA3A6B34E2C936DE09333C251CA75E2D31E072B401016375F58525CC"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogGoverningArchetypeUpdate()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        EVENT_ID_ARCHETYPES: () => { return codec.encodeFunctionData("378AFC8C"); },
        EVENT_ID_ARCHETYPE_DOCUMENTS: () => { return codec.encodeFunctionData("E437393D"); },
        EVENT_ID_ARCHETYPE_JURISDICTIONS: () => { return codec.encodeFunctionData("E5B18101"); },
        EVENT_ID_ARCHETYPE_PARAMETERS: () => { return codec.encodeFunctionData("CDAF8190"); },
        EVENT_ID_GOVERNING_ARCHETYPES: () => { return codec.encodeFunctionData("B00B8A1A"); },
        ROLE_ID_OBJECT_ADMIN: () => { return codec.encodeFunctionData("E6F936F9"); },
        ROLE_ID_OWNER: () => { return codec.encodeFunctionData("9090FD85"); },
        activate: () => { return codec.encodeFunctionData("0F15F4C0"); },
        addDocument: (_fileReference: string) => { return codec.encodeFunctionData("F740E045", _fileReference); },
        addJurisdiction: (_country: Buffer, _region: Buffer) => { return codec.encodeFunctionData("083D0918", _country, _region); },
        addParameter: (_parameterType: number, _parameterName: Buffer) => { return codec.encodeFunctionData("6F903388", _parameterType, _parameterName); },
        clearDocuments: () => { return codec.encodeFunctionData("330C890B"); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        createPermission: (_permission: Buffer, _multiHolder: boolean, _revocable: boolean, _transferable: boolean) => { return codec.encodeFunctionData("94FEB152", _permission, _multiHolder, _revocable, _transferable); },
        deactivate: () => { return codec.encodeFunctionData("51B42B00"); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getAuthor: () => { return codec.encodeFunctionData("A5FAA125"); },
        getDocument: (_key: Buffer) => { return codec.encodeFunctionData("B10D6B41", _key); },
        getDocumentKeyAtIndex: (_index: number) => { return codec.encodeFunctionData("54B3B33E", _index); },
        getExecutionProcessDefinition: () => { return codec.encodeFunctionData("AA26F68B"); },
        getFormationProcessDefinition: () => { return codec.encodeFunctionData("1EA7A8D3"); },
        getGoverningArchetypeAtIndex: (_index: number) => { return codec.encodeFunctionData("B23115FC", _index); },
        getGoverningArchetypes: () => { return codec.encodeFunctionData("A1DA76D9"); },
        getHolder: (_permission: Buffer, _index: number) => { return codec.encodeFunctionData("141B422A", _permission, _index); },
        getJurisdictionAtIndex: (_index: number) => { return codec.encodeFunctionData("D9B860D6", _index); },
        getJurisdictionData: (_key: Buffer) => { return codec.encodeFunctionData("714BC1FF", _key); },
        getNumberOfDocuments: () => { return codec.encodeFunctionData("B7B82495"); },
        getNumberOfGoverningArchetypes: () => { return codec.encodeFunctionData("B428F075"); },
        getNumberOfJurisdictions: () => { return codec.encodeFunctionData("20C225CE"); },
        getNumberOfParameters: () => { return codec.encodeFunctionData("9B70202E"); },
        getOwner: () => { return codec.encodeFunctionData("893D20E8"); },
        getParameterAtIndex: (_index: number) => { return codec.encodeFunctionData("EB246075", _index); },
        getParameterDetails: (_parameter: Buffer) => { return codec.encodeFunctionData("37CC95B5", _parameter); },
        getPermissionDetails: (_permission: Buffer) => { return codec.encodeFunctionData("63A84C04", _permission); },
        getPrice: () => { return codec.encodeFunctionData("98D5FDCA"); },
        getSuccessor: () => { return codec.encodeFunctionData("D9BCCBF7"); },
        grantPermission: (_permission: Buffer, _newHolder: string) => { return codec.encodeFunctionData("BC586456", _permission, _newHolder); },
        hasPermission: (_permission: Buffer, _holder: string) => { return codec.encodeFunctionData("28545C0D", _permission, _holder); },
        initialize: [(_price: number, _isPrivate: boolean, _active: boolean, _author: string, _owner: string, _formationProcess: string, _executionProcess: string, _governingArchetypes: string[]) => { return codec.encodeFunctionData("36D4BFCA", _price, _isPrivate, _active, _author, _owner, _formationProcess, _executionProcess, _governingArchetypes); }, (_price: number, _isPrivate: boolean, _active: boolean, _author: string, _formationProcess: string, _executionProcess: string, _governingArchetypes: string[]) => { return codec.encodeFunctionData("CB8B5420", _price, _isPrivate, _active, _author, _formationProcess, _executionProcess, _governingArchetypes); }] as const,
        initializeObjectAdministrator: (_admin: string) => { return codec.encodeFunctionData("859360F5", _admin); },
        isActive: () => { return codec.encodeFunctionData("22F3E2D4"); },
        isPrivate: () => { return codec.encodeFunctionData("FAFF660E"); },
        revokePermission: (_permission: Buffer, _holder: string) => { return codec.encodeFunctionData("A6A8F17B", _permission, _holder); },
        setPrice: (_price: number) => { return codec.encodeFunctionData("91B7F5ED", _price); },
        setSuccessor: (_successor: string) => { return codec.encodeFunctionData("10E5BFF8", _successor); },
        transferPermission: (_permission: Buffer, _newHolder: string) => { return codec.encodeFunctionData("EC9CB2CE", _permission, _newHolder); },
        upgradeOwnerPermission: (_owner: string) => { return codec.encodeFunctionData("C1664C8D", _owner); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogArchetypeActivation: (): {
            eventId: Buffer;
            archetypeAddress: string;
            active: boolean;
        } => {
            const [eventId, archetypeAddress, active] = codec.decodeEventLog ("E4AC67EBCCB90B06B7F90867A2CBAF0E103465CBB9457C569BBF04B46876A8CD", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, active: active };
        },
        LogArchetypeCreation: (): {
            eventId: Buffer;
            archetypeAddress: string;
            price: number;
            author: string;
            active: boolean;
            isPrivate: boolean;
            successor: string;
            formationProcessDefinition: string;
            executionProcessDefinition: string;
        } => {
            const [eventId, archetypeAddress, price, author, active, isPrivate, successor, formationProcessDefinition, executionProcessDefinition] = codec.decodeEventLog ("5E1AA3806109E460AD3CF9F44367A1C7B3722DF2A38F7088121F443FD3B0DC7C", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, price: price, author: author, active: active, isPrivate: isPrivate, successor: successor, formationProcessDefinition: formationProcessDefinition, executionProcessDefinition: executionProcessDefinition };
        },
        LogArchetypeCreation_v1_1_0: (): {
            eventId: Buffer;
            archetypeAddress: string;
            price: number;
            author: string;
            owner: string;
            active: boolean;
            isPrivate: boolean;
            successor: string;
            formationProcessDefinition: string;
            executionProcessDefinition: string;
        } => {
            const [eventId, archetypeAddress, price, author, owner, active, isPrivate, successor, formationProcessDefinition, executionProcessDefinition] = codec.decodeEventLog ("ADBF13CDB6C80F311F6DD8311F0B575E49E5939DEF1FB02ECD69349BB1116ECE", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, price: price, author: author, owner: owner, active: active, isPrivate: isPrivate, successor: successor, formationProcessDefinition: formationProcessDefinition, executionProcessDefinition: executionProcessDefinition };
        },
        LogArchetypeDocumentRemoval: (): {
            eventId: Buffer;
            __DELETE__: number;
            archetypeAddress: string;
            documentKey: Buffer;
        } => {
            const [eventId, __DELETE__, archetypeAddress, documentKey] = codec.decodeEventLog ("A2456C134CC9E5250C388D2650D30D6F21B5529345D0C0DBCB829ECE97670C1A", data, topics);
            return { eventId: eventId, __DELETE__: __DELETE__, archetypeAddress: archetypeAddress, documentKey: documentKey };
        },
        LogArchetypeDocumentUpdate: (): {
            eventId: Buffer;
            archetypeAddress: string;
            documentKey: Buffer;
            documentReference: string;
        } => {
            const [eventId, archetypeAddress, documentKey, documentReference] = codec.decodeEventLog ("F9EE5F44FF582EA8A3C432AB7C7E81B0C8B158ABB4DD2BDFDD507BBBA85D3DE5", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, documentKey: documentKey, documentReference: documentReference };
        },
        LogArchetypeJurisdictionUpdate: (): {
            eventId: Buffer;
            archetypeAddress: string;
            country: Buffer;
            region: Buffer;
        } => {
            const [eventId, archetypeAddress, country, region] = codec.decodeEventLog ("7B43ADFD44FB34CCDA45CB66697BADA72F644D3BA1FE522FBDAAE461DB41B371", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, country: country, region: region };
        },
        LogArchetypeOwnerUpdate: (): {
            eventId: Buffer;
            archetypeAddress: string;
            owner: string;
        } => {
            const [eventId, archetypeAddress, owner] = codec.decodeEventLog ("A89ADDD6BE29302BCF6DFBC1BCE137479D58502C5A88DF66AF0C8D0A30CEA906", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, owner: owner };
        },
        LogArchetypeParameterUpdate: (): {
            eventId: Buffer;
            archetypeAddress: string;
            parameterName: Buffer;
            parameterType: number;
            position: number;
        } => {
            const [eventId, archetypeAddress, parameterName, parameterType, position] = codec.decodeEventLog ("ED6ECB67E04911432D92AE0346B39AC3E380A22A9D6222FC7A5501BF122C6CA0", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, parameterName: parameterName, parameterType: parameterType, position: position };
        },
        LogArchetypePriceUpdate: (): {
            eventId: Buffer;
            archetypeAddress: string;
            price: number;
        } => {
            const [eventId, archetypeAddress, price] = codec.decodeEventLog ("394DCE76AD1D7F179B8F9E11E9CDC3BF972D9BBDB577EDCDC5110FAE56AE9327", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, price: price };
        },
        LogArchetypeSuccessorUpdate: (): {
            eventId: Buffer;
            archetypeAddress: string;
            successor: string;
        } => {
            const [eventId, archetypeAddress, successor] = codec.decodeEventLog ("0D31ADE3B1C51346CB72ACD198B6D68C4C7DA023E4CE413902926AB3C3E07AC7", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, successor: successor };
        },
        LogGoverningArchetypeUpdate: (): {
            eventId: Buffer;
            archetypeAddress: string;
            governingArchetypeAddress: string;
        } => {
            const [eventId, archetypeAddress, governingArchetypeAddress] = codec.decodeEventLog ("61347B45AA3A6B34E2C936DE09333C251CA75E2D31E072B401016375F58525CC", data, topics);
            return { eventId: eventId, archetypeAddress: archetypeAddress, governingArchetypeAddress: governingArchetypeAddress };
        },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        EVENT_ID_ARCHETYPES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("378AFC8C", data); },
        EVENT_ID_ARCHETYPE_DOCUMENTS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E437393D", data); },
        EVENT_ID_ARCHETYPE_JURISDICTIONS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E5B18101", data); },
        EVENT_ID_ARCHETYPE_PARAMETERS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("CDAF8190", data); },
        EVENT_ID_GOVERNING_ARCHETYPES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("B00B8A1A", data); },
        ROLE_ID_OBJECT_ADMIN: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E6F936F9", data); },
        ROLE_ID_OWNER: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("9090FD85", data); },
        activate: (): void => { return; },
        addDocument: (): void => { return; },
        addJurisdiction: (): {
            error: number;
            key: Buffer;
        } => {
            const [error, key] = codec.decodeFunctionResult ("083D0918", data);
            return { error: error, key: key };
        },
        addParameter: (): {
            error: number;
            position: number;
        } => {
            const [error, position] = codec.decodeFunctionResult ("6F903388", data);
            return { error: error, position: position };
        },
        clearDocuments: (): void => { return; },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        createPermission: (): void => { return; },
        deactivate: (): void => { return; },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getAuthor: (): {
            author: string;
        } => {
            const [author] = codec.decodeFunctionResult ("A5FAA125", data);
            return { author: author };
        },
        getDocument: (): {
            fileReference: string;
        } => {
            const [fileReference] = codec.decodeFunctionResult ("B10D6B41", data);
            return { fileReference: fileReference };
        },
        getDocumentKeyAtIndex: (): {
            key: Buffer;
        } => {
            const [key] = codec.decodeFunctionResult ("54B3B33E", data);
            return { key: key };
        },
        getExecutionProcessDefinition: (): [
            string
        ] => { return codec.decodeFunctionResult ("AA26F68B", data); },
        getFormationProcessDefinition: (): [
            string
        ] => { return codec.decodeFunctionResult ("1EA7A8D3", data); },
        getGoverningArchetypeAtIndex: (): {
            archetypeAddress: string;
        } => {
            const [archetypeAddress] = codec.decodeFunctionResult ("B23115FC", data);
            return { archetypeAddress: archetypeAddress };
        },
        getGoverningArchetypes: (): [
            string[]
        ] => { return codec.decodeFunctionResult ("A1DA76D9", data); },
        getHolder: (): [
            string
        ] => { return codec.decodeFunctionResult ("141B422A", data); },
        getJurisdictionAtIndex: (): {
            error: number;
            key: Buffer;
        } => {
            const [error, key] = codec.decodeFunctionResult ("D9B860D6", data);
            return { error: error, key: key };
        },
        getJurisdictionData: (): {
            country: Buffer;
            region: Buffer;
        } => {
            const [country, region] = codec.decodeFunctionResult ("714BC1FF", data);
            return { country: country, region: region };
        },
        getNumberOfDocuments: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("B7B82495", data);
            return { size: size };
        },
        getNumberOfGoverningArchetypes: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("B428F075", data);
            return { size: size };
        },
        getNumberOfJurisdictions: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("20C225CE", data);
            return { size: size };
        },
        getNumberOfParameters: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("9B70202E", data);
            return { size: size };
        },
        getOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("893D20E8", data); },
        getParameterAtIndex: (): {
            parameter: Buffer;
        } => {
            const [parameter] = codec.decodeFunctionResult ("EB246075", data);
            return { parameter: parameter };
        },
        getParameterDetails: (): {
            position: number;
            parameterType: number;
        } => {
            const [position, parameterType] = codec.decodeFunctionResult ("37CC95B5", data);
            return { position: position, parameterType: parameterType };
        },
        getPermissionDetails: (): {
            exists: boolean;
            multiHolder: boolean;
            revocable: boolean;
            transferable: boolean;
            holderSize: number;
        } => {
            const [exists, multiHolder, revocable, transferable, holderSize] = codec.decodeFunctionResult ("63A84C04", data);
            return { exists: exists, multiHolder: multiHolder, revocable: revocable, transferable: transferable, holderSize: holderSize };
        },
        getPrice: (): [
            number
        ] => { return codec.decodeFunctionResult ("98D5FDCA", data); },
        getSuccessor: (): [
            string
        ] => { return codec.decodeFunctionResult ("D9BCCBF7", data); },
        grantPermission: (): void => { return; },
        hasPermission: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("28545C0D", data); },
        initialize: [(): void => { return; }, (): void => { return; }] as const,
        initializeObjectAdministrator: (): void => { return; },
        isActive: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("22F3E2D4", data); },
        isPrivate: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("FAFF660E", data); },
        revokePermission: (): void => { return; },
        setPrice: (): void => { return; },
        setSuccessor: (): void => { return; },
        transferPermission: (): void => { return; },
        upgradeOwnerPermission: (): void => { return; }
    }; };
}