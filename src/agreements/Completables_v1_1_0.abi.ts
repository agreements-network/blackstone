//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module CompletableOptions {
    export const contactName = "CompletableOptions";
    export const abi = '[{"constant":true,"inputs":[],"name":"COMPLETE_ON_RATIFICATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"DEFAULT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"options","type":"uint256"},{"internalType":"uint256","name":"option","type":"uint256"}],"name":"enabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"}]';
    export const bytecode = '608060405234801561001057600080fd5b50610114806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630a25dea9146041578063b0ca898814605d578063bf9a4b86146079575b600080fd5b604760c6565b6040518082815260200191505060405180910390f35b606360cb565b6040518082815260200191505060405180910390f35b60ac60048036036040811015608d57600080fd5b81019080803590602001909291908035906020019092919050505060d0565b604051808215151515815260200191505060405180910390f35b600081565b600181565b6000808284161190509291505056fea265627a7a723158209f04fe1136d9fae97fd9b6050920a91f7a6ac43c9440366d92843aff940c87c264736f6c63430005110032';
    export function deploy(client: Provider): Promise<string> {
        const codec = client.contractCodec(abi);
        let linkedBytecode = bytecode;
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        const payload = client.payload(data);
        return client.deploy(payload);
    }
    export async function deployContract(client: Provider): Promise<Contract> { const address = await deploy(client); return contract(client, address); }
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { COMPLETE_ON_RATIFICATION(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).COMPLETE_ON_RATIFICATION();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).COMPLETE_ON_RATIFICATION();
                });
            }, DEFAULT(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).DEFAULT();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DEFAULT();
                });
            }, enabled(options: number, option: number, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).enabled(options, option);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).enabled();
                });
            } } as const } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        COMPLETE_ON_RATIFICATION: () => { return codec.encodeFunctionData("B0CA8988"); },
        DEFAULT: () => { return codec.encodeFunctionData("0A25DEA9"); },
        enabled: (options: number, option: number) => { return codec.encodeFunctionData("BF9A4B86", options, option); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        COMPLETE_ON_RATIFICATION: (): [
            number
        ] => { return codec.decodeFunctionResult ("B0CA8988", data); },
        DEFAULT: (): [
            number
        ] => { return codec.decodeFunctionResult ("0A25DEA9", data); },
        enabled: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("BF9A4B86", data); }
    }; };
}
export module Completables {
    export const contactName = "Completables";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"franchisee","type":"address"},{"indexed":false,"internalType":"bool","name":"ratified","type":"bool"},{"indexed":false,"internalType":"int256","name":"timestamp","type":"int256"}],"name":"LogAgreementCompletableAttest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"int256","name":"timestamp","type":"int256"}],"name":"LogAgreementCompletableBegin","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"ratified","type":"bool"},{"indexed":false,"internalType":"int256","name":"timestamp","type":"int256"}],"name":"LogAgreementCompletableComplete","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"string","name":"namespace","type":"string"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"address","name":"controller","type":"address"},{"indexed":false,"internalType":"uint256","name":"threshold","type":"uint256"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"}],"name":"LogAgreementCompletableInit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"agreementAddress","type":"address"},{"indexed":false,"internalType":"address","name":"franchisee","type":"address"}],"name":"LogAgreementCompletableInitFranchisee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogUpgradeOwnerChanged","type":"event"},{"constant":true,"inputs":[],"name":"COMPLETE_ON_RATIFICATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"DEFAULT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_Upgradeable","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"internalType":"int256","name":"timestamp","type":"int256"}],"name":"attest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"internalType":"int256","name":"timestamp","type":"int256"}],"name":"begin","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"internalType":"int256","name":"timestamp","type":"int256"}],"name":"complete","outputs":[{"internalType":"bool","name":"isRatified","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"options","type":"uint256"},{"internalType":"uint256","name":"option","type":"uint256"}],"name":"enabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpgradeOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"intervalId","type":"bytes32"},{"internalType":"string","name":"namespace","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"agreementAddress","type":"address"},{"internalType":"address[]","name":"franchisees","type":"address[]"},{"internalType":"uint256","name":"threshold","type":"uint256"},{"internalType":"uint256","name":"options","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"}],"name":"init","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"migrateFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"migrateTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"intervalId","type":"bytes32"}],"name":"ratifiedAt","outputs":[{"internalType":"int256","name":"ratified","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferUpgradeOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_successor","type":"address"}],"name":"upgrade","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    export const bytecode = '6080604052600180600060016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260016000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff16021790555081600180600381106200009957fe5b602091828204019190066101000a81548160ff021916908360ff160217905550806001600260038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e2829000000000000000000000000815250601401905060405160208183030381529060405280519060200120620001e160201b60201c565b50505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001db60405160200180807f7570677261646528616464726573732900000000000000000000000000000000815250601001905060405160208183030381529060405280519060200120620001e160201b60201c565b620002ce565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000262576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062006f1f602f913960400191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b616c4180620002de6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806378bc0b0d116100b8578063b771a3891161007c578063b771a3891461072c578063bf9a4b861461077c578063cfbec2b3146107cc578063e10533c61461081c578063e728487914610878578063f085f6dd146108c257610142565b806378bc0b0d146105b35780639676a9911461062c578063ac83ec7c1461066e578063b0ca8988146106b2578063b21c815f146106d057610142565b80634ddaf8f21161010a5780634ddaf8f2146102ba57806357e0ebca146103165780635c0301381461033a5780635d7d4d1114610392578063756b2e6c146105495780637589adb71461058f57610142565b806301ffc9a7146101475780630900f010146101ac5780630a25dea91461020857806327fe932f1461022657806335657e681461025e575b600080fd5b6101926004803603602081101561015d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108e6565b604051808215151515815260200191505060405180910390f35b6101ee600480360360208110156101c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094d565b604051808215151515815260200191505060405180910390f35b610210610de2565b6040518082815260200191505060405180910390f35b61025c6004803603604081101561023c57600080fd5b810190808035906020019092919080359060200190929190505050610de7565b005b6102a06004803603602081101561027457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611851565b604051808215151515815260200191505060405180910390f35b6102fc600480360360208110156102d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061185c565b604051808215151515815260200191505060405180910390f35b61031e611867565b604051808260ff1660ff16815260200191505060405180910390f35b61037c6004803603602081101561035057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611892565b6040518082815260200191505060405180910390f35b61054760048036036101008110156103a957600080fd5b8101908080359060200190929190803590602001906401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b90919293919293908035906020019064010000000081111561042557600080fd5b82018360208201111561043757600080fd5b8035906020019184600183028401116401000000008311171561045957600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561049a57600080fd5b8201836020820111156104ac57600080fd5b803590602001918460208302840111640100000000831117156104ce57600080fd5b909192939192939080359060200190929190803590602001909291908035906020019064010000000081111561050357600080fd5b82018360208201111561051557600080fd5b8035906020019184600183028401116401000000008311171561053757600080fd5b909192939192939050505061198e565b005b61055161245b565b6040518082600360200280838360005b8381101561057c578082015181840152602081019050610561565b5050505090500191505060405180910390f35b6105976124cc565b604051808260ff1660ff16815260200191505060405180910390f35b610616600480360360608110156105c957600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f82011690508083019250505050505091929192905050506124f6565b6040518082815260200191505060405180910390f35b6106586004803603602081101561064257600080fd5b810190808035906020019092919050505061256c565b6040518082815260200191505060405180910390f35b6106b06004803603602081101561068457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061286f565b005b6106ba612c70565b6040518082815260200191505060405180910390f35b6106d8612c75565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b6107626004803603604081101561074257600080fd5b810190808035906020019092919080359060200190929190505050612cbf565b604051808215151515815260200191505060405180910390f35b6107b26004803603604081101561079257600080fd5b810190808035906020019092919080359060200190929190505050614785565b604051808215151515815260200191505060405180910390f35b610802600480360360408110156107e257600080fd5b810190808035906020019092919080359060200190929190505050614794565b604051808215151515815260200191505060405180910390f35b610824615710565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b61088061575a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108ca615784565b604051808260ff1660ff16815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156109c36157af565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610a24578082015181840152602081019050610a09565b50505050905090810190601f168015610a515780820380516001836020036101000a031916815260200191505b5084810383526023815260200180616b9d6023913960400184810382526027815260200180616b01602791396040019550505050505060006040518083038186803b158015610a9f57600080fd5b505af4158015610ab3573d6000803e3d6000fd5b505050508173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6001610add84611892565b12610ae66157ec565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610b47578082015181840152602081019050610b2c565b50505050905090810190601f168015610b745780820380516001836020036101000a031916815260200191505b5084810383526029815260200180616b28602991396040018481038252604b815260200180616a18604b91396060019550505050505060006040518083038186803b158015610bc257600080fd5b505af4158015610bd6573d6000803e3d6000fd5b50505050610be38361185c565b8015610ca557508273ffffffffffffffffffffffffffffffffffffffff166335657e68306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b505050506040513d6020811015610c9357600080fd5b81019080805190602001909291905050505b915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8315610ccb615829565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610d2c578082015181840152602081019050610d11565b50505050905090810190601f168015610d595780820380516001836020036101000a031916815260200191505b508481038352601b8152602001807f41627374726163745570677261646561626c652e75706772616465000000000081525060200184810382526040815260200180616ac1604091396040019550505050505060006040518083038186803b158015610dc457600080fd5b505af4158015610dd8573d6000803e3d6000fd5b5050505050919050565b600081565b8160036000828152602001908152602001600020600a0160009054906101000a900460ff1661107957610fd88173__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015610e6457600080fd5b505af4158015610e78573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ea257600080fd5b8101908080516040519392919084640100000000821115610ec257600080fd5b83820191506020820185811115610ed857600080fd5b8251866001820283011164010000000082111715610ef557600080fd5b8083526020830192505050908051906020019080838360005b83811015610f29578082015181840152602081019050610f0e565b50505050905090810190601f168015610f565780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600f81526020017f20646f6573206e6f7420657869737400000000000000000000000000000000008152506040518060400160405280600c81526020017f436f6d706c657461626c652000000000000000000000000000000000000000008152506158669092919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561103e578082015181840152602081019050611023565b50505050905090810190601f16801561106b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b823073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561111857503373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561171957611678604051806060016040528060268152602001616b51602691393373ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b1580156111cc57600080fd5b505af41580156111e0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561120a57600080fd5b810190808051604051939291908464010000000082111561122a57600080fd5b8382019150602082018581111561124057600080fd5b825186600182028301116401000000008211171561125d57600080fd5b8083526020830192505050908051906020019080838360005b83811015611291578082015181840152602081019050611276565b50505050905090810190601f1680156112be5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601181526020017f20286d73672e73656e6465722920213d200000000000000000000000000000008152506003600086815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b1580156113c457600080fd5b505af41580156113d8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561140257600080fd5b810190808051604051939291908464010000000082111561142257600080fd5b8382019150602082018581111561143857600080fd5b825186600182028301116401000000008211171561145557600080fd5b8083526020830192505050908051906020019080838360005b8381101561148957808201518184015260208101905061146e565b50505050905090810190601f1680156114b65780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600e81526020017f2028636f6e74726f6c6c657229200000000000000000000000000000000000008152506040518060400160405280601181526020017f20666f7220436f6d706c657461626c65200000000000000000000000000000008152508773__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561157a57600080fd5b505af415801561158e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156115b857600080fd5b81019080805160405193929190846401000000008211156115d857600080fd5b838201915060208201858111156115ee57600080fd5b825186600182028301116401000000008211171561160b57600080fd5b8083526020830192505050908051906020019080838360005b8381101561163f578082015181840152602081019050611624565b50505050905090810190601f16801561166c5780820380516001836020036101000a031916815260200191505b50604052505050615982565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116de5780820151818401526020810190506116c3565b50505050905090810190601f16801561170b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b600060036000868152602001908152602001600020600801541461173c5761184b565b600060036000868152602001908152602001600020600701541461175f5761184b565b600083141561176c574292505b826003600086815260200190815260200160002060070181905550837f414e3a2f2f61677265656d656e742d636f6d706c657461626c650000000000007f9ef9a150f35a9fb2b9135982e80db37ba0c87d498c150940828d07735fe2fa056003600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a35b50505050565b600060019050919050565b600060019050919050565b6000600160006003811061187757fe5b602091828204019190069054906101000a900460ff16905090565b600061198760016003806020026040519081016040528092919082600380156118f6576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116118bf5790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561194157600080fd5b505afa158015611955573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250606081101561197a57600080fd5b8101908091905050615bee565b9050919050565b600360008d8152602001908152602001600020600a0160009054906101000a900460ff1615611c1657611b756040518060400160405280600c81526020017f436f6d706c657461626c652000000000000000000000000000000000000000008152508d73__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015611a4157600080fd5b505af4158015611a55573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611a7f57600080fd5b8101908080516040519392919084640100000000821115611a9f57600080fd5b83820191506020820185811115611ab557600080fd5b8251866001820283011164010000000082111715611ad257600080fd5b8083526020830192505050908051906020019080838360005b83811015611b06578082015181840152602081019050611aeb565b50505050905090810190601f168015611b335780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600f81526020017f20616c7265616479206578697374730000000000000000000000000000000000815250615866565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bdb578082015181840152602081019050611bc0565b50505050905090810190601f168015611c085780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b85859050841115611fc957611f28604051806060016040528060398152602001616a88603991398573__$1483b111869e15ef6c698c5f10f0d4a934$__636900a3ae90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015611c8e57600080fd5b505af4158015611ca2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611ccc57600080fd5b8101908080516040519392919084640100000000821115611cec57600080fd5b83820191506020820185811115611d0257600080fd5b8251866001820283011164010000000082111715611d1f57600080fd5b8083526020830192505050908051906020019080838360005b83811015611d53578082015181840152602081019050611d38565b50505050905090810190601f168015611d805780820380516001836020036101000a031916815260200191505b50604052505050604051806060016040528060268152602001616bc0602691398989905073__$1483b111869e15ef6c698c5f10f0d4a934$__636900a3ae90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015611df457600080fd5b505af4158015611e08573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611e3257600080fd5b8101908080516040519392919084640100000000821115611e5257600080fd5b83820191506020820185811115611e6857600080fd5b8251866001820283011164010000000082111715611e8557600080fd5b8083526020830192505050908051906020019080838360005b83811015611eb9578082015181840152602081019050611e9e565b50505050905090810190601f168015611ee65780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600181526020017f2900000000000000000000000000000000000000000000000000000000000000815250615ca1565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f8e578082015181840152602081019050611f73565b50505050905090810190601f168015611fbb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b8b600360008e81526020019081526020016000206000018190555086600360008e815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600360008e81526020019081526020016000206004018190555082600360008e81526020019081526020016000206006018190555033600360008e815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008e8152602001908152602001600020600a0160006101000a81548160ff0219169083151502179055508b7f414e3a2f2f61677265656d656e742d636f6d706c657461626c650000000000007fee9b87308d6a86986d792c76ae238d77be1335e3882fddfc05cf84c5100c9cde898e8e8e8e338c8b8b604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018060200184810384528c8c82818152602001925080828437600081840152601f19601f82011690508083019250505084810383528a8a82818152602001925080828437600081840152601f19601f8201169050808301925050508481038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509c5050505050505050505050505060405180910390a360008090505b8686905081101561244c57600360008e8152602001908152602001600020600301604051806040016040528089898581811061228e57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055505050508c7f414e3a2f2f61677265656d656e742d636f6d706c657461626c650000000000007f4c88659b2aeb5bb0fddb1ba3d6d212273372dcc0ca87847a4a2ea734f5767d4e8a8a8a868181106123ae57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a38080600101915050612256565b50505050505050505050505050565b61246361696a565b60016003806020026040519081016040528092919082600380156124c2576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161248b5790505b5050505050905090565b6000600180600381106124db57fe5b602091828204019190069054906101000a900460ff16905090565b6000612565600160038060200260405190810160405280929190826003801561255a576020028201916000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116125235790505b505050505083615bee565b9050919050565b60008160036000828152602001908152602001600020600a0160009054906101000a900460ff166128005761275f8173__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b1580156125eb57600080fd5b505af41580156125ff573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561262957600080fd5b810190808051604051939291908464010000000082111561264957600080fd5b8382019150602082018581111561265f57600080fd5b825186600182028301116401000000008211171561267c57600080fd5b8083526020830192505050908051906020019080838360005b838110156126b0578082015181840152602081019050612695565b50505050905090810190601f1680156126dd5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600f81526020017f20646f6573206e6f7420657869737400000000000000000000000000000000008152506040518060400160405280600c81526020017f436f6d706c657461626c652000000000000000000000000000000000000000008152506158669092919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156127c55780820151818401526020810190506127aa565b50505050905090810190601f1680156127f25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6003600084815260200190815260200160002060090154915060008214801561284057506000600360008581526020019081526020016000206008015414155b15612869577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91505b50919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156128e36157af565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612944578082015181840152602081019050612929565b50505050905090810190601f1680156129715780820380516001836020036101000a031916815260200191505b5084810383526023815260200180616b9d6023913960400184810382526027815260200180616b01602791396040019550505050505060006040518083038186803b1580156129bf57600080fd5b505af41580156129d3573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612a29615e65565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015612a8a578082015181840152602081019050612a6f565b50505050905090810190601f168015612ab75780820380516001836020036101000a031916815260200191505b5084810383526025815260200180616a636025913960400184810382526026815260200180616b77602691396040019550505050505060006040518083038186803b158015612b0557600080fd5b505af4158015612b19573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612c6d5780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd5b062c07f8a61fda452024e9c9d7db09548980e5f298d0f5cab47c3c9c172b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b600181565b60405160200180807f757067726164652861646472657373290000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012081565b60008260036000828152602001908152602001600020600a0160009054906101000a900460ff16612f5357612eb28173__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015612d3e57600080fd5b505af4158015612d52573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015612d7c57600080fd5b8101908080516040519392919084640100000000821115612d9c57600080fd5b83820191506020820185811115612db257600080fd5b8251866001820283011164010000000082111715612dcf57600080fd5b8083526020830192505050908051906020019080838360005b83811015612e03578082015181840152602081019050612de8565b50505050905090810190601f168015612e305780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600f81526020017f20646f6573206e6f7420657869737400000000000000000000000000000000008152506040518060400160405280600c81526020017f436f6d706c657461626c652000000000000000000000000000000000000000008152506158669092919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f18578082015181840152602081019050612efd565b50505050905090810190601f168015612f455780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b838360036000838152602001908152602001600020600a0160009054906101000a900460ff166131e6576131458273__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015612fd157600080fd5b505af4158015612fe5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561300f57600080fd5b810190808051604051939291908464010000000082111561302f57600080fd5b8382019150602082018581111561304557600080fd5b825186600182028301116401000000008211171561306257600080fd5b8083526020830192505050908051906020019080838360005b8381101561309657808201518184015260208101905061307b565b50505050905090810190601f1680156130c35780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600d81526020017f20697320756e646566696e6564000000000000000000000000000000000000008152506040518060400160405280600c81526020017f436f6d706c657461626c652000000000000000000000000000000000000000008152506158669092919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156131ab578082015181840152602081019050613190565b50505050905090810190601f1680156131d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008114156131f3574290505b60006003600084815260200190815260200160002060070154141561347b576133da8273__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561326657600080fd5b505af415801561327a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156132a457600080fd5b81019080805160405193929190846401000000008211156132c457600080fd5b838201915060208201858111156132da57600080fd5b82518660018202830111640100000000821117156132f757600080fd5b8083526020830192505050908051906020019080838360005b8381101561332b578082015181840152602081019050613310565b50505050905090810190601f1680156133585780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601281526020017f20686173206e6f742079657420626567756e00000000000000000000000000008152506040518060400160405280600c81526020017f436f6d706c657461626c652000000000000000000000000000000000000000008152506158669092919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613440578082015181840152602081019050613425565b50505050905090810190601f16801561346d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60036000838152602001908152602001600020600701548112156139e5576139448273__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b1580156134ed57600080fd5b505af4158015613501573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561352b57600080fd5b810190808051604051939291908464010000000082111561354b57600080fd5b8382019150602082018581111561356157600080fd5b825186600182028301116401000000008211171561357e57600080fd5b8083526020830192505050908051906020019080838360005b838110156135b2578082015181840152602081019050613597565b50505050905090810190601f1680156135df5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601281526020017f20626567696e73206c6174657220286174200000000000000000000000000000815250600360008681526020019081526020016000206007015473__$1483b111869e15ef6c698c5f10f0d4a934$__63a322c40e90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561368357600080fd5b505af4158015613697573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156136c157600080fd5b81019080805160405193929190846401000000008211156136e157600080fd5b838201915060208201858111156136f757600080fd5b825186600182028301116401000000008211171561371457600080fd5b8083526020830192505050908051906020019080838360005b8381101561374857808201518184015260208101905061372d565b50505050905090810190601f1680156137755780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600f81526020017f29207468616e20696e7374616e742000000000000000000000000000000000008152508573__$1483b111869e15ef6c698c5f10f0d4a934$__63a322c40e90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561380357600080fd5b505af4158015613817573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561384157600080fd5b810190808051604051939291908464010000000082111561386157600080fd5b8382019150602082018581111561387757600080fd5b825186600182028301116401000000008211171561389457600080fd5b8083526020830192505050908051906020019080838360005b838110156138c85780820151818401526020810190506138ad565b50505050905090810190601f1680156138f55780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600c81526020017f436f6d706c657461626c65200000000000000000000000000000000000000000815250615ea29095949392919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156139aa57808201518184015260208101905061398f565b50505050905090810190601f1680156139d75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6000600360008481526020019081526020016000206008015414158015613a215750806003600084815260200190815260200160002060080154125b15613f7257613ed18273__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015613a7a57600080fd5b505af4158015613a8e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613ab857600080fd5b8101908080516040519392919084640100000000821115613ad857600080fd5b83820191506020820185811115613aee57600080fd5b8251866001820283011164010000000082111715613b0b57600080fd5b8083526020830192505050908051906020019080838360005b83811015613b3f578082015181840152602081019050613b24565b50505050905090810190601f168015613b6c5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601e81526020017f206973206e6f74206f70656e3a20697420636f6d706c65746564206174200000815250600360008681526020019081526020016000206008015473__$1483b111869e15ef6c698c5f10f0d4a934$__63a322c40e90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015613c1057600080fd5b505af4158015613c24573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613c4e57600080fd5b8101908080516040519392919084640100000000821115613c6e57600080fd5b83820191506020820185811115613c8457600080fd5b8251866001820283011164010000000082111715613ca157600080fd5b8083526020830192505050908051906020019080838360005b83811015613cd5578082015181840152602081019050613cba565b50505050905090810190601f168015613d025780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601481526020017f206265666f72652074686520696e7374616e74200000000000000000000000008152508573__$1483b111869e15ef6c698c5f10f0d4a934$__63a322c40e90916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015613d9057600080fd5b505af4158015613da4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613dce57600080fd5b8101908080516040519392919084640100000000821115613dee57600080fd5b83820191506020820185811115613e0457600080fd5b8251866001820283011164010000000082111715613e2157600080fd5b8083526020830192505050908051906020019080838360005b83811015613e55578082015181840152602081019050613e3a565b50505050905090810190601f168015613e825780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600c81526020017f436f6d706c657461626c65200000000000000000000000000000000000000000815250615ea29095949392919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613f37578082015181840152602081019050613f1c565b50505050905090810190601f168015613f645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008073__$4bfedefce7d76215a620e01b46747fdc01$__6360b7f43d600360008b815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561402557600080fd5b505af4158015614039573d6000803e3d6000fd5b505050506040513d604081101561404f57600080fd5b810190808051906020019092919080519060200190929190505050809250819350505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146140c46157af565b61422f604051806060016040528060278152602001616be6602791398d73__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561413157600080fd5b505af4158015614145573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561416f57600080fd5b810190808051604051939291908464010000000082111561418f57600080fd5b838201915060208201858111156141a557600080fd5b82518660018202830111640100000000821117156141c257600080fd5b8083526020830192505050908051906020019080838360005b838110156141f65780820151818401526020810190506141db565b50505050905090810190601f1680156142235780820380516001836020036101000a031916815260200191505b506040525050506160ba565b6040518463ffffffff1660e01b81526004018084151515158152602001806020018060200180602001848103845286818151815260200191508051906020019080838360005b83811015614290578082015181840152602081019050614275565b50505050905090810190601f1680156142bd5780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f436f6d706c657461626c65732e72617469667928290000000000000000000000815250602001848103825285818151815260200191508051906020019080838360005b8381101561432a57808201518184015260208101905061430f565b50505050905090810190601f1680156143575780820380516001836020036101000a031916815260200191505b50965050505050505060006040518083038186803b15801561437857600080fd5b505af415801561438c573d6000803e3d6000fd5b50505050600087141561439d574296505b60036000898152602001908152602001600020600401546143bf898484616182565b106143e05786600360008a8152602001908152602001600020600901819055505b6143e861698c565b600360008a81526020019081526020016000206040518061016001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015614535578382906000526020600020016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16151515158152505081526020019060010190614496565b505050508152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820160009054906101000a900460ff161515151581525050905060008082610120015114159050897f414e3a2f2f61677265656d656e742d636f6d706c657461626c650000000000007ff4b228d527e1c6c9903a6ad3b0f8100d4f1927f796c0026d5e58b98b6febe865846040015186858e604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018315151515815260200182815260200194505050505060405180910390a38080156146d857506146d78260c001516001614785565b5b15614775573073ffffffffffffffffffffffffffffffffffffffff1663cfbec2b38b8b6040518363ffffffff1660e01b81526004018083815260200182815260200192505050602060405180830381600087803b15801561473857600080fd5b505af115801561474c573d6000803e3d6000fd5b505050506040513d602081101561476257600080fd5b8101908080519060200190929190505050505b8097505050505050505092915050565b60008082841611905092915050565b60008260036000828152602001908152602001600020600a0160009054906101000a900460ff16614a28576149878173__$1483b111869e15ef6c698c5f10f0d4a934$__6315f05b0590916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561481357600080fd5b505af4158015614827573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561485157600080fd5b810190808051604051939291908464010000000082111561487157600080fd5b8382019150602082018581111561488757600080fd5b82518660018202830111640100000000821117156148a457600080fd5b8083526020830192505050908051906020019080838360005b838110156148d85780820151818401526020810190506148bd565b50505050905090810190601f1680156149055780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600f81526020017f20646f6573206e6f7420657869737400000000000000000000000000000000008152506040518060400160405280600c81526020017f436f6d706c657461626c652000000000000000000000000000000000000000008152506158669092919063ffffffff16565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156149ed5780820151818401526020810190506149d2565b50505050905090810190601f168015614a1a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b833073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015614ac757503373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156150c857615027604051806060016040528060268152602001616b51602691393373ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b158015614b7b57600080fd5b505af4158015614b8f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015614bb957600080fd5b8101908080516040519392919084640100000000821115614bd957600080fd5b83820191506020820185811115614bef57600080fd5b8251866001820283011164010000000082111715614c0c57600080fd5b8083526020830192505050908051906020019080838360005b83811015614c40578082015181840152602081019050614c25565b50505050905090810190601f168015614c6d5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601181526020017f20286d73672e73656e6465722920213d200000000000000000000000000000008152506003600086815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b158015614d7357600080fd5b505af4158015614d87573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015614db157600080fd5b8101908080516040519392919084640100000000821115614dd157600080fd5b83820191506020820185811115614de757600080fd5b8251866001820283011164010000000082111715614e0457600080fd5b8083526020830192505050908051906020019080838360005b83811015614e38578082015181840152602081019050614e1d565b50505050905090810190601f168015614e655780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600e81526020017f2028636f6e74726f6c6c657229200000000000000000000000000000000000008152506040518060400160405280601181526020017f20666f7220436f6d706c657461626c65200000000000000000000000000000008152508773__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b158015614f2957600080fd5b505af4158015614f3d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015614f6757600080fd5b8101908080516040519392919084640100000000821115614f8757600080fd5b83820191506020820185811115614f9d57600080fd5b8251866001820283011164010000000082111715614fba57600080fd5b8083526020830192505050908051906020019080838360005b83811015614fee578082015181840152602081019050614fd3565b50505050905090810190601f16801561501b5780820380516001836020036101000a031916815260200191505b50604052505050615982565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561508d578082015181840152602081019050615072565b50505050905090810190601f1680156150ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60036000868152602001908152602001600020600a0160009054906101000a900460ff1661534f576152ae6040518060400160405280600c81526020017f636f6d706c65746528293a2000000000000000000000000000000000000000008152508673__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561517a57600080fd5b505af415801561518e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156151b857600080fd5b81019080805160405193929190846401000000008211156151d857600080fd5b838201915060208201858111156151ee57600080fd5b825186600182028301116401000000008211171561520b57600080fd5b8083526020830192505050908051906020019080838360005b8381101561523f578082015181840152602081019050615224565b50505050905090810190601f16801561526c5780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600f81526020017f206973206e6f7420646566696e65640000000000000000000000000000000000815250615866565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156153145780820151818401526020810190506152f9565b50505050905090810190601f1680156153415780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6000600360008781526020019081526020016000206007015414156155cd5761552c6040518060400160405280600c81526020017f636f6d706c65746528293a2000000000000000000000000000000000000000008152508673__$1483b111869e15ef6c698c5f10f0d4a934$$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b15801561642457600080fd5b505af4158015616438573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561646257600080fd5b810190808051604051939291908464010000000082111561648257600080fd5b8382019150602082018581111561649857600080fd5b82518660018202830111640100000000821117156164b557600080fd5b8083526020830192505050908051906020019080838360005b838110156164e95780820151818401526020810190506164ce565b50505050905090810190601f1680156165165780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280600a81526020017f206f7220706172747920000000000000000000000000000000000000000000008152508673ffffffffffffffffffffffffffffffffffffffff1673__$1483b111869e15ef6c698c5f10f0d4a934$__635a27587990916040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b1580156165e657600080fd5b505af41580156165fa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561662457600080fd5b810190808051604051939291908464010000000082111561664457600080fd5b8382019150602082018581111561665a57600080fd5b825186600182028301116401000000008211171561667757600080fd5b8083526020830192505050908051906020019080838360005b838110156166ab578082015181840152602081019050616690565b50505050905090810190601f1680156166d85780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280602081526020017f6973206e6f742061206672616e636869736565206f6620696e74657276616c208152508a73__$1483b111869e15ef6c698c5f10f0d4a934$__6349e894d890916040518263ffffffff1660e01b81526004018082815260200191505060006040518083038186803b15801561676657600080fd5b505af415801561677a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156167a457600080fd5b81019080805160405193929190846401000000008211156167c457600080fd5b838201915060208201858111156167da57600080fd5b82518660018202830111640100000000821117156167f757600080fd5b8083526020830192505050908051906020019080838360005b8381101561682b578082015181840152602081019050616810565b50505050905090810190601f1680156168585780820380516001836020036101000a031916815260200191505b50604052505050615ea2565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156168ca5780820151818401526020810190506168af565b50505050905090810190601f1680156168f75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b819150509392505050565b60008260ff168260ff1614156169295760009050616964565b8260ff168260ff16101561695f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050616964565b600190505b92915050565b6040518060600160405280600390602082028038833980820191505090505090565b6040518061016001604052806000801916815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600015158152509056fe546865207570677261646520737563636573736f72206d75737420686176652061206869676865722076657273696f6e207468616e207468652063757272656e7420636f6e74726163742e557067726164654f776e65642e7472616e73666572557067726164654f776e65727368697043616e6e6f7420637265617465206120636f6d706c657461626c65207769746820726174696669636174696f6e207468726573686f6c6420284f6e65206f66206d696772617465546f202f206d69677261746546726f6d2072657475726e65642066616c73652e2041626f7274696e6720757067726164652e546865206d73672e73656e646572206973206e6f74207468652075706772616465206f776e657241627374726163745570677261646561626c652e7072655f68696768657256657273696f6e4f6e6c7963616c6c6572206973206e6f7420436f6d706c657461626c6520636f6e74726f6c6c65723a20546865206e65772075706772616465206f776e6572206d757374206e6f74206265204e554c4c557067726164654f776e65642e7072655f6f6e6c794279557067726164654f776e6572292067726561746572207468616e206e756d626572206f66206672616e6368697365657320285468652063616c6c6572206973206e6f7420617574686f72697a656420746f2072617469667920a265627a7a723158201b3c38e935cb1ef8ad628d74120e34e410f8fcae0923675e7d53b4ca9a072ec364736f6c63430005110032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365';
    export function deploy(client: Provider, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_utils_Strings_sol_Strings: string): Promise<string> {
        const codec = client.contractCodec(abi);
        let linkedBytecode = bytecode;
        linkedBytecode = linker(linkedBytecode, "$4bfedefce7d76215a620e01b46747fdc01$", agreements_AgreementsAPI_sol_AgreementsAPI);
        linkedBytecode = linker(linkedBytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        linkedBytecode = linker(linkedBytecode, "$1483b111869e15ef6c698c5f10f0d4a934$", commons_utils_Strings_sol_Strings);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        const payload = client.payload(data);
        return client.deploy(payload);
    }
    export async function deployContract(client: Provider, agreements_AgreementsAPI_sol_AgreementsAPI: string, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_utils_Strings_sol_Strings: string): Promise<Contract> { const address = await deploy(client, agreements_AgreementsAPI_sol_AgreementsAPI, commons_base_ErrorsLib_sol_ErrorsLib, commons_utils_Strings_sol_Strings); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogAgreementCompletableAttest: { signature: "F4B228D527E1C6C9903A6AD3B0F8100D4F1927F796C0026D5E58B98B6FEBE865", tagged: (eventId: Buffer, intervalId: Buffer, agreementAddress: string, franchisee: string, ratified: boolean, timestamp: number) => ({ name: "LogAgreementCompletableAttest", payload: { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, franchisee: franchisee, ratified: ratified, timestamp: timestamp } as const } as const) } as const, LogAgreementCompletableBegin: { signature: "9EF9A150F35A9FB2B9135982E80DB37BA0C87D498C150940828D07735FE2FA05", tagged: (eventId: Buffer, intervalId: Buffer, agreementAddress: string, timestamp: number) => ({ name: "LogAgreementCompletableBegin", payload: { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, timestamp: timestamp } as const } as const) } as const, LogAgreementCompletableComplete: { signature: "500D0D9C7CC257DD2399157F908A19AD973A93AAB95DE5C9280ED75AFF84B1B5", tagged: (eventId: Buffer, intervalId: Buffer, agreementAddress: string, ratified: boolean, timestamp: number) => ({ name: "LogAgreementCompletableComplete", payload: { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, ratified: ratified, timestamp: timestamp } as const } as const) } as const, LogAgreementCompletableInit: { signature: "EE9B87308D6A86986D792C76AE238D77BE1335E3882FDDFC05CF84C5100C9CDE", tagged: (eventId: Buffer, intervalId: Buffer, agreementAddress: string, namespace: string, name: string, controller: string, threshold: number, metadata: string) => ({ name: "LogAgreementCompletableInit", payload: { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, namespace: namespace, name: name, controller: controller, threshold: threshold, metadata: metadata } as const } as const) } as const, LogAgreementCompletableInitFranchisee: { signature: "4C88659B2AEB5BB0FDDB1BA3D6D212273372DCC0CA87847A4A2EA734F5767D4E", tagged: (eventId: Buffer, intervalId: Buffer, agreementAddress: string, franchisee: string) => ({ name: "LogAgreementCompletableInitFranchisee", payload: { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, franchisee: franchisee } as const } as const) } as const, LogUpgradeOwnerChanged: { signature: "D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogUpgradeOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { COMPLETE_ON_RATIFICATION(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).COMPLETE_ON_RATIFICATION();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).COMPLETE_ON_RATIFICATION();
                });
            }, DEFAULT(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).DEFAULT();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).DEFAULT();
                });
            }, ERC165_ID_Upgradeable(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_Upgradeable();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_Upgradeable();
                });
            }, ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, attest(intervalId: Buffer, timestamp: number, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).attest(intervalId, timestamp);
                return call<[
                    boolean
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).attest();
                });
            }, begin(intervalId: Buffer, timestamp: number, call = defaultCall): Promise<void> {
                const data = encode(client).begin(intervalId, timestamp);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).begin();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, complete(intervalId: Buffer, timestamp: number, call = defaultCall): Promise<{
                isRatified: boolean;
            }> {
                const data = encode(client).complete(intervalId, timestamp);
                return call<{
                    isRatified: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).complete();
                });
            }, enabled(options: number, option: number, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).enabled(options, option);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).enabled();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getUpgradeOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getUpgradeOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUpgradeOwner();
                });
            }, init(intervalId: Buffer, namespace: string, name: string, agreementAddress: string, franchisees: string[], threshold: number, options: number, metadata: string, call = defaultCall): Promise<void> {
                const data = encode(client).init(intervalId, namespace, name, agreementAddress, franchisees, threshold, options, metadata);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).init();
                });
            }, migrateFrom(call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).migrateFrom();
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).migrateFrom();
                });
            }, migrateTo(call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).migrateTo();
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).migrateTo();
                });
            }, ratifiedAt(intervalId: Buffer, call = defaultCall): Promise<{
                ratified: number;
            }> {
                const data = encode(client).ratifiedAt(intervalId);
                return call<{
                    ratified: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ratifiedAt();
                });
            }, supportsInterface(_interfaceId: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).supportsInterface(_interfaceId);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).supportsInterface();
                });
            }, transferUpgradeOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferUpgradeOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferUpgradeOwnership();
                });
            }, upgrade(_successor: string, call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).upgrade(_successor);
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).upgrade();
                });
            } } as const, listeners: { LogAgreementCompletableAttest(callback: (err?: Error, event?: {
                eventId: Buffer;
                intervalId: Buffer;
                agreementAddress: string;
                franchisee: string;
                ratified: boolean;
                timestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["F4B228D527E1C6C9903A6AD3B0F8100D4F1927F796C0026D5E58B98B6FEBE865"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCompletableAttest()); }, start, end); }, LogAgreementCompletableBegin(callback: (err?: Error, event?: {
                eventId: Buffer;
                intervalId: Buffer;
                agreementAddress: string;
                timestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["9EF9A150F35A9FB2B9135982E80DB37BA0C87D498C150940828D07735FE2FA05"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCompletableBegin()); }, start, end); }, LogAgreementCompletableComplete(callback: (err?: Error, event?: {
                eventId: Buffer;
                intervalId: Buffer;
                agreementAddress: string;
                ratified: boolean;
                timestamp: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["500D0D9C7CC257DD2399157F908A19AD973A93AAB95DE5C9280ED75AFF84B1B5"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCompletableComplete()); }, start, end); }, LogAgreementCompletableInit(callback: (err?: Error, event?: {
                eventId: Buffer;
                intervalId: Buffer;
                agreementAddress: string;
                namespace: string;
                name: string;
                controller: string;
                threshold: number;
                metadata: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["EE9B87308D6A86986D792C76AE238D77BE1335E3882FDDFC05CF84C5100C9CDE"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCompletableInit()); }, start, end); }, LogAgreementCompletableInitFranchisee(callback: (err?: Error, event?: {
                eventId: Buffer;
                intervalId: Buffer;
                agreementAddress: string;
                franchisee: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["4C88659B2AEB5BB0FDDB1BA3D6D212273372DCC0CA87847A4A2EA734F5767D4E"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogAgreementCompletableInitFranchisee()); }, start, end); }, LogUpgradeOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogUpgradeOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        COMPLETE_ON_RATIFICATION: () => { return codec.encodeFunctionData("B0CA8988"); },
        DEFAULT: () => { return codec.encodeFunctionData("0A25DEA9"); },
        ERC165_ID_Upgradeable: () => { return codec.encodeFunctionData("B21C815F"); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        attest: (intervalId: Buffer, timestamp: number) => { return codec.encodeFunctionData("B771A389", intervalId, timestamp); },
        begin: (intervalId: Buffer, timestamp: number) => { return codec.encodeFunctionData("27FE932F", intervalId, timestamp); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        complete: (intervalId: Buffer, timestamp: number) => { return codec.encodeFunctionData("CFBEC2B3", intervalId, timestamp); },
        enabled: (options: number, option: number) => { return codec.encodeFunctionData("BF9A4B86", options, option); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getUpgradeOwner: () => { return codec.encodeFunctionData("E7284879"); },
        init: (intervalId: Buffer, namespace: string, name: string, agreementAddress: string, franchisees: string[], threshold: number, options: number, metadata: string) => { return codec.encodeFunctionData("5D7D4D11", intervalId, namespace, name, agreementAddress, franchisees, threshold, options, metadata); },
        migrateFrom: () => { return codec.encodeFunctionData("35657E68"); },
        migrateTo: () => { return codec.encodeFunctionData("4DDAF8F2"); },
        ratifiedAt: (intervalId: Buffer) => { return codec.encodeFunctionData("9676A991", intervalId); },
        supportsInterface: (_interfaceId: Buffer) => { return codec.encodeFunctionData("01FFC9A7", _interfaceId); },
        transferUpgradeOwnership: (_newOwner: string) => { return codec.encodeFunctionData("AC83EC7C", _newOwner); },
        upgrade: (_successor: string) => { return codec.encodeFunctionData("0900F010", _successor); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogAgreementCompletableAttest: (): {
            eventId: Buffer;
            intervalId: Buffer;
            agreementAddress: string;
            franchisee: string;
            ratified: boolean;
            timestamp: number;
        } => {
            const [eventId, intervalId, agreementAddress, franchisee, ratified, timestamp] = codec.decodeEventLog ("F4B228D527E1C6C9903A6AD3B0F8100D4F1927F796C0026D5E58B98B6FEBE865", data, topics);
            return { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, franchisee: franchisee, ratified: ratified, timestamp: timestamp };
        },
        LogAgreementCompletableBegin: (): {
            eventId: Buffer;
            intervalId: Buffer;
            agreementAddress: string;
            timestamp: number;
        } => {
            const [eventId, intervalId, agreementAddress, timestamp] = codec.decodeEventLog ("9EF9A150F35A9FB2B9135982E80DB37BA0C87D498C150940828D07735FE2FA05", data, topics);
            return { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, timestamp: timestamp };
        },
        LogAgreementCompletableComplete: (): {
            eventId: Buffer;
            intervalId: Buffer;
            agreementAddress: string;
            ratified: boolean;
            timestamp: number;
        } => {
            const [eventId, intervalId, agreementAddress, ratified, timestamp] = codec.decodeEventLog ("500D0D9C7CC257DD2399157F908A19AD973A93AAB95DE5C9280ED75AFF84B1B5", data, topics);
            return { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, ratified: ratified, timestamp: timestamp };
        },
        LogAgreementCompletableInit: (): {
            eventId: Buffer;
            intervalId: Buffer;
            agreementAddress: string;
            namespace: string;
            name: string;
            controller: string;
            threshold: number;
            metadata: string;
        } => {
            const [eventId, intervalId, agreementAddress, namespace, name, controller, threshold, metadata] = codec.decodeEventLog ("EE9B87308D6A86986D792C76AE238D77BE1335E3882FDDFC05CF84C5100C9CDE", data, topics);
            return { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, namespace: namespace, name: name, controller: controller, threshold: threshold, metadata: metadata };
        },
        LogAgreementCompletableInitFranchisee: (): {
            eventId: Buffer;
            intervalId: Buffer;
            agreementAddress: string;
            franchisee: string;
        } => {
            const [eventId, intervalId, agreementAddress, franchisee] = codec.decodeEventLog ("4C88659B2AEB5BB0FDDB1BA3D6D212273372DCC0CA87847A4A2EA734F5767D4E", data, topics);
            return { eventId: eventId, intervalId: intervalId, agreementAddress: agreementAddress, franchisee: franchisee };
        },
        LogUpgradeOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        COMPLETE_ON_RATIFICATION: (): [
            number
        ] => { return codec.decodeFunctionResult ("B0CA8988", data); },
        DEFAULT: (): [
            number
        ] => { return codec.decodeFunctionResult ("0A25DEA9", data); },
        ERC165_ID_Upgradeable: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("B21C815F", data); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        attest: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("B771A389", data); },
        begin: (): void => { return; },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        complete: (): {
            isRatified: boolean;
        } => {
            const [isRatified] = codec.decodeFunctionResult ("CFBEC2B3", data);
            return { isRatified: isRatified };
        },
        enabled: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("BF9A4B86", data); },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getUpgradeOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("E7284879", data); },
        init: (): void => { return; },
        migrateFrom: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("35657E68", data);
            return { success: success };
        },
        migrateTo: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("4DDAF8F2", data);
            return { success: success };
        },
        ratifiedAt: (): {
            ratified: number;
        } => {
            const [ratified] = codec.decodeFunctionResult ("9676A991", data);
            return { ratified: ratified };
        },
        supportsInterface: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("01FFC9A7", data); },
        transferUpgradeOwnership: (): void => { return; },
        upgrade: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("0900F010", data);
            return { success: success };
        }
    }; };
}