//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CancelStreamSignal, ContractCodec, Event, linker, listenerFor, Result, Keccak } from "@hyperledger/burrow";
interface Provider {
    deploy(data: string | Uint8Array, contractMeta?: {
        abi: string;
        codeHash: Uint8Array;
    }[]): Promise<Address>;
    call(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    callSim(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const returnData = await (isSim ? client.callSim(data, addr) : client.call(data, addr));
    return callback(returnData);
}
export module ApplicationRegistryDb {
    export const contactName = "ApplicationRegistryDb";
    export const abi = '[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogSystemOwnerChanged","type":"event"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bytes32","name":"_accessPointId","type":"bytes32"},{"internalType":"uint8","name":"_dataType","type":"uint8"},{"internalType":"enum BpmModel.Direction","name":"_direction","type":"uint8"}],"name":"addAccessPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"enum BpmModel.ApplicationType","name":"_type","type":"uint8"},{"internalType":"address","name":"_location","type":"address"},{"internalType":"bytes4","name":"_function","type":"bytes4"},{"internalType":"bytes32","name":"_webForm","type":"bytes32"}],"name":"addApplication","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"applicationExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getAccessPointAtIndex","outputs":[{"internalType":"bytes32","name":"accessPointId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bytes32","name":"_accessPointId","type":"bytes32"}],"name":"getAccessPointData","outputs":[{"internalType":"uint8","name":"dataType","type":"uint8"},{"internalType":"enum BpmModel.Direction","name":"direction","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getApplicationAtIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getApplicationData","outputs":[{"internalType":"uint8","name":"applicationType","type":"uint8"},{"internalType":"address","name":"location","type":"address"},{"internalType":"bytes4","name":"method","type":"bytes4"},{"internalType":"bytes32","name":"webForm","type":"bytes32"},{"internalType":"uint256","name":"accessPointCount","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getNumberOfAccessPoints","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfApplications","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSystemOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferSystemOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    export const bytecode = '608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112d9806100606000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a86da9b411610071578063a86da9b414610266578063c46df94e14610284578063cbd8558e14610352578063e51d063414610394578063e60ced2c146103e0578063efed99b414610447576100a9565b80630a452ad6146100ae5780637f692a2a146100f25780638166b73d1461013c57806388114be7146101de578063903e7a1514610224575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ad565b005b6100fa6108aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c8600480360360a081101561015257600080fd5b8101908080359060200190929190803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803590602001909291905050506108d3565b6040518082815260200191505060405180910390f35b61020a600480360360208110156101f457600080fd5b8101908080359060200190929190505050610c18565b604051808215151515815260200191505060405180910390f35b6102506004803603602081101561023a57600080fd5b8101908080359060200190929190505050610c48565b6040518082815260200191505060405180910390f35b61026e610c6b565b6040518082815260200191505060405180910390f35b6102b06004803603602081101561029a57600080fd5b8101908080359060200190929190505050610c7a565b604051808660ff1660ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018381526020018281526020019550505050505060405180910390f35b61037e6004803603602081101561036857600080fd5b8101908080359060200190929190505050610d6e565b6040518082815260200191505060405180910390f35b6103ca600480360360408110156103aa57600080fd5b810190808035906020019092919080359060200190929190505050610d97565b6040518082815260200191505060405180910390f35b610416600480360360408110156103f657600080fd5b810190808035906020019092919080359060200190929190505050610dd3565b604051808360ff1660ff16815260200182600181111561043257fe5b60ff1681526020019250505060405180910390f35b6104976004803603608081101561045d57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190803560ff169060200190929190505050610e5d565b6040518082815260200191505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610520611188565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610581578082015181840152602081019050610566565b50505050905090810190601f1680156105ae5780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112846021913960400184810382526026815260200180611239602691396040019550505050505060006040518083038186803b1580156105fc57600080fd5b505af4158015610610573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146106666111c5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156106c75780820151818401526020810190506106ac565b50505050905090810190601f1680156106f45780820380516001836020036101000a031916815260200191505b5084810383526023815260200180611216602391396040018481038252602581526020018061125f602591396040019550505050505060006040518083038186803b15801561074257600080fd5b505af4158015610756573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a7577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610948611188565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156109a957808201518184015260208101905061098e565b50505050905090810190601f1680156109d65780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112846021913960400184810382526026815260200180611239602691396040019550505050505060006040518083038186803b158015610a2457600080fd5b505af4158015610a38573d6000803e3d6000fd5b505050506001600001600087815260200190815260200160002060060160009054906101000a900460ff1615610a7757610a70611202565b9050610c0f565b6001800186908060018154018082558091505090600182039060005260206000200160009091929091909150556001600001600088815260200190815260200160002060000181905550856001600001600088815260200190815260200160002060010160000181905550846001600001600088815260200190815260200160002060010160010160006101000a81548160ff02191690836002811115610b1a57fe5b0217905550836001600001600088815260200190815260200160002060010160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826001600001600088815260200190815260200160002060010160010160156101000a81548163ffffffff021916908360e01c0217905550816001600001600088815260200190815260200160002060010160020181905550600180600001600088815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610c0c61120c565b90505b95945050505050565b60006001600001600083815260200190815260200160002060060160009054906101000a900460ff169050919050565b6000600180018281548110610c5957fe5b90600052602060002001549050919050565b60006001800180549050905090565b60008060008060006001600001600087815260200190815260200160002060010160010160009054906101000a900460ff166002811115610cb757fe5b94506001600001600087815260200190815260200160002060010160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693506001600001600087815260200190815260200160002060010160010160159054906101000a900460e01b9250600160000160008781526020019081526020016000206001016002015491506001600001600087815260200190815260200160002060010160040180549050905091939590929450565b600060016000016000838152602001908152602001600020600101600401805490509050919050565b6000600160000160008481526020019081526020016000206001016004018281548110610dc057fe5b9060005260206000200154905092915050565b60008060016000016000858152602001908152602001600020600101600301600084815260200190815260200160002060010160009054906101000a900460ff16915060016000016000858152602001908152602001600020600101600301600084815260200190815260200160002060010160019054906101000a900460ff1690509250929050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ed2611188565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610f33578082015181840152602081019050610f18565b50505050905090810190601f168015610f605780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112846021913960400184810382526026815260200180611239602691396040019550505050505060006040518083038186803b158015610fae57600080fd5b505af4158015610fc2573d6000803e3d6000fd5b5050505060016000016000868152602001908152602001600020600101600301600085815260200190815260200160002060010160029054906101000a900460ff161561101857611011611202565b9050611180565b6001600001600086815260200190815260200160002060010160040184908060018154018082558091505090600182039060005260206000200160009091929091909150555083600160000160008781526020019081526020016000206001016003016000868152602001908152602001600020600001819055508260016000016000878152602001908152602001600020600101600301600086815260200190815260200160002060010160006101000a81548160ff021916908360ff1602179055508160016000016000878152602001908152602001600020600101600301600086815260200190815260200160002060010160016101000a81548160ff0219169083600181111561112857fe5b02179055506001806000016000878152602001908152602001600020600101600301600086815260200190815260200160002060010160026101000a81548160ff02191690831515021790555061117d61120c565b90505b949350505050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006103ea905090565b6000600190509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a7231582040df706379a5286957c964d44be224cae09eae53e0c4d7d0b64ac288c90770d564736f6c63430005110032';
    export const deployedBytecode = '608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a86da9b411610071578063a86da9b414610266578063c46df94e14610284578063cbd8558e14610352578063e51d063414610394578063e60ced2c146103e0578063efed99b414610447576100a9565b80630a452ad6146100ae5780637f692a2a146100f25780638166b73d1461013c57806388114be7146101de578063903e7a1514610224575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ad565b005b6100fa6108aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c8600480360360a081101561015257600080fd5b8101908080359060200190929190803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803590602001909291905050506108d3565b6040518082815260200191505060405180910390f35b61020a600480360360208110156101f457600080fd5b8101908080359060200190929190505050610c18565b604051808215151515815260200191505060405180910390f35b6102506004803603602081101561023a57600080fd5b8101908080359060200190929190505050610c48565b6040518082815260200191505060405180910390f35b61026e610c6b565b6040518082815260200191505060405180910390f35b6102b06004803603602081101561029a57600080fd5b8101908080359060200190929190505050610c7a565b604051808660ff1660ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018381526020018281526020019550505050505060405180910390f35b61037e6004803603602081101561036857600080fd5b8101908080359060200190929190505050610d6e565b6040518082815260200191505060405180910390f35b6103ca600480360360408110156103aa57600080fd5b810190808035906020019092919080359060200190929190505050610d97565b6040518082815260200191505060405180910390f35b610416600480360360408110156103f657600080fd5b810190808035906020019092919080359060200190929190505050610dd3565b604051808360ff1660ff16815260200182600181111561043257fe5b60ff1681526020019250505060405180910390f35b6104976004803603608081101561045d57600080fd5b810190808035906020019092919080359060200190929190803560ff169060200190929190803560ff169060200190929190505050610e5d565b6040518082815260200191505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610520611188565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610581578082015181840152602081019050610566565b50505050905090810190601f1680156105ae5780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112846021913960400184810382526026815260200180611239602691396040019550505050505060006040518083038186803b1580156105fc57600080fd5b505af4158015610610573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146106666111c5565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156106c75780820151818401526020810190506106ac565b50505050905090810190601f1680156106f45780820380516001836020036101000a031916815260200191505b5084810383526023815260200180611216602391396040018481038252602581526020018061125f602591396040019550505050505060006040518083038186803b15801561074257600080fd5b505af4158015610756573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108a7577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610948611188565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156109a957808201518184015260208101905061098e565b50505050905090810190601f1680156109d65780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112846021913960400184810382526026815260200180611239602691396040019550505050505060006040518083038186803b158015610a2457600080fd5b505af4158015610a38573d6000803e3d6000fd5b505050506001600001600087815260200190815260200160002060060160009054906101000a900460ff1615610a7757610a70611202565b9050610c0f565b6001800186908060018154018082558091505090600182039060005260206000200160009091929091909150556001600001600088815260200190815260200160002060000181905550856001600001600088815260200190815260200160002060010160000181905550846001600001600088815260200190815260200160002060010160010160006101000a81548160ff02191690836002811115610b1a57fe5b0217905550836001600001600088815260200190815260200160002060010160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826001600001600088815260200190815260200160002060010160010160156101000a81548163ffffffff021916908360e01c0217905550816001600001600088815260200190815260200160002060010160020181905550600180600001600088815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610c0c61120c565b90505b95945050505050565b60006001600001600083815260200190815260200160002060060160009054906101000a900460ff169050919050565b6000600180018281548110610c5957fe5b90600052602060002001549050919050565b60006001800180549050905090565b60008060008060006001600001600087815260200190815260200160002060010160010160009054906101000a900460ff166002811115610cb757fe5b94506001600001600087815260200190815260200160002060010160010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693506001600001600087815260200190815260200160002060010160010160159054906101000a900460e01b9250600160000160008781526020019081526020016000206001016002015491506001600001600087815260200190815260200160002060010160040180549050905091939590929450565b600060016000016000838152602001908152602001600020600101600401805490509050919050565b6000600160000160008481526020019081526020016000206001016004018281548110610dc057fe5b9060005260206000200154905092915050565b60008060016000016000858152602001908152602001600020600101600301600084815260200190815260200160002060010160009054906101000a900460ff16915060016000016000858152602001908152602001600020600101600301600084815260200190815260200160002060010160019054906101000a900460ff1690509250929050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ed2611188565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610f33578082015181840152602081019050610f18565b50505050905090810190601f168015610f605780820380516001836020036101000a031916815260200191505b50848103835260218152602001806112846021913960400184810382526026815260200180611239602691396040019550505050505060006040518083038186803b158015610fae57600080fd5b505af4158015610fc2573d6000803e3d6000fd5b5050505060016000016000868152602001908152602001600020600101600301600085815260200190815260200160002060010160029054906101000a900460ff161561101857611011611202565b9050611180565b6001600001600086815260200190815260200160002060010160040184908060018154018082558091505090600182039060005260206000200160009091929091909150555083600160000160008781526020019081526020016000206001016003016000868152602001908152602001600020600001819055508260016000016000878152602001908152602001600020600101600301600086815260200190815260200160002060010160006101000a81548160ff021916908360ff1602179055508160016000016000878152602001908152602001600020600101600301600086815260200190815260200160002060010160016101000a81548160ff0219169083600181111561112857fe5b02179055506001806000016000878152602001908152602001600020600101600301600086815260200190815260200160002060010160026101000a81548160ff02191690831515021790555061117d61120c565b90505b949350505050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60006103ea905090565b6000600190509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a7231582040df706379a5286957c964d44be224cae09eae53e0c4d7d0b64ac288c90770d564736f6c63430005110032';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, withContractMeta: boolean = false): Promise<string> {
        const codec = client.contractCodec(abi);
        const links = [{ name: "$ecfb6c4d3c3ceff197e19e585a0a53728c$", address: commons_base_ErrorsLib_sol_ErrorsLib }];
        const linkedBytecode = linker(bytecode, links);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        return client.deploy(data, withContractMeta ? [{ abi: ApplicationRegistryDb.abi, codeHash: new Keccak(256).update(linker(ApplicationRegistryDb.deployedBytecode, links), "hex").digest("binary") }] : undefined);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, withContractMeta: boolean = false): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib, withContractMeta); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => unknown;
    const events = { LogSystemOwnerChanged: { signature: "0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogSystemOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { addAccessPoint(_id: Buffer, _accessPointId: Buffer, _dataType: number, _direction: number, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).addAccessPoint(_id, _accessPointId, _dataType, _direction);
                return call<[
                    number
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addAccessPoint();
                });
            }, addApplication(_id: Buffer, _type: number, _location: string, _function: Buffer, _webForm: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).addApplication(_id, _type, _location, _function, _webForm);
                return call<[
                    number
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addApplication();
                });
            }, applicationExists(_id: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).applicationExists(_id);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).applicationExists();
                });
            }, getAccessPointAtIndex(_id: Buffer, _index: number, call = defaultCall): Promise<{
                accessPointId: Buffer;
            }> {
                const data = encode(client).getAccessPointAtIndex(_id, _index);
                return call<{
                    accessPointId: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAccessPointAtIndex();
                });
            }, getAccessPointData(_id: Buffer, _accessPointId: Buffer, call = defaultCall): Promise<{
                dataType: number;
                direction: number;
            }> {
                const data = encode(client).getAccessPointData(_id, _accessPointId);
                return call<{
                    dataType: number;
                    direction: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAccessPointData();
                });
            }, getApplicationAtIndex(_index: number, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getApplicationAtIndex(_index);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getApplicationAtIndex();
                });
            }, getApplicationData(_id: Buffer, call = defaultCall): Promise<{
                applicationType: number;
                location: string;
                method: Buffer;
                webForm: Buffer;
                accessPointCount: number;
            }> {
                const data = encode(client).getApplicationData(_id);
                return call<{
                    applicationType: number;
                    location: string;
                    method: Buffer;
                    webForm: Buffer;
                    accessPointCount: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getApplicationData();
                });
            }, getNumberOfAccessPoints(_id: Buffer, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfAccessPoints(_id);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfAccessPoints();
                });
            }, getNumberOfApplications(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfApplications();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfApplications();
                });
            }, getSystemOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSystemOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSystemOwner();
                });
            }, transferSystemOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferSystemOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferSystemOwnership();
                });
            } } as const, listeners: { LogSystemOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogSystemOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        addAccessPoint: (_id: Buffer, _accessPointId: Buffer, _dataType: number, _direction: number) => { return codec.encodeFunctionData("EFED99B4", _id, _accessPointId, _dataType, _direction); },
        addApplication: (_id: Buffer, _type: number, _location: string, _function: Buffer, _webForm: Buffer) => { return codec.encodeFunctionData("8166B73D", _id, _type, _location, _function, _webForm); },
        applicationExists: (_id: Buffer) => { return codec.encodeFunctionData("88114BE7", _id); },
        getAccessPointAtIndex: (_id: Buffer, _index: number) => { return codec.encodeFunctionData("E51D0634", _id, _index); },
        getAccessPointData: (_id: Buffer, _accessPointId: Buffer) => { return codec.encodeFunctionData("E60CED2C", _id, _accessPointId); },
        getApplicationAtIndex: (_index: number) => { return codec.encodeFunctionData("903E7A15", _index); },
        getApplicationData: (_id: Buffer) => { return codec.encodeFunctionData("C46DF94E", _id); },
        getNumberOfAccessPoints: (_id: Buffer) => { return codec.encodeFunctionData("CBD8558E", _id); },
        getNumberOfApplications: () => { return codec.encodeFunctionData("A86DA9B4"); },
        getSystemOwner: () => { return codec.encodeFunctionData("7F692A2A"); },
        transferSystemOwnership: (_newOwner: string) => { return codec.encodeFunctionData("0A452AD6", _newOwner); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogSystemOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        addAccessPoint: (): [
            number
        ] => { return codec.decodeFunctionResult ("EFED99B4", data); },
        addApplication: (): [
            number
        ] => { return codec.decodeFunctionResult ("8166B73D", data); },
        applicationExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("88114BE7", data); },
        getAccessPointAtIndex: (): {
            accessPointId: Buffer;
        } => {
            const [accessPointId] = codec.decodeFunctionResult ("E51D0634", data);
            return { accessPointId: accessPointId };
        },
        getAccessPointData: (): {
            dataType: number;
            direction: number;
        } => {
            const [dataType, direction] = codec.decodeFunctionResult ("E60CED2C", data);
            return { dataType: dataType, direction: direction };
        },
        getApplicationAtIndex: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("903E7A15", data); },
        getApplicationData: (): {
            applicationType: number;
            location: string;
            method: Buffer;
            webForm: Buffer;
            accessPointCount: number;
        } => {
            const [applicationType, location, method, webForm, accessPointCount] = codec.decodeFunctionResult ("C46DF94E", data);
            return { applicationType: applicationType, location: location, method: method, webForm: webForm, accessPointCount: accessPointCount };
        },
        getNumberOfAccessPoints: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("CBD8558E", data);
            return { size: size };
        },
        getNumberOfApplications: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("A86DA9B4", data);
            return { size: size };
        },
        getSystemOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("7F692A2A", data); },
        transferSystemOwnership: (): void => { return; }
    }; };
}