//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CancelStreamSignal, ContractCodec, Event, linker, listenerFor, Result, Keccak } from "@hyperledger/burrow";
interface Provider {
    deploy(data: string | Uint8Array, contractMeta?: {
        abi: string;
        codeHash: Uint8Array;
    }[]): Promise<Address>;
    call(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    callSim(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const returnData = await (isSim ? client.callSim(data, addr) : client.call(data, addr));
    return callback(returnData);
}
export module BpmServiceDb {
    export const contactName = "BpmServiceDb";
    export const abi = '[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogSystemOwnerChanged","type":"event"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"addActivityInstance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"addProcessInstance","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfActivityInstances","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfProcessInstances","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_pos","type":"uint256"}],"name":"getProcessInstanceAtIndex","outputs":[{"internalType":"address","name":"processInstanceAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_aiId","type":"bytes32"}],"name":"getProcessInstanceForActivity","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSystemOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferSystemOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    export const bytecode = '608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d6d806100606000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637f692a2a1161005b5780637f692a2a146101a15780639ca651f8146101eb578063ba6dd3e514610259578063d8619d801461028757610088565b80630a452ad61461008d57806320cc0184146100d157806357f31a6c1461013f5780636cf5c9e51461015d575b600080fd5b6100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102a5565b005b6100fd600480360360208110156100e757600080fd5b81019080803590602001909291905050506106a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610147610751565b6040518082815260200191505060405180910390f35b61019f6004803603602081101561017357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610760565b005b6101a96109c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102176004803603602081101561020157600080fd5b81019080803590602001909291905050506109e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102856004803603602081101561026f57600080fd5b8101908080359060200190929190505050610a87565b005b61028f610c1f565b6040518082815260200191505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610318610c2f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561037957808201518184015260208101905061035e565b50505050905090810190601f1680156103a65780820380516001836020036101000a031916815260200191505b5084810383526021815260200180610d186021913960400184810382526026815260200180610ccd602691396040019550505050505060006040518083038186803b1580156103f457600080fd5b505af4158015610408573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461045e610c6c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156104bf5780820151818401526020810190506104a4565b50505050905090810190601f1680156104ec5780820380516001836020036101000a031916815260200191505b5084810383526023815260200180610caa6023913960400184810382526025815260200180610cf3602591396040019550505050505060006040518083038186803b15801561053a57600080fd5b505af415801561054e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069f577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600173__$5e3d4bda46c81e962f48c99e99f980d175$__63d91bd6de9091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156106fe57600080fd5b505af4158015610712573d6000803e3d6000fd5b505050506040513d604081101561072857600080fd5b810190808051906020019092919080519060200190929190505050809350819250505050919050565b60006001800180549050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107d3610c2f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610834578082015181840152602081019050610819565b50505050905090810190601f1680156108615780820380516001836020036101000a031916815260200191505b5084810383526021815260200180610d186021913960400184810382526026815260200180610ccd602691396040019550505050505060006040518083038186803b1580156108af57600080fd5b505af41580156108c3573d6000803e3d6000fd5b50505050600173__$5e3d4bda46c81e962f48c99e99f980d175$__636fc55275909183846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561098157600080fd5b505af4158015610995573d6000803e3d6000fd5b505050506040513d60208110156109ab57600080fd5b81019080805190602001909291905050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600373__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce3169091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610a4557600080fd5b505af4158015610a59573d6000803e3d6000fd5b505050506040513d6020811015610a6f57600080fd5b81019080805190602001909291905050509050919050565b600173__$5e3d4bda46c81e962f48c99e99f980d175$__63e6ae03819091336040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610b0d57600080fd5b505af4158015610b21573d6000803e3d6000fd5b505050506040513d6020811015610b3757600080fd5b8101908080519060200190929190505050610b5157610c1c565b600373__$5e3d4bda46c81e962f48c99e99f980d175$__63691d2b6c909183336040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610bdf57600080fd5b505af4158015610bf3573d6000803e3d6000fd5b505050506040513d6020811015610c0957600080fd5b8101908080519060200190929190505050505b50565b6000600360010180549050905090565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f455252363131000000000000000000000000000000000000000000000000000081525090509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158208382393e20a2a1f7489ec6f0ce7e4556b01f54b7caac7022dfb8b20f5f7b6ed864736f6c63430005110032';
    export const deployedBytecode = '608060405234801561001057600080fd5b50600436106100885760003560e01c80637f692a2a1161005b5780637f692a2a146101a15780639ca651f8146101eb578063ba6dd3e514610259578063d8619d801461028757610088565b80630a452ad61461008d57806320cc0184146100d157806357f31a6c1461013f5780636cf5c9e51461015d575b600080fd5b6100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102a5565b005b6100fd600480360360208110156100e757600080fd5b81019080803590602001909291905050506106a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610147610751565b6040518082815260200191505060405180910390f35b61019f6004803603602081101561017357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610760565b005b6101a96109c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102176004803603602081101561020157600080fd5b81019080803590602001909291905050506109e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102856004803603602081101561026f57600080fd5b8101908080359060200190929190505050610a87565b005b61028f610c1f565b6040518082815260200191505060405180910390f35b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610318610c2f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561037957808201518184015260208101905061035e565b50505050905090810190601f1680156103a65780820380516001836020036101000a031916815260200191505b5084810383526021815260200180610d186021913960400184810382526026815260200180610ccd602691396040019550505050505060006040518083038186803b1580156103f457600080fd5b505af4158015610408573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461045e610c6c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156104bf5780820151818401526020810190506104a4565b50505050905090810190601f1680156104ec5780820380516001836020036101000a031916815260200191505b5084810383526023815260200180610caa6023913960400184810382526025815260200180610cf3602591396040019550505050505060006040518083038186803b15801561053a57600080fd5b505af415801561054e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069f577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600173__$5e3d4bda46c81e962f48c99e99f980d175$__63d91bd6de9091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156106fe57600080fd5b505af4158015610712573d6000803e3d6000fd5b505050506040513d604081101561072857600080fd5b810190808051906020019092919080519060200190929190505050809350819250505050919050565b60006001800180549050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107d3610c2f565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610834578082015181840152602081019050610819565b50505050905090810190601f1680156108615780820380516001836020036101000a031916815260200191505b5084810383526021815260200180610d186021913960400184810382526026815260200180610ccd602691396040019550505050505060006040518083038186803b1580156108af57600080fd5b505af41580156108c3573d6000803e3d6000fd5b50505050600173__$5e3d4bda46c81e962f48c99e99f980d175$__636fc55275909183846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b15801561098157600080fd5b505af4158015610995573d6000803e3d6000fd5b505050506040513d60208110156109ab57600080fd5b81019080805190602001909291905050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600373__$5e3d4bda46c81e962f48c99e99f980d175$__63d93ce3169091846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015610a4557600080fd5b505af4158015610a59573d6000803e3d6000fd5b505050506040513d6020811015610a6f57600080fd5b81019080805190602001909291905050509050919050565b600173__$5e3d4bda46c81e962f48c99e99f980d175$__63e6ae03819091336040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610b0d57600080fd5b505af4158015610b21573d6000803e3d6000fd5b505050506040513d6020811015610b3757600080fd5b8101908080519060200190929190505050610b5157610c1c565b600373__$5e3d4bda46c81e962f48c99e99f980d175$__63691d2b6c909183336040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b158015610bdf57600080fd5b505af4158015610bf3573d6000803e3d6000fd5b505050506040513d6020811015610c0957600080fd5b8101908080519060200190929190505050505b50565b6000600360010180549050905090565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f455252363131000000000000000000000000000000000000000000000000000081525090509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158208382393e20a2a1f7489ec6f0ce7e4556b01f54b7caac7022dfb8b20f5f7b6ed864736f6c63430005110032';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string, withContractMeta: boolean = false): Promise<string> {
        const codec = client.contractCodec(abi);
        const links = [{ name: "$ecfb6c4d3c3ceff197e19e585a0a53728c$", address: commons_base_ErrorsLib_sol_ErrorsLib }, { name: "$5e3d4bda46c81e962f48c99e99f980d175$", address: commons_collections_MappingsLib_sol_MappingsLib }];
        const linkedBytecode = linker(bytecode, links);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        return client.deploy(data, withContractMeta ? [{ abi: BpmServiceDb.abi, codeHash: new Keccak(256).update(linker(BpmServiceDb.deployedBytecode, links), "hex").digest("binary") }] : undefined);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string, withContractMeta: boolean = false): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib, commons_collections_MappingsLib_sol_MappingsLib, withContractMeta); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => unknown;
    const events = { LogSystemOwnerChanged: { signature: "0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogSystemOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { addActivityInstance(_id: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).addActivityInstance(_id);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addActivityInstance();
                });
            }, addProcessInstance(_address: string, call = defaultCall): Promise<void> {
                const data = encode(client).addProcessInstance(_address);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addProcessInstance();
                });
            }, getNumberOfActivityInstances(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfActivityInstances();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfActivityInstances();
                });
            }, getNumberOfProcessInstances(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfProcessInstances();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfProcessInstances();
                });
            }, getProcessInstanceAtIndex(_pos: number, call = defaultCall): Promise<{
                processInstanceAddress: string;
            }> {
                const data = encode(client).getProcessInstanceAtIndex(_pos);
                return call<{
                    processInstanceAddress: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getProcessInstanceAtIndex();
                });
            }, getProcessInstanceForActivity(_aiId: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getProcessInstanceForActivity(_aiId);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getProcessInstanceForActivity();
                });
            }, getSystemOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSystemOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSystemOwner();
                });
            }, transferSystemOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferSystemOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferSystemOwnership();
                });
            } } as const, listeners: { LogSystemOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogSystemOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        addActivityInstance: (_id: Buffer) => { return codec.encodeFunctionData("BA6DD3E5", _id); },
        addProcessInstance: (_address: string) => { return codec.encodeFunctionData("6CF5C9E5", _address); },
        getNumberOfActivityInstances: () => { return codec.encodeFunctionData("D8619D80"); },
        getNumberOfProcessInstances: () => { return codec.encodeFunctionData("57F31A6C"); },
        getProcessInstanceAtIndex: (_pos: number) => { return codec.encodeFunctionData("20CC0184", _pos); },
        getProcessInstanceForActivity: (_aiId: Buffer) => { return codec.encodeFunctionData("9CA651F8", _aiId); },
        getSystemOwner: () => { return codec.encodeFunctionData("7F692A2A"); },
        transferSystemOwnership: (_newOwner: string) => { return codec.encodeFunctionData("0A452AD6", _newOwner); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogSystemOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        addActivityInstance: (): void => { return; },
        addProcessInstance: (): void => { return; },
        getNumberOfActivityInstances: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("D8619D80", data);
            return { size: size };
        },
        getNumberOfProcessInstances: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("57F31A6C", data);
            return { size: size };
        },
        getProcessInstanceAtIndex: (): {
            processInstanceAddress: string;
        } => {
            const [processInstanceAddress] = codec.decodeFunctionResult ("20CC0184", data);
            return { processInstanceAddress: processInstanceAddress };
        },
        getProcessInstanceForActivity: (): [
            string
        ] => { return codec.decodeFunctionResult ("9CA651F8", data); },
        getSystemOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("7F692A2A", data); },
        transferSystemOwnership: (): void => { return; }
    }; };
}