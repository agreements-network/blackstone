//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CancelStreamSignal, ContractCodec, Event, linker, listenerFor, Result, Keccak } from "@hyperledger/burrow";
interface Provider {
    deploy(data: string | Uint8Array, contractMeta?: {
        abi: string;
        codeHash: Uint8Array;
    }[]): Promise<Address>;
    call(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    callSim(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const returnData = await (isSim ? client.callSim(data, addr) : client.call(data, addr));
    return callback(returnData);
}
export module ProcessInstance {
    export const contactName = "ProcessInstance";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"addressValue","type":"address"}],"name":"LogDataStorageUpdateAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"address[]","name":"addressArrayValue","type":"address[]"}],"name":"LogDataStorageUpdateAddressArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"boolValue","type":"bool"}],"name":"LogDataStorageUpdateBool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bool[]","name":"boolArrayValue","type":"bool[]"}],"name":"LogDataStorageUpdateBoolArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"bytes32Value","type":"bytes32"}],"name":"LogDataStorageUpdateBytes32","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"bytes32[]","name":"bytes32ArrayValue","type":"bytes32[]"}],"name":"LogDataStorageUpdateBytes32Array","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"intValue","type":"int256"}],"name":"LogDataStorageUpdateInt","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"int256[]","name":"intArrayValue","type":"int256[]"}],"name":"LogDataStorageUpdateIntArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"string","name":"stringValue","type":"string"}],"name":"LogDataStorageUpdateString","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"uintValue","type":"uint256"}],"name":"LogDataStorageUpdateUint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"storageAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"dataId","type":"bytes32"},{"indexed":false,"internalType":"uint256[]","name":"uintArrayValue","type":"uint256[]"}],"name":"LogDataStorageUpdateUintArray","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"entityAddress","type":"address"},{"indexed":false,"internalType":"address","name":"scopeAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"scopeContext","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"fixedScope","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"dataPath","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"dataStorageId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"dataStorage","type":"address"}],"name":"LogEntityAddressScopeUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogOwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"processInstanceAddress","type":"address"},{"indexed":false,"internalType":"address","name":"processDefinitionAddress","type":"address"},{"indexed":false,"internalType":"uint8","name":"state","type":"uint8"},{"indexed":false,"internalType":"address","name":"startedBy","type":"address"}],"name":"LogProcessInstanceCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"processInstanceAddress","type":"address"},{"indexed":false,"internalType":"uint8","name":"state","type":"uint8"}],"name":"LogProcessInstanceStateUpdate","type":"event"},{"constant":true,"inputs":[],"name":"EMPTY_SCOPE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_Address_Scopes","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_DATA_STORAGE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ENTITIES_ADDRESS_SCOPES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_PROCESS_INSTANCES","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"abort","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract ProcessStateChangeListener","name":"_listener","type":"address"}],"name":"addProcessStateChangeListener","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"}],"name":"completeActivity","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"address","name":"_value","type":"address"}],"name":"completeActivityWithAddressData","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"bool","name":"_value","type":"bool"}],"name":"completeActivityWithBoolData","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"bytes32","name":"_value","type":"bytes32"}],"name":"completeActivityWithBytes32Data","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"int256","name":"_value","type":"int256"}],"name":"completeActivityWithIntData","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"string","name":"_value","type":"string"}],"name":"completeActivityWithStringData","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"completeActivityWithUintData","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract BpmService","name":"_service","type":"address"}],"name":"execute","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"getActivityInDataAsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"getActivityInDataAsBool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"getActivityInDataAsBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"getActivityInDataAsInt","outputs":[{"internalType":"int256","name":"","type":"int256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"getActivityInDataAsString","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"getActivityInDataAsUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_idx","type":"uint256"}],"name":"getActivityInstanceAtIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getActivityInstanceData","outputs":[{"internalType":"bytes32","name":"activityId","type":"bytes32"},{"internalType":"uint256","name":"created","type":"uint256"},{"internalType":"uint256","name":"completed","type":"uint256"},{"internalType":"address","name":"performer","type":"address"},{"internalType":"address","name":"completedBy","type":"address"},{"internalType":"uint8","name":"state","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"_context","type":"bytes32"}],"name":"getAddressScopeDetails","outputs":[{"internalType":"bytes32","name":"fixedScope","type":"bytes32"},{"internalType":"bytes32","name":"dataPath","type":"bytes32"},{"internalType":"bytes32","name":"dataStorageId","type":"bytes32"},{"internalType":"address","name":"dataStorage","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_key","type":"bytes32"}],"name":"getAddressScopeDetailsForKey","outputs":[{"internalType":"address","name":"keyAddress","type":"address"},{"internalType":"bytes32","name":"keyContext","type":"bytes32"},{"internalType":"bytes32","name":"fixedScope","type":"bytes32"},{"internalType":"bytes32","name":"dataPath","type":"bytes32"},{"internalType":"bytes32","name":"dataStorageId","type":"bytes32"},{"internalType":"address","name":"dataStorage","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getAddressScopeKeys","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getArrayLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_eventInstanceId","type":"bytes32"}],"name":"getBoundaryEventDetails","outputs":[{"internalType":"uint8","name":"state","type":"uint8"},{"internalType":"uint256","name":"timerResolution","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"uint256","name":"_idx","type":"uint256"}],"name":"getBoundaryEventIdAtIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getDataIdAtIndex","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataType","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsInt","outputs":[{"internalType":"int256","name":"","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsString","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDataValueAsUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_idx","type":"uint256"}],"name":"getIntermediaEventIdAtIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_eventInstanceId","type":"bytes32"}],"name":"getIntermediateEventTimerTarget","outputs":[{"internalType":"uint256","name":"timerTarget","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfActivityInstances","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"}],"name":"getNumberOfBoundaryEventInstances","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfData","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfIntermediateEventInstances","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getProcessDefinition","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getStartedBy","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getState","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"initRuntime","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_processDefinition","type":"address"},{"internalType":"address","name":"_startedBy","type":"address"},{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"notifyProcessStateChange","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"removeData","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"_context","type":"bytes32"},{"internalType":"contract DataStorage","name":"_dataStorage","type":"address"}],"name":"resolveAddressScope","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"resolveInDataLocation","outputs":[{"internalType":"address","name":"dataStorage","type":"address"},{"internalType":"bytes32","name":"dataPath","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"}],"name":"resolveOutDataLocation","outputs":[{"internalType":"address","name":"dataStorage","type":"address"},{"internalType":"bytes32","name":"dataPath","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_transitionId","type":"bytes32"},{"internalType":"bytes32","name":"_targetId","type":"bytes32"}],"name":"resolveTransitionCondition","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"address","name":"_value","type":"address"}],"name":"setActivityOutDataAsAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"bool","name":"_value","type":"bool"}],"name":"setActivityOutDataAsBool","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"bytes32","name":"_value","type":"bytes32"}],"name":"setActivityOutDataAsBytes32","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"int256","name":"_value","type":"int256"}],"name":"setActivityOutDataAsInt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"string","name":"_value","type":"string"}],"name":"setActivityOutDataAsString","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_dataMappingId","type":"bytes32"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"setActivityOutDataAsUint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bytes32","name":"_context","type":"bytes32"},{"internalType":"bytes32","name":"_fixedScope","type":"bytes32"},{"internalType":"bytes32","name":"_dataPath","type":"bytes32"},{"internalType":"bytes32","name":"_dataStorageId","type":"bytes32"},{"internalType":"address","name":"_dataStorage","type":"address"}],"name":"setAddressScope","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_eventInstanceId","type":"bytes32"},{"internalType":"uint256","name":"_targetTime","type":"uint256"}],"name":"setBoundaryEventTimerTarget","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_value","type":"address"}],"name":"setDataValueAsAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address[]","name":"_value","type":"address[]"}],"name":"setDataValueAsAddressArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bool","name":"_value","type":"bool"}],"name":"setDataValueAsBool","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bool[]","name":"_value","type":"bool[]"}],"name":"setDataValueAsBoolArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bytes32","name":"_value","type":"bytes32"}],"name":"setDataValueAsBytes32","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"bytes32[]","name":"_value","type":"bytes32[]"}],"name":"setDataValueAsBytes32Array","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"int256","name":"_value","type":"int256"}],"name":"setDataValueAsInt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"int256[]","name":"_value","type":"int256[]"}],"name":"setDataValueAsIntArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"string","name":"_value","type":"string"}],"name":"setDataValueAsString","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"setDataValueAsUint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"uint256[]","name":"_value","type":"uint256[]"}],"name":"setDataValueAsUintArray","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_eventInstanceId","type":"bytes32"},{"internalType":"uint256","name":"_targetTime","type":"uint256"}],"name":"setIntermediateEventTimerTarget","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_activityInstanceId","type":"bytes32"},{"internalType":"bytes32","name":"_eventInstanceId","type":"bytes32"}],"name":"triggerBoundaryEvent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_eventInstanceId","type":"bytes32"},{"internalType":"contract BpmService","name":"_service","type":"address"}],"name":"triggerIntermediateEvent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => unknown;
    const events = { LogDataStorageUpdateAddress: { signature: "5F3782AABDDED4C30D0E717EEFA344F09585650AF94F12A59E413C35C874AA6E", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, addressValue: string) => ({ name: "LogDataStorageUpdateAddress", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressValue: addressValue } as const } as const) } as const, LogDataStorageUpdateAddressArray: { signature: "4FFF484425217F89CE50E27EB9F24A1260AF996F0D4A3726B57815DCA888C8EE", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, addressArrayValue: string[]) => ({ name: "LogDataStorageUpdateAddressArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressArrayValue: addressArrayValue } as const } as const) } as const, LogDataStorageUpdateBool: { signature: "4000BE176D38D7C89B64CED66D386475DB613BF81DDC0F1E78D0FE91585CEE3F", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, boolValue: boolean) => ({ name: "LogDataStorageUpdateBool", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolValue: boolValue } as const } as const) } as const, LogDataStorageUpdateBoolArray: { signature: "054258D5E91863B9C9D6664D6B19BA3C664F82481282BFD032F2C68053EF28A2", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, boolArrayValue: boolean[]) => ({ name: "LogDataStorageUpdateBoolArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolArrayValue: boolArrayValue } as const } as const) } as const, LogDataStorageUpdateBytes32: { signature: "175284BE8D23FFEAFF64148E54DDDF392131E21BDE39E27D34C23925799A9D3B", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, bytes32Value: Buffer) => ({ name: "LogDataStorageUpdateBytes32", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32Value: bytes32Value } as const } as const) } as const, LogDataStorageUpdateBytes32Array: { signature: "95C29751333E692A5607E8D9F8D042D14DE9AC9EF26EF50558D4A59F12B9B65F", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, bytes32ArrayValue: Buffer[]) => ({ name: "LogDataStorageUpdateBytes32Array", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32ArrayValue: bytes32ArrayValue } as const } as const) } as const, LogDataStorageUpdateInt: { signature: "4FAE6699EB0F881C4F8DF1E7D66305898984BD24CB684F775238368F1D77ACD3", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, intValue: number) => ({ name: "LogDataStorageUpdateInt", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intValue: intValue } as const } as const) } as const, LogDataStorageUpdateIntArray: { signature: "D6E61696415CDECD64DE4AEB6B7C4C524171A049D6844883FD60066AE6E1FF23", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, intArrayValue: number[]) => ({ name: "LogDataStorageUpdateIntArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intArrayValue: intArrayValue } as const } as const) } as const, LogDataStorageUpdateString: { signature: "DDC3E5BF46FC6E7FFE2506D0F0DCBA0625F68E6DB07BF879110EA3419E47BC29", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, stringValue: string) => ({ name: "LogDataStorageUpdateString", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, stringValue: stringValue } as const } as const) } as const, LogDataStorageUpdateUint: { signature: "07B481CBEAA4E99FD6638D014C6A9A7459F10E4FDF29E537F41D5FB037C30F35", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, uintValue: number) => ({ name: "LogDataStorageUpdateUint", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintValue: uintValue } as const } as const) } as const, LogDataStorageUpdateUintArray: { signature: "A37058671AEDF6CC65626AB2E805CB856E17E10FC82582B6E878EE4AED1F0ECD", tagged: (eventId: Buffer, storageAddress: string, dataId: Buffer, uintArrayValue: number[]) => ({ name: "LogDataStorageUpdateUintArray", payload: { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintArrayValue: uintArrayValue } as const } as const) } as const, LogEntityAddressScopeUpdate: { signature: "757FFF527744F487D9C9EC5DF491336680EF60ECCF50F97A494EB216E66725B9", tagged: (eventId: Buffer, entityAddress: string, scopeAddress: string, scopeContext: Buffer, fixedScope: Buffer, dataPath: Buffer, dataStorageId: Buffer, dataStorage: string) => ({ name: "LogEntityAddressScopeUpdate", payload: { eventId: eventId, entityAddress: entityAddress, scopeAddress: scopeAddress, scopeContext: scopeContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage } as const } as const) } as const, LogOwnerChanged: { signature: "FCF23A92150D56E85E3A3D33B357493246E55783095EB6A733EB8439FFC752C8", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const, LogProcessInstanceCreation: { signature: "3F4F1F4296FDBD3AFD2993CD0FA49B02B3B0AC165C0176C52BEEF3BB9FA6B56D", tagged: (eventId: Buffer, processInstanceAddress: string, processDefinitionAddress: string, state: number, startedBy: string) => ({ name: "LogProcessInstanceCreation", payload: { eventId: eventId, processInstanceAddress: processInstanceAddress, processDefinitionAddress: processDefinitionAddress, state: state, startedBy: startedBy } as const } as const) } as const, LogProcessInstanceStateUpdate: { signature: "BD6E1001C3E7D7E3C0E2AFE4E53839165BF847599263271503E06BFBD7DF6CAC", tagged: (eventId: Buffer, processInstanceAddress: string, state: number) => ({ name: "LogProcessInstanceStateUpdate", payload: { eventId: eventId, processInstanceAddress: processInstanceAddress, state: state } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { EMPTY_SCOPE(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EMPTY_SCOPE();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EMPTY_SCOPE();
                });
            }, ERC165_ID_Address_Scopes(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_Address_Scopes();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_Address_Scopes();
                });
            }, ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, EVENT_ID_DATA_STORAGE(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_DATA_STORAGE();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_DATA_STORAGE();
                });
            }, EVENT_ID_ENTITIES_ADDRESS_SCOPES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ENTITIES_ADDRESS_SCOPES();
                });
            }, EVENT_ID_PROCESS_INSTANCES(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_PROCESS_INSTANCES();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_PROCESS_INSTANCES();
                });
            }, abort(call = defaultCall): Promise<void> {
                const data = encode(client).abort();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).abort();
                });
            }, addProcessStateChangeListener(_listener: string, call = defaultCall): Promise<void> {
                const data = encode(client).addProcessStateChangeListener(_listener);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addProcessStateChangeListener();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, completeActivity(_activityInstanceId: Buffer, _service: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).completeActivity(_activityInstanceId, _service);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).completeActivity();
                });
            }, completeActivityWithAddressData(_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).completeActivityWithAddressData(_activityInstanceId, _service, _dataMappingId, _value);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).completeActivityWithAddressData();
                });
            }, completeActivityWithBoolData(_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: boolean, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).completeActivityWithBoolData(_activityInstanceId, _service, _dataMappingId, _value);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).completeActivityWithBoolData();
                });
            }, completeActivityWithBytes32Data(_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: Buffer, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).completeActivityWithBytes32Data(_activityInstanceId, _service, _dataMappingId, _value);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).completeActivityWithBytes32Data();
                });
            }, completeActivityWithIntData(_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: number, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).completeActivityWithIntData(_activityInstanceId, _service, _dataMappingId, _value);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).completeActivityWithIntData();
                });
            }, completeActivityWithStringData(_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).completeActivityWithStringData(_activityInstanceId, _service, _dataMappingId, _value);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).completeActivityWithStringData();
                });
            }, completeActivityWithUintData(_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: number, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).completeActivityWithUintData(_activityInstanceId, _service, _dataMappingId, _value);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).completeActivityWithUintData();
                });
            }, execute(_service: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).execute(_service);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).execute();
                });
            }, getActivityInDataAsAddress(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getActivityInDataAsAddress(_activityInstanceId, _dataMappingId);
                return call<[
                    string
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInDataAsAddress();
                });
            }, getActivityInDataAsBool(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).getActivityInDataAsBool(_activityInstanceId, _dataMappingId);
                return call<[
                    boolean
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInDataAsBool();
                });
            }, getActivityInDataAsBytes32(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getActivityInDataAsBytes32(_activityInstanceId, _dataMappingId);
                return call<[
                    Buffer
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInDataAsBytes32();
                });
            }, getActivityInDataAsInt(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getActivityInDataAsInt(_activityInstanceId, _dataMappingId);
                return call<[
                    number
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInDataAsInt();
                });
            }, getActivityInDataAsString(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getActivityInDataAsString(_activityInstanceId, _dataMappingId);
                return call<[
                    string
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInDataAsString();
                });
            }, getActivityInDataAsUint(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getActivityInDataAsUint(_activityInstanceId, _dataMappingId);
                return call<[
                    number
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInDataAsUint();
                });
            }, getActivityInstanceAtIndex(_idx: number, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getActivityInstanceAtIndex(_idx);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInstanceAtIndex();
                });
            }, getActivityInstanceData(_id: Buffer, call = defaultCall): Promise<{
                activityId: Buffer;
                created: number;
                completed: number;
                performer: string;
                completedBy: string;
                state: number;
            }> {
                const data = encode(client).getActivityInstanceData(_id);
                return call<{
                    activityId: Buffer;
                    created: number;
                    completed: number;
                    performer: string;
                    completedBy: string;
                    state: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getActivityInstanceData();
                });
            }, getAddressScopeDetails(_address: string, _context: Buffer, call = defaultCall): Promise<{
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }> {
                const data = encode(client).getAddressScopeDetails(_address, _context);
                return call<{
                    fixedScope: Buffer;
                    dataPath: Buffer;
                    dataStorageId: Buffer;
                    dataStorage: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAddressScopeDetails();
                });
            }, getAddressScopeDetailsForKey(_key: Buffer, call = defaultCall): Promise<{
                keyAddress: string;
                keyContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }> {
                const data = encode(client).getAddressScopeDetailsForKey(_key);
                return call<{
                    keyAddress: string;
                    keyContext: Buffer;
                    fixedScope: Buffer;
                    dataPath: Buffer;
                    dataStorageId: Buffer;
                    dataStorage: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAddressScopeDetailsForKey();
                });
            }, getAddressScopeKeys(call = defaultCall): Promise<[
                Buffer[]
            ]> {
                const data = encode(client).getAddressScopeKeys();
                return call<[
                    Buffer[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getAddressScopeKeys();
                });
            }, getArrayLength(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArrayLength(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArrayLength();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getBoundaryEventDetails(_activityInstanceId: Buffer, _eventInstanceId: Buffer, call = defaultCall): Promise<{
                state: number;
                timerResolution: number;
            }> {
                const data = encode(client).getBoundaryEventDetails(_activityInstanceId, _eventInstanceId);
                return call<{
                    state: number;
                    timerResolution: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getBoundaryEventDetails();
                });
            }, getBoundaryEventIdAtIndex(_activityInstanceId: Buffer, _idx: number, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getBoundaryEventIdAtIndex(_activityInstanceId, _idx);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getBoundaryEventIdAtIndex();
                });
            }, getDataIdAtIndex(_index: number, call = defaultCall): Promise<{
                error: number;
                id: Buffer;
            }> {
                const data = encode(client).getDataIdAtIndex(_index);
                return call<{
                    error: number;
                    id: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataIdAtIndex();
                });
            }, getDataType(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getDataType(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataType();
                });
            }, getDataValueAsAddress(_id: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getDataValueAsAddress(_id);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsAddress();
                });
            }, getDataValueAsAddressArray(_id: Buffer, call = defaultCall): Promise<[
                string[]
            ]> {
                const data = encode(client).getDataValueAsAddressArray(_id);
                return call<[
                    string[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsAddressArray();
                });
            }, getDataValueAsBool(_id: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).getDataValueAsBool(_id);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBool();
                });
            }, getDataValueAsBoolArray(_id: Buffer, call = defaultCall): Promise<[
                boolean[]
            ]> {
                const data = encode(client).getDataValueAsBoolArray(_id);
                return call<[
                    boolean[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBoolArray();
                });
            }, getDataValueAsBytes32(_id: Buffer, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getDataValueAsBytes32(_id);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBytes32();
                });
            }, getDataValueAsBytes32Array(_id: Buffer, call = defaultCall): Promise<[
                Buffer[]
            ]> {
                const data = encode(client).getDataValueAsBytes32Array(_id);
                return call<[
                    Buffer[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsBytes32Array();
                });
            }, getDataValueAsInt(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getDataValueAsInt(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsInt();
                });
            }, getDataValueAsIntArray(_id: Buffer, call = defaultCall): Promise<[
                number[]
            ]> {
                const data = encode(client).getDataValueAsIntArray(_id);
                return call<[
                    number[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsIntArray();
                });
            }, getDataValueAsString(_id: Buffer, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getDataValueAsString(_id);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsString();
                });
            }, getDataValueAsUint(_id: Buffer, call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getDataValueAsUint(_id);
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsUint();
                });
            }, getDataValueAsUintArray(_id: Buffer, call = defaultCall): Promise<[
                number[]
            ]> {
                const data = encode(client).getDataValueAsUintArray(_id);
                return call<[
                    number[]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDataValueAsUintArray();
                });
            }, getIntermediaEventIdAtIndex(_idx: number, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).getIntermediaEventIdAtIndex(_idx);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getIntermediaEventIdAtIndex();
                });
            }, getIntermediateEventTimerTarget(_eventInstanceId: Buffer, call = defaultCall): Promise<{
                timerTarget: number;
            }> {
                const data = encode(client).getIntermediateEventTimerTarget(_eventInstanceId);
                return call<{
                    timerTarget: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).getIntermediateEventTimerTarget();
                });
            }, getNumberOfActivityInstances(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfActivityInstances();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfActivityInstances();
                });
            }, getNumberOfBoundaryEventInstances(_activityInstanceId: Buffer, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfBoundaryEventInstances(_activityInstanceId);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfBoundaryEventInstances();
                });
            }, getNumberOfData(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfData();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfData();
                });
            }, getNumberOfIntermediateEventInstances(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfIntermediateEventInstances();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfIntermediateEventInstances();
                });
            }, getProcessDefinition(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getProcessDefinition();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getProcessDefinition();
                });
            }, getStartedBy(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getStartedBy();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getStartedBy();
                });
            }, getState(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getState();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getState();
                });
            }, initRuntime(call = defaultCall): Promise<void> {
                const data = encode(client).initRuntime();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initRuntime();
                });
            }, initialize(_processDefinition: string, _startedBy: string, _activityInstanceId: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).initialize(_processDefinition, _startedBy, _activityInstanceId);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initialize();
                });
            }, notifyProcessStateChange(call = defaultCall): Promise<void> {
                const data = encode(client).notifyProcessStateChange();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).notifyProcessStateChange();
                });
            }, removeData(_id: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).removeData(_id);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeData();
                });
            }, resolveAddressScope(_address: string, _context: Buffer, _dataStorage: string, call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).resolveAddressScope(_address, _context, _dataStorage);
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).resolveAddressScope();
                });
            }, resolveInDataLocation(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<{
                dataStorage: string;
                dataPath: Buffer;
            }> {
                const data = encode(client).resolveInDataLocation(_activityInstanceId, _dataMappingId);
                return call<{
                    dataStorage: string;
                    dataPath: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).resolveInDataLocation();
                });
            }, resolveOutDataLocation(_activityInstanceId: Buffer, _dataMappingId: Buffer, call = defaultCall): Promise<{
                dataStorage: string;
                dataPath: Buffer;
            }> {
                const data = encode(client).resolveOutDataLocation(_activityInstanceId, _dataMappingId);
                return call<{
                    dataStorage: string;
                    dataPath: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).resolveOutDataLocation();
                });
            }, resolveTransitionCondition(_transitionId: Buffer, _targetId: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).resolveTransitionCondition(_transitionId, _targetId);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).resolveTransitionCondition();
                });
            }, setActivityOutDataAsAddress(_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: string, call = defaultCall): Promise<void> {
                const data = encode(client).setActivityOutDataAsAddress(_activityInstanceId, _dataMappingId, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setActivityOutDataAsAddress();
                });
            }, setActivityOutDataAsBool(_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: boolean, call = defaultCall): Promise<void> {
                const data = encode(client).setActivityOutDataAsBool(_activityInstanceId, _dataMappingId, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setActivityOutDataAsBool();
                });
            }, setActivityOutDataAsBytes32(_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).setActivityOutDataAsBytes32(_activityInstanceId, _dataMappingId, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setActivityOutDataAsBytes32();
                });
            }, setActivityOutDataAsInt(_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: number, call = defaultCall): Promise<void> {
                const data = encode(client).setActivityOutDataAsInt(_activityInstanceId, _dataMappingId, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setActivityOutDataAsInt();
                });
            }, setActivityOutDataAsString(_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: string, call = defaultCall): Promise<void> {
                const data = encode(client).setActivityOutDataAsString(_activityInstanceId, _dataMappingId, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setActivityOutDataAsString();
                });
            }, setActivityOutDataAsUint(_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: number, call = defaultCall): Promise<void> {
                const data = encode(client).setActivityOutDataAsUint(_activityInstanceId, _dataMappingId, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setActivityOutDataAsUint();
                });
            }, setAddressScope(_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string, call = defaultCall): Promise<void> {
                const data = encode(client).setAddressScope(_address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setAddressScope();
                });
            }, setBoundaryEventTimerTarget(_activityInstanceId: Buffer, _eventInstanceId: Buffer, _targetTime: number, call = defaultCall): Promise<void> {
                const data = encode(client).setBoundaryEventTimerTarget(_activityInstanceId, _eventInstanceId, _targetTime);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setBoundaryEventTimerTarget();
                });
            }, setDataValueAsAddress(_id: Buffer, _value: string, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsAddress(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsAddress();
                });
            }, setDataValueAsAddressArray(_id: Buffer, _value: string[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsAddressArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsAddressArray();
                });
            }, setDataValueAsBool(_id: Buffer, _value: boolean, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBool(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBool();
                });
            }, setDataValueAsBoolArray(_id: Buffer, _value: boolean[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBoolArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBoolArray();
                });
            }, setDataValueAsBytes32(_id: Buffer, _value: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBytes32(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBytes32();
                });
            }, setDataValueAsBytes32Array(_id: Buffer, _value: Buffer[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsBytes32Array(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsBytes32Array();
                });
            }, setDataValueAsInt(_id: Buffer, _value: number, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsInt(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsInt();
                });
            }, setDataValueAsIntArray(_id: Buffer, _value: number[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsIntArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsIntArray();
                });
            }, setDataValueAsString(_id: Buffer, _value: string, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsString(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsString();
                });
            }, setDataValueAsUint(_id: Buffer, _value: number, call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsUint(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsUint();
                });
            }, setDataValueAsUintArray(_id: Buffer, _value: number[], call = defaultCall): Promise<void> {
                const data = encode(client).setDataValueAsUintArray(_id, _value);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setDataValueAsUintArray();
                });
            }, setIntermediateEventTimerTarget(_eventInstanceId: Buffer, _targetTime: number, call = defaultCall): Promise<void> {
                const data = encode(client).setIntermediateEventTimerTarget(_eventInstanceId, _targetTime);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setIntermediateEventTimerTarget();
                });
            }, transferOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferOwnership();
                });
            }, triggerBoundaryEvent(_activityInstanceId: Buffer, _eventInstanceId: Buffer, call = defaultCall): Promise<void> {
                const data = encode(client).triggerBoundaryEvent(_activityInstanceId, _eventInstanceId);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).triggerBoundaryEvent();
                });
            }, triggerIntermediateEvent(_eventInstanceId: Buffer, _service: string, call = defaultCall): Promise<void> {
                const data = encode(client).triggerIntermediateEvent(_eventInstanceId, _service);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).triggerIntermediateEvent();
                });
            } } as const, listeners: { LogDataStorageUpdateAddress(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                addressValue: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["5F3782AABDDED4C30D0E717EEFA344F09585650AF94F12A59E413C35C874AA6E"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateAddress()); }, start, end); }, LogDataStorageUpdateAddressArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                addressArrayValue: string[];
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["4FFF484425217F89CE50E27EB9F24A1260AF996F0D4A3726B57815DCA888C8EE"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateAddressArray()); }, start, end); }, LogDataStorageUpdateBool(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                boolValue: boolean;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["4000BE176D38D7C89B64CED66D386475DB613BF81DDC0F1E78D0FE91585CEE3F"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateBool()); }, start, end); }, LogDataStorageUpdateBoolArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                boolArrayValue: boolean[];
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["054258D5E91863B9C9D6664D6B19BA3C664F82481282BFD032F2C68053EF28A2"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateBoolArray()); }, start, end); }, LogDataStorageUpdateBytes32(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                bytes32Value: Buffer;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["175284BE8D23FFEAFF64148E54DDDF392131E21BDE39E27D34C23925799A9D3B"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateBytes32()); }, start, end); }, LogDataStorageUpdateBytes32Array(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                bytes32ArrayValue: Buffer[];
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["95C29751333E692A5607E8D9F8D042D14DE9AC9EF26EF50558D4A59F12B9B65F"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateBytes32Array()); }, start, end); }, LogDataStorageUpdateInt(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                intValue: number;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["4FAE6699EB0F881C4F8DF1E7D66305898984BD24CB684F775238368F1D77ACD3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateInt()); }, start, end); }, LogDataStorageUpdateIntArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                intArrayValue: number[];
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["D6E61696415CDECD64DE4AEB6B7C4C524171A049D6844883FD60066AE6E1FF23"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateIntArray()); }, start, end); }, LogDataStorageUpdateString(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                stringValue: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["DDC3E5BF46FC6E7FFE2506D0F0DCBA0625F68E6DB07BF879110EA3419E47BC29"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateString()); }, start, end); }, LogDataStorageUpdateUint(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                uintValue: number;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["07B481CBEAA4E99FD6638D014C6A9A7459F10E4FDF29E537F41D5FB037C30F35"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateUint()); }, start, end); }, LogDataStorageUpdateUintArray(callback: (err?: Error, event?: {
                eventId: Buffer;
                storageAddress: string;
                dataId: Buffer;
                uintArrayValue: number[];
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["A37058671AEDF6CC65626AB2E805CB856E17E10FC82582B6E878EE4AED1F0ECD"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogDataStorageUpdateUintArray()); }, start, end); }, LogEntityAddressScopeUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                entityAddress: string;
                scopeAddress: string;
                scopeContext: Buffer;
                fixedScope: Buffer;
                dataPath: Buffer;
                dataStorageId: Buffer;
                dataStorage: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["757FFF527744F487D9C9EC5DF491336680EF60ECCF50F97A494EB216E66725B9"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogEntityAddressScopeUpdate()); }, start, end); }, LogOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["FCF23A92150D56E85E3A3D33B357493246E55783095EB6A733EB8439FFC752C8"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogOwnerChanged()); }, start, end); }, LogProcessInstanceCreation(callback: (err?: Error, event?: {
                eventId: Buffer;
                processInstanceAddress: string;
                processDefinitionAddress: string;
                state: number;
                startedBy: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["3F4F1F4296FDBD3AFD2993CD0FA49B02B3B0AC165C0176C52BEEF3BB9FA6B56D"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogProcessInstanceCreation()); }, start, end); }, LogProcessInstanceStateUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                processInstanceAddress: string;
                state: number;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["BD6E1001C3E7D7E3C0E2AFE4E53839165BF847599263271503E06BFBD7DF6CAC"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogProcessInstanceStateUpdate()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        EMPTY_SCOPE: () => { return codec.encodeFunctionData("F6EC229E"); },
        ERC165_ID_Address_Scopes: () => { return codec.encodeFunctionData("BD9E0660"); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        EVENT_ID_DATA_STORAGE: () => { return codec.encodeFunctionData("D42EA976"); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: () => { return codec.encodeFunctionData("B7D64777"); },
        EVENT_ID_PROCESS_INSTANCES: () => { return codec.encodeFunctionData("50396E1C"); },
        abort: () => { return codec.encodeFunctionData("35A063B4"); },
        addProcessStateChangeListener: (_listener: string) => { return codec.encodeFunctionData("3DF4CAF2", _listener); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        completeActivity: (_activityInstanceId: Buffer, _service: string) => { return codec.encodeFunctionData("68180951", _activityInstanceId, _service); },
        completeActivityWithAddressData: (_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: string) => { return codec.encodeFunctionData("942F7C5B", _activityInstanceId, _service, _dataMappingId, _value); },
        completeActivityWithBoolData: (_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: boolean) => { return codec.encodeFunctionData("9BD8E439", _activityInstanceId, _service, _dataMappingId, _value); },
        completeActivityWithBytes32Data: (_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: Buffer) => { return codec.encodeFunctionData("70EC993E", _activityInstanceId, _service, _dataMappingId, _value); },
        completeActivityWithIntData: (_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: number) => { return codec.encodeFunctionData("84096931", _activityInstanceId, _service, _dataMappingId, _value); },
        completeActivityWithStringData: (_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: string) => { return codec.encodeFunctionData("8F70172D", _activityInstanceId, _service, _dataMappingId, _value); },
        completeActivityWithUintData: (_activityInstanceId: Buffer, _service: string, _dataMappingId: Buffer, _value: number) => { return codec.encodeFunctionData("D8389BBA", _activityInstanceId, _service, _dataMappingId, _value); },
        execute: (_service: string) => { return codec.encodeFunctionData("4B64E492", _service); },
        getActivityInDataAsAddress: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("481EA63D", _activityInstanceId, _dataMappingId); },
        getActivityInDataAsBool: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("79594884", _activityInstanceId, _dataMappingId); },
        getActivityInDataAsBytes32: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("A32DD3B2", _activityInstanceId, _dataMappingId); },
        getActivityInDataAsInt: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("37E567A0", _activityInstanceId, _dataMappingId); },
        getActivityInDataAsString: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("26A3BA26", _activityInstanceId, _dataMappingId); },
        getActivityInDataAsUint: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("C2334A5A", _activityInstanceId, _dataMappingId); },
        getActivityInstanceAtIndex: (_idx: number) => { return codec.encodeFunctionData("21CB9B63", _idx); },
        getActivityInstanceData: (_id: Buffer) => { return codec.encodeFunctionData("DB8168FC", _id); },
        getAddressScopeDetails: (_address: string, _context: Buffer) => { return codec.encodeFunctionData("9561AA32", _address, _context); },
        getAddressScopeDetailsForKey: (_key: Buffer) => { return codec.encodeFunctionData("FE3C84B2", _key); },
        getAddressScopeKeys: () => { return codec.encodeFunctionData("70A9C997"); },
        getArrayLength: (_id: Buffer) => { return codec.encodeFunctionData("AA0AC16F", _id); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getBoundaryEventDetails: (_activityInstanceId: Buffer, _eventInstanceId: Buffer) => { return codec.encodeFunctionData("C516BF34", _activityInstanceId, _eventInstanceId); },
        getBoundaryEventIdAtIndex: (_activityInstanceId: Buffer, _idx: number) => { return codec.encodeFunctionData("9AA22E8E", _activityInstanceId, _idx); },
        getDataIdAtIndex: (_index: number) => { return codec.encodeFunctionData("374B7D22", _index); },
        getDataType: (_id: Buffer) => { return codec.encodeFunctionData("31502F13", _id); },
        getDataValueAsAddress: (_id: Buffer) => { return codec.encodeFunctionData("F364E379", _id); },
        getDataValueAsAddressArray: (_id: Buffer) => { return codec.encodeFunctionData("EEB8B809", _id); },
        getDataValueAsBool: (_id: Buffer) => { return codec.encodeFunctionData("30C676C9", _id); },
        getDataValueAsBoolArray: (_id: Buffer) => { return codec.encodeFunctionData("D734C53A", _id); },
        getDataValueAsBytes32: (_id: Buffer) => { return codec.encodeFunctionData("2512E6F1", _id); },
        getDataValueAsBytes32Array: (_id: Buffer) => { return codec.encodeFunctionData("FCB4862A", _id); },
        getDataValueAsInt: (_id: Buffer) => { return codec.encodeFunctionData("E2BE8FE1", _id); },
        getDataValueAsIntArray: (_id: Buffer) => { return codec.encodeFunctionData("F0A40527", _id); },
        getDataValueAsString: (_id: Buffer) => { return codec.encodeFunctionData("D2E8A0FA", _id); },
        getDataValueAsUint: (_id: Buffer) => { return codec.encodeFunctionData("35CE1BD1", _id); },
        getDataValueAsUintArray: (_id: Buffer) => { return codec.encodeFunctionData("31185182", _id); },
        getIntermediaEventIdAtIndex: (_idx: number) => { return codec.encodeFunctionData("6380B16B", _idx); },
        getIntermediateEventTimerTarget: (_eventInstanceId: Buffer) => { return codec.encodeFunctionData("0AB8E5BD", _eventInstanceId); },
        getNumberOfActivityInstances: () => { return codec.encodeFunctionData("D8619D80"); },
        getNumberOfBoundaryEventInstances: (_activityInstanceId: Buffer) => { return codec.encodeFunctionData("F895D327", _activityInstanceId); },
        getNumberOfData: () => { return codec.encodeFunctionData("5666F9AC"); },
        getNumberOfIntermediateEventInstances: () => { return codec.encodeFunctionData("8CE5C7C9"); },
        getProcessDefinition: () => { return codec.encodeFunctionData("FCFB0C58"); },
        getStartedBy: () => { return codec.encodeFunctionData("A0826E06"); },
        getState: () => { return codec.encodeFunctionData("1865C57D"); },
        initRuntime: () => { return codec.encodeFunctionData("6CAD8FBF"); },
        initialize: (_processDefinition: string, _startedBy: string, _activityInstanceId: Buffer) => { return codec.encodeFunctionData("6133F985", _processDefinition, _startedBy, _activityInstanceId); },
        notifyProcessStateChange: () => { return codec.encodeFunctionData("5BCCC36D"); },
        removeData: (_id: Buffer) => { return codec.encodeFunctionData("47DD48E0", _id); },
        resolveAddressScope: (_address: string, _context: Buffer, _dataStorage: string) => { return codec.encodeFunctionData("3C0E5245", _address, _context, _dataStorage); },
        resolveInDataLocation: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("2CEB8B18", _activityInstanceId, _dataMappingId); },
        resolveOutDataLocation: (_activityInstanceId: Buffer, _dataMappingId: Buffer) => { return codec.encodeFunctionData("D6256976", _activityInstanceId, _dataMappingId); },
        resolveTransitionCondition: (_transitionId: Buffer, _targetId: Buffer) => { return codec.encodeFunctionData("EA45DAED", _transitionId, _targetId); },
        setActivityOutDataAsAddress: (_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: string) => { return codec.encodeFunctionData("0FE71EBC", _activityInstanceId, _dataMappingId, _value); },
        setActivityOutDataAsBool: (_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: boolean) => { return codec.encodeFunctionData("9CC222BD", _activityInstanceId, _dataMappingId, _value); },
        setActivityOutDataAsBytes32: (_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: Buffer) => { return codec.encodeFunctionData("EE348522", _activityInstanceId, _dataMappingId, _value); },
        setActivityOutDataAsInt: (_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: number) => { return codec.encodeFunctionData("E93EB8B2", _activityInstanceId, _dataMappingId, _value); },
        setActivityOutDataAsString: (_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: string) => { return codec.encodeFunctionData("C6059FB1", _activityInstanceId, _dataMappingId, _value); },
        setActivityOutDataAsUint: (_activityInstanceId: Buffer, _dataMappingId: Buffer, _value: number) => { return codec.encodeFunctionData("2A819AF7", _activityInstanceId, _dataMappingId, _value); },
        setAddressScope: (_address: string, _context: Buffer, _fixedScope: Buffer, _dataPath: Buffer, _dataStorageId: Buffer, _dataStorage: string) => { return codec.encodeFunctionData("6D73C8BC", _address, _context, _fixedScope, _dataPath, _dataStorageId, _dataStorage); },
        setBoundaryEventTimerTarget: (_activityInstanceId: Buffer, _eventInstanceId: Buffer, _targetTime: number) => { return codec.encodeFunctionData("FA8B2493", _activityInstanceId, _eventInstanceId, _targetTime); },
        setDataValueAsAddress: (_id: Buffer, _value: string) => { return codec.encodeFunctionData("68E78011", _id, _value); },
        setDataValueAsAddressArray: (_id: Buffer, _value: string[]) => { return codec.encodeFunctionData("641375AD", _id, _value); },
        setDataValueAsBool: (_id: Buffer, _value: boolean) => { return codec.encodeFunctionData("1CB35540", _id, _value); },
        setDataValueAsBoolArray: (_id: Buffer, _value: boolean[]) => { return codec.encodeFunctionData("F5081E9F", _id, _value); },
        setDataValueAsBytes32: (_id: Buffer, _value: Buffer) => { return codec.encodeFunctionData("8AA137F5", _id, _value); },
        setDataValueAsBytes32Array: (_id: Buffer, _value: Buffer[]) => { return codec.encodeFunctionData("EDEC4C4F", _id, _value); },
        setDataValueAsInt: (_id: Buffer, _value: number) => { return codec.encodeFunctionData("720E72E9", _id, _value); },
        setDataValueAsIntArray: (_id: Buffer, _value: number[]) => { return codec.encodeFunctionData("6D6A7E8F", _id, _value); },
        setDataValueAsString: (_id: Buffer, _value: string) => { return codec.encodeFunctionData("1C5422D2", _id, _value); },
        setDataValueAsUint: (_id: Buffer, _value: number) => { return codec.encodeFunctionData("F3420D1A", _id, _value); },
        setDataValueAsUintArray: (_id: Buffer, _value: number[]) => { return codec.encodeFunctionData("94E38624", _id, _value); },
        setIntermediateEventTimerTarget: (_eventInstanceId: Buffer, _targetTime: number) => { return codec.encodeFunctionData("12CBCC5F", _eventInstanceId, _targetTime); },
        transferOwnership: (_newOwner: string) => { return codec.encodeFunctionData("F2FDE38B", _newOwner); },
        triggerBoundaryEvent: (_activityInstanceId: Buffer, _eventInstanceId: Buffer) => { return codec.encodeFunctionData("B3D0006D", _activityInstanceId, _eventInstanceId); },
        triggerIntermediateEvent: (_eventInstanceId: Buffer, _service: string) => { return codec.encodeFunctionData("79EA5A6E", _eventInstanceId, _service); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogDataStorageUpdateAddress: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            addressValue: string;
        } => {
            const [eventId, storageAddress, dataId, addressValue] = codec.decodeEventLog ("5F3782AABDDED4C30D0E717EEFA344F09585650AF94F12A59E413C35C874AA6E", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressValue: addressValue };
        },
        LogDataStorageUpdateAddressArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            addressArrayValue: string[];
        } => {
            const [eventId, storageAddress, dataId, addressArrayValue] = codec.decodeEventLog ("4FFF484425217F89CE50E27EB9F24A1260AF996F0D4A3726B57815DCA888C8EE", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, addressArrayValue: addressArrayValue };
        },
        LogDataStorageUpdateBool: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            boolValue: boolean;
        } => {
            const [eventId, storageAddress, dataId, boolValue] = codec.decodeEventLog ("4000BE176D38D7C89B64CED66D386475DB613BF81DDC0F1E78D0FE91585CEE3F", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolValue: boolValue };
        },
        LogDataStorageUpdateBoolArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            boolArrayValue: boolean[];
        } => {
            const [eventId, storageAddress, dataId, boolArrayValue] = codec.decodeEventLog ("054258D5E91863B9C9D6664D6B19BA3C664F82481282BFD032F2C68053EF28A2", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, boolArrayValue: boolArrayValue };
        },
        LogDataStorageUpdateBytes32: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            bytes32Value: Buffer;
        } => {
            const [eventId, storageAddress, dataId, bytes32Value] = codec.decodeEventLog ("175284BE8D23FFEAFF64148E54DDDF392131E21BDE39E27D34C23925799A9D3B", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32Value: bytes32Value };
        },
        LogDataStorageUpdateBytes32Array: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            bytes32ArrayValue: Buffer[];
        } => {
            const [eventId, storageAddress, dataId, bytes32ArrayValue] = codec.decodeEventLog ("95C29751333E692A5607E8D9F8D042D14DE9AC9EF26EF50558D4A59F12B9B65F", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, bytes32ArrayValue: bytes32ArrayValue };
        },
        LogDataStorageUpdateInt: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            intValue: number;
        } => {
            const [eventId, storageAddress, dataId, intValue] = codec.decodeEventLog ("4FAE6699EB0F881C4F8DF1E7D66305898984BD24CB684F775238368F1D77ACD3", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intValue: intValue };
        },
        LogDataStorageUpdateIntArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            intArrayValue: number[];
        } => {
            const [eventId, storageAddress, dataId, intArrayValue] = codec.decodeEventLog ("D6E61696415CDECD64DE4AEB6B7C4C524171A049D6844883FD60066AE6E1FF23", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, intArrayValue: intArrayValue };
        },
        LogDataStorageUpdateString: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            stringValue: string;
        } => {
            const [eventId, storageAddress, dataId, stringValue] = codec.decodeEventLog ("DDC3E5BF46FC6E7FFE2506D0F0DCBA0625F68E6DB07BF879110EA3419E47BC29", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, stringValue: stringValue };
        },
        LogDataStorageUpdateUint: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            uintValue: number;
        } => {
            const [eventId, storageAddress, dataId, uintValue] = codec.decodeEventLog ("07B481CBEAA4E99FD6638D014C6A9A7459F10E4FDF29E537F41D5FB037C30F35", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintValue: uintValue };
        },
        LogDataStorageUpdateUintArray: (): {
            eventId: Buffer;
            storageAddress: string;
            dataId: Buffer;
            uintArrayValue: number[];
        } => {
            const [eventId, storageAddress, dataId, uintArrayValue] = codec.decodeEventLog ("A37058671AEDF6CC65626AB2E805CB856E17E10FC82582B6E878EE4AED1F0ECD", data, topics);
            return { eventId: eventId, storageAddress: storageAddress, dataId: dataId, uintArrayValue: uintArrayValue };
        },
        LogEntityAddressScopeUpdate: (): {
            eventId: Buffer;
            entityAddress: string;
            scopeAddress: string;
            scopeContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [eventId, entityAddress, scopeAddress, scopeContext, fixedScope, dataPath, dataStorageId, dataStorage] = codec.decodeEventLog ("757FFF527744F487D9C9EC5DF491336680EF60ECCF50F97A494EB216E66725B9", data, topics);
            return { eventId: eventId, entityAddress: entityAddress, scopeAddress: scopeAddress, scopeContext: scopeContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        LogOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("FCF23A92150D56E85E3A3D33B357493246E55783095EB6A733EB8439FFC752C8", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        LogProcessInstanceCreation: (): {
            eventId: Buffer;
            processInstanceAddress: string;
            processDefinitionAddress: string;
            state: number;
            startedBy: string;
        } => {
            const [eventId, processInstanceAddress, processDefinitionAddress, state, startedBy] = codec.decodeEventLog ("3F4F1F4296FDBD3AFD2993CD0FA49B02B3B0AC165C0176C52BEEF3BB9FA6B56D", data, topics);
            return { eventId: eventId, processInstanceAddress: processInstanceAddress, processDefinitionAddress: processDefinitionAddress, state: state, startedBy: startedBy };
        },
        LogProcessInstanceStateUpdate: (): {
            eventId: Buffer;
            processInstanceAddress: string;
            state: number;
        } => {
            const [eventId, processInstanceAddress, state] = codec.decodeEventLog ("BD6E1001C3E7D7E3C0E2AFE4E53839165BF847599263271503E06BFBD7DF6CAC", data, topics);
            return { eventId: eventId, processInstanceAddress: processInstanceAddress, state: state };
        },
        EMPTY_SCOPE: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("F6EC229E", data); },
        ERC165_ID_Address_Scopes: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("BD9E0660", data); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        EVENT_ID_DATA_STORAGE: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("D42EA976", data); },
        EVENT_ID_ENTITIES_ADDRESS_SCOPES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("B7D64777", data); },
        EVENT_ID_PROCESS_INSTANCES: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("50396E1C", data); },
        abort: (): void => { return; },
        addProcessStateChangeListener: (): void => { return; },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        completeActivity: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("68180951", data);
            return { error: error };
        },
        completeActivityWithAddressData: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("942F7C5B", data);
            return { error: error };
        },
        completeActivityWithBoolData: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("9BD8E439", data);
            return { error: error };
        },
        completeActivityWithBytes32Data: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("70EC993E", data);
            return { error: error };
        },
        completeActivityWithIntData: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("84096931", data);
            return { error: error };
        },
        completeActivityWithStringData: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("8F70172D", data);
            return { error: error };
        },
        completeActivityWithUintData: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("D8389BBA", data);
            return { error: error };
        },
        execute: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("4B64E492", data);
            return { error: error };
        },
        getActivityInDataAsAddress: (): [
            string
        ] => { return codec.decodeFunctionResult ("481EA63D", data); },
        getActivityInDataAsBool: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("79594884", data); },
        getActivityInDataAsBytes32: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("A32DD3B2", data); },
        getActivityInDataAsInt: (): [
            number
        ] => { return codec.decodeFunctionResult ("37E567A0", data); },
        getActivityInDataAsString: (): [
            string
        ] => { return codec.decodeFunctionResult ("26A3BA26", data); },
        getActivityInDataAsUint: (): [
            number
        ] => { return codec.decodeFunctionResult ("C2334A5A", data); },
        getActivityInstanceAtIndex: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("21CB9B63", data); },
        getActivityInstanceData: (): {
            activityId: Buffer;
            created: number;
            completed: number;
            performer: string;
            completedBy: string;
            state: number;
        } => {
            const [activityId, created, completed, performer, completedBy, state] = codec.decodeFunctionResult ("DB8168FC", data);
            return { activityId: activityId, created: created, completed: completed, performer: performer, completedBy: completedBy, state: state };
        },
        getAddressScopeDetails: (): {
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [fixedScope, dataPath, dataStorageId, dataStorage] = codec.decodeFunctionResult ("9561AA32", data);
            return { fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeDetailsForKey: (): {
            keyAddress: string;
            keyContext: Buffer;
            fixedScope: Buffer;
            dataPath: Buffer;
            dataStorageId: Buffer;
            dataStorage: string;
        } => {
            const [keyAddress, keyContext, fixedScope, dataPath, dataStorageId, dataStorage] = codec.decodeFunctionResult ("FE3C84B2", data);
            return { keyAddress: keyAddress, keyContext: keyContext, fixedScope: fixedScope, dataPath: dataPath, dataStorageId: dataStorageId, dataStorage: dataStorage };
        },
        getAddressScopeKeys: (): [
            Buffer[]
        ] => { return codec.decodeFunctionResult ("70A9C997", data); },
        getArrayLength: (): [
            number
        ] => { return codec.decodeFunctionResult ("AA0AC16F", data); },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getBoundaryEventDetails: (): {
            state: number;
            timerResolution: number;
        } => {
            const [state, timerResolution] = codec.decodeFunctionResult ("C516BF34", data);
            return { state: state, timerResolution: timerResolution };
        },
        getBoundaryEventIdAtIndex: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("9AA22E8E", data); },
        getDataIdAtIndex: (): {
            error: number;
            id: Buffer;
        } => {
            const [error, id] = codec.decodeFunctionResult ("374B7D22", data);
            return { error: error, id: id };
        },
        getDataType: (): [
            number
        ] => { return codec.decodeFunctionResult ("31502F13", data); },
        getDataValueAsAddress: (): [
            string
        ] => { return codec.decodeFunctionResult ("F364E379", data); },
        getDataValueAsAddressArray: (): [
            string[]
        ] => { return codec.decodeFunctionResult ("EEB8B809", data); },
        getDataValueAsBool: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("30C676C9", data); },
        getDataValueAsBoolArray: (): [
            boolean[]
        ] => { return codec.decodeFunctionResult ("D734C53A", data); },
        getDataValueAsBytes32: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("2512E6F1", data); },
        getDataValueAsBytes32Array: (): [
            Buffer[]
        ] => { return codec.decodeFunctionResult ("FCB4862A", data); },
        getDataValueAsInt: (): [
            number
        ] => { return codec.decodeFunctionResult ("E2BE8FE1", data); },
        getDataValueAsIntArray: (): [
            number[]
        ] => { return codec.decodeFunctionResult ("F0A40527", data); },
        getDataValueAsString: (): [
            string
        ] => { return codec.decodeFunctionResult ("D2E8A0FA", data); },
        getDataValueAsUint: (): [
            number
        ] => { return codec.decodeFunctionResult ("35CE1BD1", data); },
        getDataValueAsUintArray: (): [
            number[]
        ] => { return codec.decodeFunctionResult ("31185182", data); },
        getIntermediaEventIdAtIndex: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("6380B16B", data); },
        getIntermediateEventTimerTarget: (): {
            timerTarget: number;
        } => {
            const [timerTarget] = codec.decodeFunctionResult ("0AB8E5BD", data);
            return { timerTarget: timerTarget };
        },
        getNumberOfActivityInstances: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("D8619D80", data);
            return { size: size };
        },
        getNumberOfBoundaryEventInstances: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("F895D327", data);
            return { size: size };
        },
        getNumberOfData: (): [
            number
        ] => { return codec.decodeFunctionResult ("5666F9AC", data); },
        getNumberOfIntermediateEventInstances: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("8CE5C7C9", data);
            return { size: size };
        },
        getProcessDefinition: (): [
            string
        ] => { return codec.decodeFunctionResult ("FCFB0C58", data); },
        getStartedBy: (): [
            string
        ] => { return codec.decodeFunctionResult ("A0826E06", data); },
        getState: (): [
            number
        ] => { return codec.decodeFunctionResult ("1865C57D", data); },
        initRuntime: (): void => { return; },
        initialize: (): void => { return; },
        notifyProcessStateChange: (): void => { return; },
        removeData: (): void => { return; },
        resolveAddressScope: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("3C0E5245", data); },
        resolveInDataLocation: (): {
            dataStorage: string;
            dataPath: Buffer;
        } => {
            const [dataStorage, dataPath] = codec.decodeFunctionResult ("2CEB8B18", data);
            return { dataStorage: dataStorage, dataPath: dataPath };
        },
        resolveOutDataLocation: (): {
            dataStorage: string;
            dataPath: Buffer;
        } => {
            const [dataStorage, dataPath] = codec.decodeFunctionResult ("D6256976", data);
            return { dataStorage: dataStorage, dataPath: dataPath };
        },
        resolveTransitionCondition: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("EA45DAED", data); },
        setActivityOutDataAsAddress: (): void => { return; },
        setActivityOutDataAsBool: (): void => { return; },
        setActivityOutDataAsBytes32: (): void => { return; },
        setActivityOutDataAsInt: (): void => { return; },
        setActivityOutDataAsString: (): void => { return; },
        setActivityOutDataAsUint: (): void => { return; },
        setAddressScope: (): void => { return; },
        setBoundaryEventTimerTarget: (): void => { return; },
        setDataValueAsAddress: (): void => { return; },
        setDataValueAsAddressArray: (): void => { return; },
        setDataValueAsBool: (): void => { return; },
        setDataValueAsBoolArray: (): void => { return; },
        setDataValueAsBytes32: (): void => { return; },
        setDataValueAsBytes32Array: (): void => { return; },
        setDataValueAsInt: (): void => { return; },
        setDataValueAsIntArray: (): void => { return; },
        setDataValueAsString: (): void => { return; },
        setDataValueAsUint: (): void => { return; },
        setDataValueAsUintArray: (): void => { return; },
        setIntermediateEventTimerTarget: (): void => { return; },
        transferOwnership: (): void => { return; },
        triggerBoundaryEvent: (): void => { return; },
        triggerIntermediateEvent: (): void => { return; }
    }; };
}