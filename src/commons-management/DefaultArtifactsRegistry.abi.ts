//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CancelStreamSignal, ContractCodec, Event, linker, listenerFor, Result, Keccak } from "@hyperledger/burrow";
interface Provider {
    deploy(data: string | Uint8Array, contractMeta?: {
        abi: string;
        codeHash: Uint8Array;
    }[]): Promise<Address>;
    call(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    callSim(data: string | Uint8Array, address: string): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const returnData = await (isSim ? client.callSim(data, addr) : client.call(data, addr));
    return callback(returnData);
}
export module DefaultArtifactsRegistry {
    export const contactName = "DefaultArtifactsRegistry";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"string","name":"artifactId","type":"string"},{"indexed":false,"internalType":"address","name":"artifactAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"activeVersion","type":"bool"}],"name":"LogArtifactActivation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"string","name":"artifactId","type":"string"},{"indexed":false,"internalType":"address","name":"artifactAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"versionMajor","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"versionMinor","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"versionPatch","type":"uint256"},{"indexed":false,"internalType":"bool","name":"activeVersion","type":"bool"}],"name":"LogArtifactCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogSystemOwnerChanged","type":"event"},{"constant":true,"inputs":[],"name":"EVENT_ID_ARTIFACTS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"string","name":"_artifactId","type":"string"}],"name":"getArtifact","outputs":[{"internalType":"address","name":"location","type":"address"},{"internalType":"uint8[3]","name":"version","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"string","name":"_artifactId","type":"string"},{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"getArtifactByVersion","outputs":[{"internalType":"address","name":"location","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfArtifacts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSystemOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_artifactId","type":"string"},{"internalType":"address","name":"_artifactAddress","type":"address"},{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"},{"internalType":"bool","name":"_activeVersion","type":"bool"}],"name":"registerArtifact","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"string","name":"_artifactId","type":"string"},{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"setActiveVersion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferSystemOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    export const bytecode = '60806040526120c0806100136000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638129fc1c116100665780638129fc1c146101f3578063a8f4481d146101fd578063c4c4a8a1146102c0578063ea4b99bd146103a8578063ed42d86e146103c657610093565b80630a452ad61461009857806330c94145146100dc5780637db978331461018b5780637f692a2a146101a9575b600080fd5b6100da600480360360208110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610449565b005b610189600480360360c08110156100f257600080fd5b810190808035906020019064010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184600183028401116401000000008311171561014357600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080606001909192919290803515159060200190929190505050610846565b005b610193611247565b6040518082815260200191505060405180910390f35b6101b1611254565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101fb61127d565b005b61027e6004803603608081101561021357600080fd5b810190808035906020019064010000000081111561023057600080fd5b82018360208201111561024257600080fd5b8035906020019184600183028401116401000000008311171561026457600080fd5b909192939192939080606001909192919290505050611400565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610337600480360360208110156102d657600080fd5b81019080803590602001906401000000008111156102f357600080fd5b82018360208201111561030557600080fd5b8035906020019184600183028401116401000000008311171561032757600080fd5b9091929391929390505050611498565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182600360200280838360005b83811015610394578082015181840152602081019050610379565b505050509050019250505060405180910390f35b6103b06115c1565b6040518082815260200191505060405180910390f35b610447600480360360808110156103dc57600080fd5b81019080803590602001906401000000008111156103f957600080fd5b82018360208201111561040b57600080fd5b8035906020019184600183028401116401000000008311171561042d57600080fd5b9091929391929390806060019091929192905050506115e5565b005b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104bc611bdb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561051d578082015181840152602081019050610502565b50505050905090810190601f16801561054a5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061206b6021913960400184810382526026815260200180611fce602691396040019550505050505060006040518083038186803b15801561059857600080fd5b505af41580156105ac573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610602611c18565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610663578082015181840152602081019050610648565b50505050905090810190601f1680156106905780820380516001836020036101000a031916815260200191505b5084810383526023815260200180611f546023913960400184810382526025815260200180611ff4602591396040019550505050505060006040518083038186803b1580156106de57600080fd5b505af41580156106f2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610843577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108b9611bdb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561091a5780820151818401526020810190506108ff565b50505050905090810190601f1680156109475780820380516001836020036101000a031916815260200191505b508481038352602181526020018061206b6021913960400184810382526026815260200180611fce602691396040019550505050505060006040518083038186803b15801561099557600080fd5b505af41580156109a9573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000878790501480610a055750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b610a0d611c18565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610a6e578082015181840152602081019050610a53565b50505050905090810190601f168015610a9b5780820380516001836020036101000a031916815260200191505b50848103835260298152602001806120196029913960400184810382526032815260200180611ecb603291396040019550505050505060006040518083038186803b158015610ae957600080fd5b505af4158015610afd573d6000803e3d6000fd5b50505050600060018686604051808383808284378083019250505092505050908152602001604051809103902060020160008460405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610c1557508573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610c1d611c55565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610c7e578082015181840152602081019050610c63565b50505050905090810190601f168015610cab5780820380516001836020036101000a031916815260200191505b50848103835260298152602001806120196029913960400184810382526057815260200180611f77605791396060019550505050505060006040518083038186803b158015610cf957600080fd5b505af4158015610d0d573d6000803e3d6000fd5b5050505060018686604051808383808284378083019250505092505050908152602001604051809103902060000160149054906101000a900460ff16610dd2576002868690918060018154018082558091505090600182039060005260206000200160009091929390919293909192909192509190610d8d929190611d0c565b50506001808787604051808383808284378083019250505092505050908152602001604051809103902060000160146101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561123f578360018787604051808383808284378083019250505092505050908152602001604051809103902060020160008560405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018787604051808383808284378083019250505092505050908152602001604051809103902060010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020906003610f28929190611d8c565b50811561111d57600060018787604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610fe757508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156110b2577f414e3a2f2f6172746966616374730000000000000000000000000000000000007ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d2888884600060405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a25b8460018888604051808383808284378083019250505092505050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b7f414e3a2f2f6172746966616374730000000000000000000000000000000000007f2bcd5e595a4f50e426b161fae964fb84844b5dc1efc2b3799fd6d8924765120f8787878760006003811061116f57fe5b602002013560ff168860016003811061118457fe5b602002013560ff168960026003811061119957fe5b602002013560ff168960405180806020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018660ff1681526020018560ff1681526020018460ff168152602001831515151581526020018281038252898982818152602001925080828437600081840152601f19601f8201169050808301925050509850505050505050505060405180910390a25b505050505050565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060149054906101000a900460ff166112af611c92565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156113105780820151818401526020810190506112f5565b50505050905090810190601f16801561133d5780820380516001836020036101000a031916815260200191505b508481038352602a815260200180611ea1602a913960400184810382526029815260200180611efd602991396040019550505050505060006040518083038186803b15801561138b57600080fd5b505af415801561139f573d6000803e3d6000fd5b50505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff021916908315150217905550565b600060018484604051808383808284378083019250505092505050908152602001604051809103902060020160008360405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509392505050565b60006114a2611e29565b60018484604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060018484604051808383808284378083019250505092505050908152602001604051809103902060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003806020026040519081016040528092919082600380156115b3576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161157c5790505b505050505090509250929050565b7f414e3a2f2f61727469666163747300000000000000000000000000000000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611658611bdb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156116b957808201518184015260208101905061169e565b50505050905090810190601f1680156116e65780820380516001836020036101000a031916815260200191505b508481038352602181526020018061206b6021913960400184810382526026815260200180611fce602691396040019550505050505060006040518083038186803b15801561173457600080fd5b505af4158015611748573d6000803e3d6000fd5b50505050600060018484604051808383808284378083019250505092505050908152602001604051809103902060020160008360405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461182f611ccf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611890578082015181840152602081019050611875565b50505050905090810190601f1680156118bd5780820380516001836020036101000a031916815260200191505b5084810383526029815260200180612042602991396040018481038252602e815260200180611f26602e91396040019550505050505060006040518083038186803b15801561190b57600080fd5b505af415801561191f573d6000803e3d6000fd5b50505050600060018585604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156119db57508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611aa6577f414e3a2f2f6172746966616374730000000000000000000000000000000000007ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d2868684600060405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a25b8160018686604051808383808284378083019250505092505050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f414e3a2f2f6172746966616374730000000000000000000000000000000000007ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d2868684600160405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a25050505050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d4d57803560ff1916838001178555611d7b565b82800160010185558215611d7b579182015b82811115611d7a578235825591602001919060010190611d5f565b5b509050611d889190611e4b565b5090565b826003601f01602090048101928215611e185791602002820160005b83821115611de957833560ff1683826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611da8565b8015611e165782816101000a81549060ff0219169055600101602081600001049283019260010302611de9565b505b509050611e259190611e70565b5090565b6040518060600160405280600390602082028038833980820191505090505090565b611e6d91905b80821115611e69576000816000905550600101611e51565b5090565b90565b611e9d91905b80821115611e9957600081816101000a81549060ff021916905550600101611e76565b5090565b9056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a655f6172746966616374496420616e64205f617274696661637441646472657373206d757374206e6f7420626520656d70747954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a65645468652073706563696669656420494420616e642076657273696f6e206973206e6f74207265676973746572656453797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970416e2061727469666163742077697468207468652073616d6520494420616e642076657273696f6e2c20627574206120646966666572656e74206164647265737320697320616c72656164792072656769737465726564546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c44656661756c7441727469666163747352656769737472792e7265676973746572417274696661637444656661756c7441727469666163747352656769737472792e73657441637469766556657273696f6e53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a7231582012a8f424a61f97dec1667404991060c32e94816cc69773d727a24daa29c5ea6764736f6c63430005110032';
    export const deployedBytecode = '608060405234801561001057600080fd5b50600436106100935760003560e01c80638129fc1c116100665780638129fc1c146101f3578063a8f4481d146101fd578063c4c4a8a1146102c0578063ea4b99bd146103a8578063ed42d86e146103c657610093565b80630a452ad61461009857806330c94145146100dc5780637db978331461018b5780637f692a2a146101a9575b600080fd5b6100da600480360360208110156100ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610449565b005b610189600480360360c08110156100f257600080fd5b810190808035906020019064010000000081111561010f57600080fd5b82018360208201111561012157600080fd5b8035906020019184600183028401116401000000008311171561014357600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080606001909192919290803515159060200190929190505050610846565b005b610193611247565b6040518082815260200191505060405180910390f35b6101b1611254565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101fb61127d565b005b61027e6004803603608081101561021357600080fd5b810190808035906020019064010000000081111561023057600080fd5b82018360208201111561024257600080fd5b8035906020019184600183028401116401000000008311171561026457600080fd5b909192939192939080606001909192919290505050611400565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610337600480360360208110156102d657600080fd5b81019080803590602001906401000000008111156102f357600080fd5b82018360208201111561030557600080fd5b8035906020019184600183028401116401000000008311171561032757600080fd5b9091929391929390505050611498565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182600360200280838360005b83811015610394578082015181840152602081019050610379565b505050509050019250505060405180910390f35b6103b06115c1565b6040518082815260200191505060405180910390f35b610447600480360360808110156103dc57600080fd5b81019080803590602001906401000000008111156103f957600080fd5b82018360208201111561040b57600080fd5b8035906020019184600183028401116401000000008311171561042d57600080fd5b9091929391929390806060019091929192905050506115e5565b005b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104bc611bdb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561051d578082015181840152602081019050610502565b50505050905090810190601f16801561054a5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061206b6021913960400184810382526026815260200180611fce602691396040019550505050505060006040518083038186803b15801561059857600080fd5b505af41580156105ac573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610602611c18565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610663578082015181840152602081019050610648565b50505050905090810190601f1680156106905780820380516001836020036101000a031916815260200191505b5084810383526023815260200180611f546023913960400184810382526025815260200180611ff4602591396040019550505050505060006040518083038186803b1580156106de57600080fd5b505af41580156106f2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610843577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108b9611bdb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101561091a5780820151818401526020810190506108ff565b50505050905090810190601f1680156109475780820380516001836020036101000a031916815260200191505b508481038352602181526020018061206b6021913960400184810382526026815260200180611fce602691396040019550505050505060006040518083038186803b15801561099557600080fd5b505af41580156109a9573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000878790501480610a055750600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16145b610a0d611c18565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610a6e578082015181840152602081019050610a53565b50505050905090810190601f168015610a9b5780820380516001836020036101000a031916815260200191505b50848103835260298152602001806120196029913960400184810382526032815260200180611ecb603291396040019550505050505060006040518083038186803b158015610ae957600080fd5b505af4158015610afd573d6000803e3d6000fd5b50505050600060018686604051808383808284378083019250505092505050908152602001604051809103902060020160008460405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610c1557508573ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610c1d611c55565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610c7e578082015181840152602081019050610c63565b50505050905090810190601f168015610cab5780820380516001836020036101000a031916815260200191505b50848103835260298152602001806120196029913960400184810382526057815260200180611f77605791396060019550505050505060006040518083038186803b158015610cf957600080fd5b505af4158015610d0d573d6000803e3d6000fd5b5050505060018686604051808383808284378083019250505092505050908152602001604051809103902060000160149054906101000a900460ff16610dd2576002868690918060018154018082558091505090600182039060005260206000200160009091929390919293909192909192509190610d8d929190611d0c565b50506001808787604051808383808284378083019250505092505050908152602001604051809103902060000160146101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561123f578360018787604051808383808284378083019250505092505050908152602001604051809103902060020160008560405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018787604051808383808284378083019250505092505050908152602001604051809103902060010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020906003610f28929190611d8c565b50811561111d57600060018787604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610fe757508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156110b2577f414e3a2f2f6172746966616374730000000000000000000000000000000000007ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d2888884600060405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a25b8460018888604051808383808284378083019250505092505050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b7f414e3a2f2f6172746966616374730000000000000000000000000000000000007f2bcd5e595a4f50e426b161fae964fb84844b5dc1efc2b3799fd6d8924765120f8787878760006003811061116f57fe5b602002013560ff168860016003811061118457fe5b602002013560ff168960026003811061119957fe5b602002013560ff168960405180806020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018660ff1681526020018560ff1681526020018460ff168152602001831515151581526020018281038252898982818152602001925080828437600081840152601f19601f8201169050808301925050509850505050505050505060405180910390a25b505050505050565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600060149054906101000a900460ff166112af611c92565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156113105780820151818401526020810190506112f5565b50505050905090810190601f16801561133d5780820380516001836020036101000a031916815260200191505b508481038352602a815260200180611ea1602a913960400184810382526029815260200180611efd602991396040019550505050505060006040518083038186803b15801561138b57600080fd5b505af415801561139f573d6000803e3d6000fd5b50505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff021916908315150217905550565b600060018484604051808383808284378083019250505092505050908152602001604051809103902060020160008360405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509392505050565b60006114a2611e29565b60018484604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060018484604051808383808284378083019250505092505050908152602001604051809103902060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003806020026040519081016040528092919082600380156115b3576020028201916000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161157c5790505b505050505090509250929050565b7f414e3a2f2f61727469666163747300000000000000000000000000000000000081565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611658611bdb565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156116b957808201518184015260208101905061169e565b50505050905090810190601f1680156116e65780820380516001836020036101000a031916815260200191505b508481038352602181526020018061206b6021913960400184810382526026815260200180611fce602691396040019550505050505060006040518083038186803b15801561173457600080fd5b505af4158015611748573d6000803e3d6000fd5b50505050600060018484604051808383808284378083019250505092505050908152602001604051809103902060020160008360405160200180826003602002808284378083019250505091505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461182f611ccf565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015611890578082015181840152602081019050611875565b50505050905090810190601f1680156118bd5780820380516001836020036101000a031916815260200191505b5084810383526029815260200180612042602991396040018481038252602e815260200180611f26602e91396040019550505050505060006040518083038186803b15801561190b57600080fd5b505af415801561191f573d6000803e3d6000fd5b50505050600060018585604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156119db57508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611aa6577f414e3a2f2f6172746966616374730000000000000000000000000000000000007ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d2868684600060405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a25b8160018686604051808383808284378083019250505092505050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f414e3a2f2f6172746966616374730000000000000000000000000000000000007ff8016d498a8282be215351964850d99ddcaec99a5d2e28843a65b7bae6bf16d2868684600160405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001831515151581526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a25050505050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523631300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523430340000000000000000000000000000000000000000000000000000815250905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d4d57803560ff1916838001178555611d7b565b82800160010185558215611d7b579182015b82811115611d7a578235825591602001919060010190611d5f565b5b509050611d889190611e4b565b5090565b826003601f01602090048101928215611e185791602002820160005b83821115611de957833560ff1683826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302611da8565b8015611e165782816101000a81549060ff0219169055600101602081600001049283019260010302611de9565b505b509050611e259190611e70565b5090565b6040518060600160405280600390602082028038833980820191505090505090565b611e6d91905b80821115611e69576000816000905550600101611e51565b5090565b90565b611e9d91905b80821115611e9957600081816101000a81549060ff021916905550600101611e76565b5090565b9056fe416273747261637444656c65676174655461726765742e7072655f706f73745f696e697469616c697a655f6172746966616374496420616e64205f617274696661637441646472657373206d757374206e6f7420626520656d70747954686520636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a65645468652073706563696669656420494420616e642076657273696f6e206973206e6f74207265676973746572656453797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970416e2061727469666163742077697468207468652073616d6520494420616e642076657273696f6e2c20627574206120646966666572656e74206164647265737320697320616c72656164792072656769737465726564546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c44656661756c7441727469666163747352656769737472792e7265676973746572417274696661637444656661756c7441727469666163747352656769737472792e73657441637469766556657273696f6e53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a7231582012a8f424a61f97dec1667404991060c32e94816cc69773d727a24daa29c5ea6764736f6c63430005110032';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, withContractMeta: boolean = false): Promise<string> {
        const codec = client.contractCodec(abi);
        const links = [{ name: "$ecfb6c4d3c3ceff197e19e585a0a53728c$", address: commons_base_ErrorsLib_sol_ErrorsLib }];
        const linkedBytecode = linker(bytecode, links);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        return client.deploy(data, withContractMeta ? [{ abi: DefaultArtifactsRegistry.abi, codeHash: new Keccak(256).update(linker(DefaultArtifactsRegistry.deployedBytecode, links), "hex").digest("binary") }] : undefined);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, withContractMeta: boolean = false): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib, withContractMeta); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => unknown;
    const events = { LogArtifactActivation: { signature: "F8016D498A8282BE215351964850D99DDCAEC99A5D2E28843A65B7BAE6BF16D2", tagged: (eventId: Buffer, artifactId: string, artifactAddress: string, activeVersion: boolean) => ({ name: "LogArtifactActivation", payload: { eventId: eventId, artifactId: artifactId, artifactAddress: artifactAddress, activeVersion: activeVersion } as const } as const) } as const, LogArtifactCreation: { signature: "2BCD5E595A4F50E426B161FAE964FB84844B5DC1EFC2B3799FD6D8924765120F", tagged: (eventId: Buffer, artifactId: string, artifactAddress: string, versionMajor: number, versionMinor: number, versionPatch: number, activeVersion: boolean) => ({ name: "LogArtifactCreation", payload: { eventId: eventId, artifactId: artifactId, artifactAddress: artifactAddress, versionMajor: versionMajor, versionMinor: versionMinor, versionPatch: versionPatch, activeVersion: activeVersion } as const } as const) } as const, LogSystemOwnerChanged: { signature: "0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogSystemOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { EVENT_ID_ARTIFACTS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ARTIFACTS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ARTIFACTS();
                });
            }, getArtifact(_artifactId: string, call = defaultCall): Promise<{
                location: string;
                version: [
                    number,
                    number,
                    number
                ];
            }> {
                const data = encode(client).getArtifact(_artifactId);
                return call<{
                    location: string;
                    version: [
                        number,
                        number,
                        number
                    ];
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifact();
                });
            }, getArtifactByVersion(_artifactId: string, _version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                location: string;
            }> {
                const data = encode(client).getArtifactByVersion(_artifactId, _version);
                return call<{
                    location: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactByVersion();
                });
            }, getNumberOfArtifacts(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfArtifacts();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfArtifacts();
                });
            }, getSystemOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSystemOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSystemOwner();
                });
            }, initialize(call = defaultCall): Promise<void> {
                const data = encode(client).initialize();
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initialize();
                });
            }, registerArtifact(_artifactId: string, _artifactAddress: string, _version: [
                number,
                number,
                number
            ], _activeVersion: boolean, call = defaultCall): Promise<void> {
                const data = encode(client).registerArtifact(_artifactId, _artifactAddress, _version, _activeVersion);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).registerArtifact();
                });
            }, setActiveVersion(_artifactId: string, _version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<void> {
                const data = encode(client).setActiveVersion(_artifactId, _version);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setActiveVersion();
                });
            }, transferSystemOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferSystemOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferSystemOwnership();
                });
            } } as const, listeners: { LogArtifactActivation(callback: (err?: Error, event?: {
                eventId: Buffer;
                artifactId: string;
                artifactAddress: string;
                activeVersion: boolean;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["F8016D498A8282BE215351964850D99DDCAEC99A5D2E28843A65B7BAE6BF16D2"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogArtifactActivation()); }, start, end); }, LogArtifactCreation(callback: (err?: Error, event?: {
                eventId: Buffer;
                artifactId: string;
                artifactAddress: string;
                versionMajor: number;
                versionMinor: number;
                versionPatch: number;
                activeVersion: boolean;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["2BCD5E595A4F50E426B161FAE964FB84844B5DC1EFC2B3799FD6D8924765120F"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogArtifactCreation()); }, start, end); }, LogSystemOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => CancelStreamSignal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): unknown { return client.listen(["0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.log.data, event?.log.topics).LogSystemOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        EVENT_ID_ARTIFACTS: () => { return codec.encodeFunctionData("EA4B99BD"); },
        getArtifact: (_artifactId: string) => { return codec.encodeFunctionData("C4C4A8A1", _artifactId); },
        getArtifactByVersion: (_artifactId: string, _version: [
            number,
            number,
            number
        ]) => { return codec.encodeFunctionData("A8F4481D", _artifactId, _version); },
        getNumberOfArtifacts: () => { return codec.encodeFunctionData("7DB97833"); },
        getSystemOwner: () => { return codec.encodeFunctionData("7F692A2A"); },
        initialize: () => { return codec.encodeFunctionData("8129FC1C"); },
        registerArtifact: (_artifactId: string, _artifactAddress: string, _version: [
            number,
            number,
            number
        ], _activeVersion: boolean) => { return codec.encodeFunctionData("30C94145", _artifactId, _artifactAddress, _version, _activeVersion); },
        setActiveVersion: (_artifactId: string, _version: [
            number,
            number,
            number
        ]) => { return codec.encodeFunctionData("ED42D86E", _artifactId, _version); },
        transferSystemOwnership: (_newOwner: string) => { return codec.encodeFunctionData("0A452AD6", _newOwner); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogArtifactActivation: (): {
            eventId: Buffer;
            artifactId: string;
            artifactAddress: string;
            activeVersion: boolean;
        } => {
            const [eventId, artifactId, artifactAddress, activeVersion] = codec.decodeEventLog ("F8016D498A8282BE215351964850D99DDCAEC99A5D2E28843A65B7BAE6BF16D2", data, topics);
            return { eventId: eventId, artifactId: artifactId, artifactAddress: artifactAddress, activeVersion: activeVersion };
        },
        LogArtifactCreation: (): {
            eventId: Buffer;
            artifactId: string;
            artifactAddress: string;
            versionMajor: number;
            versionMinor: number;
            versionPatch: number;
            activeVersion: boolean;
        } => {
            const [eventId, artifactId, artifactAddress, versionMajor, versionMinor, versionPatch, activeVersion] = codec.decodeEventLog ("2BCD5E595A4F50E426B161FAE964FB84844B5DC1EFC2B3799FD6D8924765120F", data, topics);
            return { eventId: eventId, artifactId: artifactId, artifactAddress: artifactAddress, versionMajor: versionMajor, versionMinor: versionMinor, versionPatch: versionPatch, activeVersion: activeVersion };
        },
        LogSystemOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        EVENT_ID_ARTIFACTS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("EA4B99BD", data); },
        getArtifact: (): {
            location: string;
            version: [
                number,
                number,
                number
            ];
        } => {
            const [location, version] = codec.decodeFunctionResult ("C4C4A8A1", data);
            return { location: location, version: version };
        },
        getArtifactByVersion: (): {
            location: string;
        } => {
            const [location] = codec.decodeFunctionResult ("A8F4481D", data);
            return { location: location };
        },
        getNumberOfArtifacts: (): [
            number
        ] => { return codec.decodeFunctionResult ("7DB97833", data); },
        getSystemOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("7F692A2A", data); },
        initialize: (): void => { return; },
        registerArtifact: (): void => { return; },
        setActiveVersion: (): void => { return; },
        transferSystemOwnership: (): void => { return; }
    }; };
}