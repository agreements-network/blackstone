//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
interface Provider<Tx> {
    deploy(msg: Tx, callback: (err: Error, addr: Uint8Array) => void): void;
    call(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    callSim(msg: Tx, callback: (err: Error, exec: Uint8Array) => void): void;
    listen(signature: string, address: string, callback: (err: Error, event: any) => void): Readable;
    payload(data: string, address?: string): Tx;
    encode(name: string, inputs: string[], ...args: any[]): string;
    decode(data: Uint8Array, outputs: string[]): any;
}
function Call<Tx, Output>(client: Provider<Tx>, addr: string, data: string, isSim: boolean, callback: (exec: Uint8Array) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    if (isSim)
        return new Promise((resolve, reject) => { client.callSim(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
    else
        return new Promise((resolve, reject) => { client.call(payload, (err, exec) => { err ? reject(err) : resolve(callback(exec)); }); });
}
function Replace(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultParticipantsManager {
    export function Deploy<Tx>(client: Provider<Tx>, commons_base_ErrorsLib_sol_ErrorsLib: string): Promise<string> {
        let bytecode = "6080604052600160008060018060006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260026000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200009a57fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508060028060038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e28290000000000000000000000008152506014019050604051602081830303815290604052805190602001206200028f60201b60201c565b5050506200019a60405160200180807f6765744f626a656374436c6173736573282900000000000000000000000000008152506012019050604051602081830303815290604052805190602001206200028f60201b60201c565b620001f160405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b019050604051602081830303815290604052805190602001206200028f60201b60201c565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200028960405160200180807f75706772616465286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206200028f60201b60201c565b6200037c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062004d65602f913960400191505060405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6149d9806200038c6000396000f3fe60806040523480156200001157600080fd5b5060043610620002805760003560e01c806387de70a71162000159578063d556028d11620000c9578063ec9c62201162000087578063ec9c62201462001031578063f085f6dd1462001096578063f4ace0d014620010bc578063f4eeefe9146200111b578063fdbb918f14620011c25762000280565b8063d556028d1462000e23578063e10533c61462000e81578063e72848791462000edf578063e7abd5ea1462000f2b578063ec89da8b1462000f8a5762000280565b8063b21c815f1162000117578063b21c815f1462000c11578063bd3a694e1462000c6f578063bf90b0271462000c8f578063c392df6b1462000d17578063cc5baf171462000dc85762000280565b806387de70a714620009e35780639b3ef4021462000a7e578063ab8ec0381462000b06578063ac83ec7c1462000b6f578063ad76666d1462000bb65762000280565b80634ddaf8f211620001f55780636cfb6c6b11620001b35780636cfb6c6b1462000837578063756b2e6c146200089c5780637589adb714620008e657806378bc0b0d146200090c578063851d585e14620009885762000280565b80634ddaf8f2146200069e57806354af67b714620006fd57806357e0ebca146200075b5780635c030138146200078157806369ad961714620007dc5762000280565b80631065ffb911620002435780631065ffb914620004e257806317bd60ef14620005475780632a8e9ab2146200056757806335657e6814620005ae5780633daf56b8146200060d5762000280565b806301ffc9a7146200028557806302f5326414620002ed578063031e8eaf146200034c5780630900f01014620003bd5780630ec8d39a146200041c575b600080fd5b620002d3600480360360208110156200029d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062001253565b604051808215151515815260200191505060405180910390f35b62000332600480360360208110156200030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620012bb565b604051808215151515815260200191505060405180910390f35b6200037b600480360360208110156200036457600080fd5b8101908080359060200190929190505050620013a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200040260048036036020811015620003d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001459565b604051808215151515815260200191505060405180910390f35b62000499600480360360208110156200043457600080fd5b81019080803590602001906401000000008111156200045257600080fd5b8201836020820111156200046557600080fd5b803590602001918460208302840111640100000000831117156200048857600080fd5b909192939192939050505062001910565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6200053160048036036040811015620004fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001dda565b6040518082815260200191505060405180910390f35b6200055162001e73565b6040518082815260200191505060405180910390f35b620005ac600480360360208110156200057f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001f1f565b005b620005f360048036036020811015620005c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620020b2565b604051808215151515815260200191505060405180910390f35b6200065c600480360360408110156200062557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620020bd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620006e360048036036020811015620006b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002156565b604051808215151515815260200191505060405180910390f35b6200070762002434565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b620007656200247e565b604051808260ff1660ff16815260200191505060405180910390f35b620007c6600480360360208110156200079957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620024aa565b6040518082815260200191505060405180910390f35b6200082160048036036020811015620007f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620025ad565b6040518082815260200191505060405180910390f35b62000886600480360360408110156200084f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506200263a565b6040518082815260200191505060405180910390f35b620008a6620026d3565b6040518082600360200280838360005b83811015620008d3578082015181840152602081019050620008b6565b5050505090500191505060405180910390f35b620008f062002748565b604051808260ff1660ff16815260200191505060405180910390f35b62000972600480360360608110156200092457600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505062002774565b6040518082815260200191505060405180910390f35b620009cd60048036036020811015620009a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620027ee565b6040518082815260200191505060405180910390f35b62000a3c60048036036060811015620009fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506200287b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000a886200291d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562000aca57808201518184015260208101905062000aad565b50505050905090810190601f16801562000af85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000b556004803603604081101562000b1e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062002956565b604051808215151515815260200191505060405180910390f35b62000bb46004803603602081101562000b8757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620029ef565b005b62000bfb6004803603602081101562000bce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002e03565b6040518082815260200191505060405180910390f35b62000c1b62002e90565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62000c7962002eda565b6040518082815260200191505060405180910390f35b62000c9962002f86565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562000cdb57808201518184015260208101905062000cbe565b50505050905090810190601f16801562000d095780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000d866004803603606081101562000d2f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002fbf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000e0d6004803603602081101562000de057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200339e565b6040518082815260200191505060405180910390f35b62000e2d6200342b565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62000e8b62003475565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62000ee9620034bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000f706004803603602081101562000f4357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620034e9565b604051808215151515815260200191505060405180910390f35b62000fef6004803603604081101562000fa257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620035ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001080600480360360408110156200104957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620035d9565b6040518082815260200191505060405180910390f35b620010a062003672565b604051808260ff1660ff16815260200191505060405180910390f35b6200110160048036036020811015620010d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200369d565b604051808215151515815260200191505060405180910390f35b62001180600480360360408110156200113357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620039f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200121160048036036040811015620011da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620039fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302f53264836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200135c57600080fd5b505afa15801562001371573d6000803e3d6000fd5b505050506040513d60208110156200138857600080fd5b81019080805190602001909291905050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663031e8eaf836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200141557600080fd5b505afa1580156200142a573d6000803e3d6000fd5b505050506040513d60208110156200144157600080fd5b81019080805190602001909291905050509050919050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415620014d162003a94565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200153457808201518184015260208101905062001517565b50505050905090810190601f168015620015625780820380516001836020036101000a031916815260200191505b5084810383526023815260200180620048cd602391396040018481038252602781526020018062004826602791396040019550505050505060006040518083038186803b158015620015b357600080fd5b505af4158015620015c8573d6000803e3d6000fd5b505050508173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6001620015f484620024aa565b12620015ff62003ad1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200166257808201518184015260208101905062001645565b50505050905090810190601f168015620016905780820380516001836020036101000a031916815260200191505b50848103835260298152602001806200487e602991396040018481038252604b81526020018062004749604b91396060019550505050505060006040518083038186803b158015620016e157600080fd5b505af4158015620016f6573d6000803e3d6000fd5b50505050620017058362002156565b8015620017cb57508273ffffffffffffffffffffffffffffffffffffffff166335657e68306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200178d57600080fd5b505af1158015620017a2573d6000803e3d6000fd5b505050506040513d6020811015620017b957600080fd5b81019080805190602001909291905050505b915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8315620017f362003b0e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200185657808201518184015260208101905062001839565b50505050905090810190601f168015620018845780820380516001836020036101000a031916815260200191505b508481038352601b8152602001807f41627374726163745570677261646561626c652e75706772616465000000000081525060200184810382526040815260200180620047e6604091396040019550505050505060006040518083038186803b158015620018f157600080fd5b505af415801562001906573d6000803e3d6000fd5b5050505050919050565b60008060606000858590501415620019a5576001604051908082528060200260200182016040528015620019535781602001602082028038833980820191505090505b50905033816000815181106200196557fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050620019ea565b848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505090505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f636f6d6d6f6e732e617574682e4f7267616e697a6174696f6e0000000000000081525060405162001a519062003cb2565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562001ac257808201518184015260208101905062001aa5565b50505050905090810190601f16801562001af05780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f08015801562001b13573d6000803e3d6000fd5b5091508173ffffffffffffffffffffffffffffffffffffffff1663a224cee7826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101562001b8757808201518184015260208101905062001b6a565b5050505090500192505050600060405180830381600087803b15801562001bad57600080fd5b505af115801562001bc2573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d68287df836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562001c6757600080fd5b505af115801562001c7c573d6000803e3d6000fd5b505050506040513d602081101562001c9357600080fd5b8101908080519060200190929190505050925073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62001cca62003b4b565b85141562001cd762003b0e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001d3a57808201518184015260208101905062001d1d565b50505050905090810190601f16801562001d685780820380516001836020036101000a031916815260200191505b508481038352602d815260200180620047b9602d913960400184810382526032815260200180620048f0603291396040019550505050505060006040518083038186803b15801562001db957600080fd5b505af415801562001dce573d6000803e3d6000fd5b50505050509250929050565b60008273ffffffffffffffffffffffffffffffffffffffff16636371e7b4836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562001e2e57600080fd5b505afa15801562001e43573d6000803e3d6000fd5b505050506040513d602081101562001e5a57600080fd5b8101908080519060200190929190505050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d462a0186040518163ffffffff1660e01b815260040160206040518083038186803b15801562001edd57600080fd5b505afa15801562001ef2573d6000803e3d6000fd5b505050506040513d602081101562001f0957600080fd5b8101908080519060200190929190505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462001f7362003b54565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001fd657808201518184015260208101905062001fb9565b50505050905090810190601f168015620020045780820380516001836020036101000a031916815260200191505b5084810383526029815260200180620046fc602991396040018481038252602c81526020018062004979602c91396040019550505050505060006040518083038186803b1580156200205557600080fd5b505af41580156200206a573d6000803e3d6000fd5b5050505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019050919050565b60008273ffffffffffffffffffffffffffffffffffffffff1663ea415cfd836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200211157600080fd5b505afa15801562002126573d6000803e3d6000fd5b505050506040513d60208110156200213d57600080fd5b8101908080519060200190929190505050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630a452ad6836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015620021f957600080fd5b505af11580156200220e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663f4ace0d06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015620022b357600080fd5b505af1158015620022c8573d6000803e3d6000fd5b505050506040513d6020811015620022df57600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82156200231862003b0e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200237b5780820151818401526020810190506200235e565b50505050905090810190601f168015620023a95780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f416273747261637444625570677261646561626c652e6d696772617465546f00815250602001848103825260318152602001806200484d603191396040019550505050505060006040518083038186803b1580156200241657600080fd5b505af41580156200242b573d6000803e3d6000fd5b50505050919050565b60405160200180807f6765744f626a656374436c61737365732829000000000000000000000000000081525060120190506040516020818303038152906040528051906020012081565b600060026000600381106200248f57fe5b602091828204019190069054906101000a900460ff16905090565b6000620025a6600260038060200260405190810160405280929190826003801562002511576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620024d95790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156200255d57600080fd5b505afa15801562002572573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060608110156200259857600080fd5b810190809190505062003b91565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166389c9e2ef6040518163ffffffff1660e01b815260040160206040518083038186803b158015620025f657600080fd5b505afa1580156200260b573d6000803e3d6000fd5b505050506040513d60208110156200262257600080fd5b81019080805190602001909291905050509050919050565b60008273ffffffffffffffffffffffffffffffffffffffff1663f06e141e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200268e57600080fd5b505afa158015620026a3573d6000803e3d6000fd5b505050506040513d6020811015620026ba57600080fd5b8101908080519060200190929190505050905092915050565b620026dd62003cc0565b60026003806020026040519081016040528092919082600380156200273e576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620027065790505b5050505050905090565b600060026001600381106200275957fe5b602091828204019190069054906101000a900460ff16905090565b6000620027e76002600380602002604051908101604052809291908260038015620027db576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620027a35790505b50505050508362003b91565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16634d0092886040518163ffffffff1660e01b815260040160206040518083038186803b1580156200283757600080fd5b505afa1580156200284c573d6000803e3d6000fd5b505050506040513d60208110156200286357600080fd5b81019080805190602001909291905050509050919050565b60008373ffffffffffffffffffffffffffffffffffffffff166381b0519984846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015620028d757600080fd5b505afa158015620028ec573d6000803e3d6000fd5b505050506040513d60208110156200290357600080fd5b810190808051906020019092919050505090509392505050565b6040518060400160405280601881526020017f636f6d6d6f6e732e617574682e557365724163636f756e74000000000000000081525081565b60008273ffffffffffffffffffffffffffffffffffffffff166320feabba836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620029aa57600080fd5b505afa158015620029bf573d6000803e3d6000fd5b505050506040513d6020811015620029d657600080fd5b8101908080519060200190929190505050905092915050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141562002a6562003a94565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002ac857808201518184015260208101905062002aab565b50505050905090810190601f16801562002af65780820380516001836020036101000a031916815260200191505b5084810383526023815260200180620048cd602391396040018481038252602781526020018062004826602791396040019550505050505060006040518083038186803b15801562002b4757600080fd5b505af415801562002b5c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462002bb462003b54565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002c1757808201518184015260208101905062002bfa565b50505050905090810190601f16801562002c455780820380516001836020036101000a031916815260200191505b5084810383526025815260200180620047946025913960400184810382526026815260200180620048a7602691396040019550505050505060006040518083038186803b15801562002c9657600080fd5b505af415801562002cab573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462002e005780600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd5b062c07f8a61fda452024e9c9d7db09548980e5f298d0f5cab47c3c9c172b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60008173ffffffffffffffffffffffffffffffffffffffff1663e94e98886040518163ffffffff1660e01b815260040160206040518083038186803b15801562002e4c57600080fd5b505afa15801562002e61573d6000803e3d6000fd5b505050506040513d602081101562002e7857600080fd5b81019080805190602001909291905050509050919050565b60405160200180807f757067726164652861646472657373290000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd3a694e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002f4457600080fd5b505afa15801562002f59573d6000803e3d6000fd5b505050506040513d602081101562002f7057600080fd5b8101908080519060200190929190505050905090565b6040518060400160405280601981526020017f636f6d6d6f6e732e617574682e4f7267616e697a6174696f6e0000000000000081525081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601881526020017f636f6d6d6f6e732e617574682e557365724163636f756e740000000000000000815250604051620030289062003cb2565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620030995780820151818401526020810190506200307c565b50505050905090810190601f168015620030c75780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f080158015620030ea573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663485cc95584846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015620031a157600080fd5b505af1158015620031b6573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364a6a287836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200325d57600080fd5b505af115801562003272573d6000803e3d6000fd5b505050506040513d60208110156200328957600080fd5b81019080805190602001909291905050509050620032a662003b4b565b811415620033965760008514158015620032ed5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1562003395578273ffffffffffffffffffffffffffffffffffffffff1663ddeb1cfc86846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200337b57600080fd5b505af115801562003390573d6000803e3d6000fd5b505050505b5b509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff166335e072446040518163ffffffff1660e01b815260040160206040518083038186803b158015620033e757600080fd5b505afa158015620033fc573d6000803e3d6000fd5b505050506040513d60208110156200341357600080fd5b81019080805190602001909291905050509050919050565b60405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b0190506040516020818303038152906040528051906020012081565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7abd5ea836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200358a57600080fd5b505afa1580156200359f573d6000803e3d6000fd5b505050506040513d6020811015620035b657600080fd5b81019080805190602001909291905050509050919050565b600081905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663aaa8282b836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200362d57600080fd5b505afa15801562003642573d6000803e3d6000fd5b505050506040513d60208110156200365957600080fd5b8101908080519060200190929190505050905092915050565b6000600280600381106200368257fe5b602091828204019190069054906101000a900460ff16905090565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015620037e95750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1663e72848796040518163ffffffff1660e01b815260040160206040518083038186803b1580156200379357600080fd5b505afa158015620037a8573d6000803e3d6000fd5b505050506040513d6020811015620037bf57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614155b620037f362003a94565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200385657808201518184015260208101905062003839565b50505050905090810190601f168015620038845780820380516001836020036101000a031916815260200191505b508481038352602481526020018062004725602491396040018481038252605781526020018062004922605791396060019550505050505060006040518083038186803b158015620038d557600080fd5b505af4158015620038ea573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16637f692a2a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200394c57600080fd5b505afa15801562003961573d6000803e3d6000fd5b505050506040513d60208110156200397857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415620039eb57816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b919050565b600081905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663ffcc7bbf836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562003a4f57600080fd5b505afa15801562003a64573d6000803e3d6000fd5b505050506040513d602081101562003a7b57600080fd5b8101908080519060200190929190505050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b600062003bc38360006003811062003ba557fe5b60200201518360006003811062003bb857fe5b602002015162003c54565b90506000811462003bd75780905062003c4e565b62003c078360016003811062003be957fe5b60200201518360016003811062003bfc57fe5b602002015162003c54565b90506000811462003c1b5780905062003c4e565b62003c4b8360026003811062003c2d57fe5b60200201518360026003811062003c4057fe5b602002015162003c54565b90505b92915050565b60008260ff168260ff16141562003c6f576000905062003cac565b8260ff168260ff16101562003ca7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905062003cac565b600190505b92915050565b610a198062003ce383390190565b604051806060016040528060039060208202803883398082019150509050509056fe608060405234801561001057600080fd5b50604051610a19380380610a198339818101604052604081101561003357600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b5060405250505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461015461041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156101b557808201518184015260208101905061019a565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f720000000000000000008152506020018481038252602a8152602001806109c7602a91396040019550505050505060006040518083038186803b15801561024d57600080fd5b505af4158015610261573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600083511461029661041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f7200000000000000000081525060200184810382526025815260200180610953602591396040019550505050505060006040518083038186803b15801561038f57600080fd5b505af41580156103a3573d6000803e3d6000fd5b50505050600060405180806109a1602691396026019050604051809103902090506000604051808061097860299139602901905060405180910390209050600060405180806109f16028913960280190506040518091039020905084835583518255602084015181555050505050610453565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b6104f1806104626000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bc7f3b50146101c1575b600061003561020b565b905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610089610324565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156100ea5780820151818401526020810190506100cf565b50505050905090810190601f1680156101175780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f416273747261637444656c656761746550726f787900000000000000000000008152506020018481038252602981526020018061041d602991396040019550505050505060006040518083038186803b15801561018257600080fd5b505af4158015610196573d6000803e3d6000fd5b5050505060405136600082376000813683855af43d806000843e81600081146101bd578184f35b8184fd5b6101c961020b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610215610361565b73ffffffffffffffffffffffffffffffffffffffff1663c4c4a8a1610238610387565b6040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028757808201518184015260208101905061026c565b50505050905090810190601f1680156102b45780820380516001836020036101000a031916815260200191505b509250505060806040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250608081101561030a57600080fd5b810190808051906020019092919091905050508091505090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b600080604051808061046f60269139602601905060405180910390209050805491505090565b6060600060405180806104466029913960290190506040518091039020905060006040518080610495602891396028019050604051809103902090506040519250815483528054602084015260408301604052505090565b60606040518060400160405280600681526020017f455252363131000000000000000000000000000000000000000000000000000081525090509056fe44656c6567617465207461726765742061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e646572414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c7565a265627a7a723158208769b48d2a6632a3371f9d972f78f3a1c55146181932edee4b8525f2888056c464736f6c634300050c00325f6f626a656374436c61737320737472696e67206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e6465725f61727469666163747346696e6465722061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c756541727469666163747346696e646572456e61626c65642e73657441727469666163747346696e646572416273747261637444625570677261646561626c652e6163636570744461746162617365546865207570677261646520737563636573736f72206d75737420686176652061206869676865722076657273696f6e207468616e207468652063757272656e7420636f6e74726163742e557067726164654f776e65642e7472616e73666572557067726164654f776e65727368697044656661756c745061727469636970616e74734d616e616765722e6372656174654f7267616e697a6174696f6e4f6e65206f66206d696772617465546f202f206d69677261746546726f6d2072657475726e65642066616c73652e2041626f7274696e6720757067726164652e546865206d73672e73656e646572206973206e6f74207468652075706772616465206f776e657254686520444220636f6e747261637420776173206e6f7420616363657074656420627920746865206e6577206f776e657241627374726163745570677261646561626c652e7072655f68696768657256657273696f6e4f6e6c79546865206e65772075706772616465206f776e6572206d757374206e6f74206265204e554c4c557067726164654f776e65642e7072655f6f6e6c794279557067726164654f776e6572556e61626c6520746f2061646420746865206e6577204f7267616e697a6174696f6e20746f20746865206461746162617365546865206d73672e73656e646572206d757374206569746865722062652074686520757067726164654f776e6572206f72206120636f6e74726163742077697468207468652073616d6520757067726164654f776e65725468652041727469666163747346696e6465722061646472657373206d757374206e6f74206265206e756c6ca265627a7a723158208dced14291ed54fdb0b658a26d7f42b53849ecde31f5e6d806140169d169068564736f6c634300050c0032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365";
        bytecode = Replace(bytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        const data = bytecode;
        const payload = client.payload(data);
        return new Promise((resolve, reject) => { client.deploy(payload, (err, addr) => {
            if (err)
                reject(err);
            else {
                const address = Buffer.from(addr).toString("hex").toUpperCase();
                resolve(address);
            }
        }); });
    }
    export class Contract<Tx> {
        private client: Provider<Tx>;
        public address: string;
        constructor(client: Provider<Tx>, address: string) {
            this.client = client;
            this.address = address;
        }
        LogUpgradeOwnerChanged(callback: (err: Error, event: any) => void): Readable { return this.client.listen("LogUpgradeOwnerChanged", this.address, callback); }
        ERC165_ID_ArtifactsFinderEnabled() {
            const data = Encode(this.client).ERC165_ID_ArtifactsFinderEnabled();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_ArtifactsFinderEnabled();
            });
        }
        ERC165_ID_ObjectFactory() {
            const data = Encode(this.client).ERC165_ID_ObjectFactory();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_ObjectFactory();
            });
        }
        ERC165_ID_Upgradeable() {
            const data = Encode(this.client).ERC165_ID_Upgradeable();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_Upgradeable();
            });
        }
        ERC165_ID_VERSIONED_ARTIFACT() {
            const data = Encode(this.client).ERC165_ID_VERSIONED_ARTIFACT();
            return Call<Tx, [Buffer]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).ERC165_ID_VERSIONED_ARTIFACT();
            });
        }
        OBJECT_CLASS_ORGANIZATION() {
            const data = Encode(this.client).OBJECT_CLASS_ORGANIZATION();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).OBJECT_CLASS_ORGANIZATION();
            });
        }
        OBJECT_CLASS_USER_ACCOUNT() {
            const data = Encode(this.client).OBJECT_CLASS_USER_ACCOUNT();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).OBJECT_CLASS_USER_ACCOUNT();
            });
        }
        acceptDatabase(_db: string) {
            const data = Encode(this.client).acceptDatabase(_db);
            return Call<Tx, {
                accepted: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).acceptDatabase();
            });
        }
        compareArtifactVersion(_other: string, _version: [number, number, number]) {
            const data = Encode(this.client).compareArtifactVersion(_other, _version);
            return Call<Tx, {
                result: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).compareArtifactVersion();
            });
        }
        createOrganization(_initialApprovers: string[]) {
            const data = Encode(this.client).createOrganization(_initialApprovers);
            return Call<Tx, {
                error: number;
                organization: string;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createOrganization();
            });
        }
        createUserAccount(_id: Buffer, _owner: string, _ecosystem: string) {
            const data = Encode(this.client).createUserAccount(_id, _owner, _ecosystem);
            return Call<Tx, {
                userAccount: string;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).createUserAccount();
            });
        }
        departmentExists(_organization: string, _departmentId: Buffer) {
            const data = Encode(this.client).departmentExists(_organization, _departmentId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).departmentExists();
            });
        }
        getApproverAtIndex(_organization: string, _pos: number) {
            const data = Encode(this.client).getApproverAtIndex(_organization, _pos);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getApproverAtIndex();
            });
        }
        getApproverData(_approver: string) {
            const data = Encode(this.client).getApproverData(_approver);
            return Call<Tx, {
                approverAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getApproverData();
            });
        }
        getArtifactVersion() {
            const data = Encode(this.client).getArtifactVersion();
            return Call<Tx, [[number, number, number]]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersion();
            });
        }
        getArtifactVersionMajor() {
            const data = Encode(this.client).getArtifactVersionMajor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMajor();
            });
        }
        getArtifactVersionMinor() {
            const data = Encode(this.client).getArtifactVersionMinor();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionMinor();
            });
        }
        getArtifactVersionPatch() {
            const data = Encode(this.client).getArtifactVersionPatch();
            return Call<Tx, [number]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getArtifactVersionPatch();
            });
        }
        getDepartmentAtIndex(_organization: string, _index: number) {
            const data = Encode(this.client).getDepartmentAtIndex(_organization, _index);
            return Call<Tx, {
                id: Buffer;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentAtIndex();
            });
        }
        getDepartmentData(_organization: string, _id: Buffer) {
            const data = Encode(this.client).getDepartmentData(_organization, _id);
            return Call<Tx, {
                userCount: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentData();
            });
        }
        getDepartmentUserAtIndex(_organization: string, _depId: Buffer, _index: number) {
            const data = Encode(this.client).getDepartmentUserAtIndex(_organization, _depId, _index);
            return Call<Tx, {
                departmentMember: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getDepartmentUserAtIndex();
            });
        }
        getNumberOfApprovers(_organization: string) {
            const data = Encode(this.client).getNumberOfApprovers(_organization);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfApprovers();
            });
        }
        getNumberOfDepartmentUsers(_organization: string, _depId: Buffer) {
            const data = Encode(this.client).getNumberOfDepartmentUsers(_organization, _depId);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfDepartmentUsers();
            });
        }
        getNumberOfDepartments(_organization: string) {
            const data = Encode(this.client).getNumberOfDepartments(_organization);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfDepartments();
            });
        }
        getNumberOfOrganizations() {
            const data = Encode(this.client).getNumberOfOrganizations();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfOrganizations();
            });
        }
        getNumberOfUsers(_organization: string) {
            const data = Encode(this.client).getNumberOfUsers(_organization);
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getNumberOfUsers();
            });
        }
        getOrganizationAtIndex(_pos: number) {
            const data = Encode(this.client).getOrganizationAtIndex(_pos);
            return Call<Tx, {
                organization: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOrganizationAtIndex();
            });
        }
        getOrganizationData(_organization: string) {
            const data = Encode(this.client).getOrganizationData(_organization);
            return Call<Tx, {
                numApprovers: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getOrganizationData();
            });
        }
        getUpgradeOwner() {
            const data = Encode(this.client).getUpgradeOwner();
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUpgradeOwner();
            });
        }
        getUserAccountsSize() {
            const data = Encode(this.client).getUserAccountsSize();
            return Call<Tx, {
                size: number;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserAccountsSize();
            });
        }
        getUserAtIndex(_organization: string, _pos: number) {
            const data = Encode(this.client).getUserAtIndex(_organization, _pos);
            return Call<Tx, [string]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserAtIndex();
            });
        }
        getUserData(_user: string) {
            const data = Encode(this.client).getUserData(_user);
            return Call<Tx, {
                userAddress: string;
            }>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).getUserData();
            });
        }
        migrateFrom() {
            const data = Encode(this.client).migrateFrom();
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).migrateFrom();
            });
        }
        migrateTo(_successor: string) {
            const data = Encode(this.client).migrateTo(_successor);
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).migrateTo();
            });
        }
        organizationExists(_address: string) {
            const data = Encode(this.client).organizationExists(_address);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).organizationExists();
            });
        }
        setArtifactsFinder(_artifactsFinder: string) {
            const data = Encode(this.client).setArtifactsFinder(_artifactsFinder);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).setArtifactsFinder();
            });
        }
        supportsInterface(_interfaceId: Buffer) {
            const data = Encode(this.client).supportsInterface(_interfaceId);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).supportsInterface();
            });
        }
        transferUpgradeOwnership(_newOwner: string) {
            const data = Encode(this.client).transferUpgradeOwnership(_newOwner);
            return Call<Tx, void>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).transferUpgradeOwnership();
            });
        }
        upgrade(_successor: string) {
            const data = Encode(this.client).upgrade(_successor);
            return Call<Tx, {
                success: boolean;
            }>(this.client, this.address, data, false, (exec: Uint8Array) => {
                return Decode(this.client, exec).upgrade();
            });
        }
        userAccountExists(_userAccount: string) {
            const data = Encode(this.client).userAccountExists(_userAccount);
            return Call<Tx, [boolean]>(this.client, this.address, data, true, (exec: Uint8Array) => {
                return Decode(this.client, exec).userAccountExists();
            });
        }
    }
    export const Encode = <Tx>(client: Provider<Tx>) => { return {
        ERC165_ID_ArtifactsFinderEnabled: () => { return client.encode("D556028D", []); },
        ERC165_ID_ObjectFactory: () => { return client.encode("54AF67B7", []); },
        ERC165_ID_Upgradeable: () => { return client.encode("B21C815F", []); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return client.encode("E10533C6", []); },
        OBJECT_CLASS_ORGANIZATION: () => { return client.encode("BF90B027", []); },
        OBJECT_CLASS_USER_ACCOUNT: () => { return client.encode("9B3EF402", []); },
        acceptDatabase: (_db: string) => { return client.encode("F4ACE0D0", ["address"], _db); },
        compareArtifactVersion: (_other: string, _version: [number, number, number]) => {
            if (typeof _other === "string")
                return client.encode("5C030138", ["address"], _other);
            if (typeof _version === "string")
                return client.encode("78BC0B0D", ["uint8[3]"], _version);
        },
        createOrganization: (_initialApprovers: string[]) => { return client.encode("0EC8D39A", ["address[]"], _initialApprovers); },
        createUserAccount: (_id: Buffer, _owner: string, _ecosystem: string) => { return client.encode("C392DF6B", ["bytes32", "address", "address"], _id, _owner, _ecosystem); },
        departmentExists: (_organization: string, _departmentId: Buffer) => { return client.encode("AB8EC038", ["address", "bytes32"], _organization, _departmentId); },
        getApproverAtIndex: (_organization: string, _pos: number) => { return client.encode("3DAF56B8", ["address", "uint256"], _organization, _pos); },
        getApproverData: (_approver: string) => { return client.encode("EC89DA8B", ["address"], _approver); },
        getArtifactVersion: () => { return client.encode("756B2E6C", []); },
        getArtifactVersionMajor: () => { return client.encode("57E0EBCA", []); },
        getArtifactVersionMinor: () => { return client.encode("7589ADB7", []); },
        getArtifactVersionPatch: () => { return client.encode("F085F6DD", []); },
        getDepartmentAtIndex: (_organization: string, _index: number) => { return client.encode("EC9C6220", ["address", "uint256"], _organization, _index); },
        getDepartmentData: (_organization: string, _id: Buffer) => { return client.encode("6CFB6C6B", ["address", "bytes32"], _organization, _id); },
        getDepartmentUserAtIndex: (_organization: string, _depId: Buffer, _index: number) => { return client.encode("87DE70A7", ["address", "bytes32", "uint256"], _organization, _depId, _index); },
        getNumberOfApprovers: (_organization: string) => { return client.encode("CC5BAF17", ["address"], _organization); },
        getNumberOfDepartmentUsers: (_organization: string, _depId: Buffer) => { return client.encode("1065FFB9", ["address", "bytes32"], _organization, _depId); },
        getNumberOfDepartments: (_organization: string) => { return client.encode("AD76666D", ["address"], _organization); },
        getNumberOfOrganizations: () => { return client.encode("BD3A694E", []); },
        getNumberOfUsers: (_organization: string) => { return client.encode("851D585E", ["address"], _organization); },
        getOrganizationAtIndex: (_pos: number) => { return client.encode("031E8EAF", ["uint256"], _pos); },
        getOrganizationData: (_organization: string) => { return client.encode("69AD9617", ["address"], _organization); },
        getUpgradeOwner: () => { return client.encode("E7284879", []); },
        getUserAccountsSize: () => { return client.encode("17BD60EF", []); },
        getUserAtIndex: (_organization: string, _pos: number) => { return client.encode("FDBB918F", ["address", "uint256"], _organization, _pos); },
        getUserData: (_user: string) => { return client.encode("F4EEEFE9", ["address"], _user); },
        migrateFrom: () => { return client.encode("35657E68", []); },
        migrateTo: (_successor: string) => { return client.encode("4DDAF8F2", ["address"], _successor); },
        organizationExists: (_address: string) => { return client.encode("E7ABD5EA", ["address"], _address); },
        setArtifactsFinder: (_artifactsFinder: string) => { return client.encode("2A8E9AB2", ["address"], _artifactsFinder); },
        supportsInterface: (_interfaceId: Buffer) => { return client.encode("01FFC9A7", ["bytes4"], _interfaceId); },
        transferUpgradeOwnership: (_newOwner: string) => { return client.encode("AC83EC7C", ["address"], _newOwner); },
        upgrade: (_successor: string) => { return client.encode("0900F010", ["address"], _successor); },
        userAccountExists: (_userAccount: string) => { return client.encode("02F53264", ["address"], _userAccount); }
    }; };
    export const Decode = <Tx>(client: Provider<Tx>, data: Uint8Array) => { return {
        ERC165_ID_ArtifactsFinderEnabled: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_ObjectFactory: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_Upgradeable: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [Buffer] => { return client.decode(data, ["bytes4"]); },
        OBJECT_CLASS_ORGANIZATION: (): [string] => { return client.decode(data, ["string"]); },
        OBJECT_CLASS_USER_ACCOUNT: (): [string] => { return client.decode(data, ["string"]); },
        acceptDatabase: (): {
            accepted: boolean;
        } => {
            const [accepted] = client.decode(data, ["bool"]);
            return { accepted: accepted };
        },
        compareArtifactVersion: (): {
            result: number;
        } => {
            const [result] = client.decode(data, ["int256"]);
            return { result: result };
        },
        createOrganization: (): {
            error: number;
            organization: string;
        } => {
            const [error, organization] = client.decode(data, ["uint256", "address"]);
            return { error: error, organization: organization };
        },
        createUserAccount: (): {
            userAccount: string;
        } => {
            const [userAccount] = client.decode(data, ["address"]);
            return { userAccount: userAccount };
        },
        departmentExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        getApproverAtIndex: (): [string] => { return client.decode(data, ["address"]); },
        getApproverData: (): {
            approverAddress: string;
        } => {
            const [approverAddress] = client.decode(data, ["address"]);
            return { approverAddress: approverAddress };
        },
        getArtifactVersion: (): [[number, number, number]] => { return client.decode(data, ["uint8[3]"]); },
        getArtifactVersionMajor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionMinor: (): [number] => { return client.decode(data, ["uint8"]); },
        getArtifactVersionPatch: (): [number] => { return client.decode(data, ["uint8"]); },
        getDepartmentAtIndex: (): {
            id: Buffer;
        } => {
            const [id] = client.decode(data, ["bytes32"]);
            return { id: id };
        },
        getDepartmentData: (): {
            userCount: number;
        } => {
            const [userCount] = client.decode(data, ["uint256"]);
            return { userCount: userCount };
        },
        getDepartmentUserAtIndex: (): {
            departmentMember: string;
        } => {
            const [departmentMember] = client.decode(data, ["address"]);
            return { departmentMember: departmentMember };
        },
        getNumberOfApprovers: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfDepartmentUsers: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfDepartments: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfOrganizations: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getNumberOfUsers: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getOrganizationAtIndex: (): {
            organization: string;
        } => {
            const [organization] = client.decode(data, ["address"]);
            return { organization: organization };
        },
        getOrganizationData: (): {
            numApprovers: number;
        } => {
            const [numApprovers] = client.decode(data, ["uint256"]);
            return { numApprovers: numApprovers };
        },
        getUpgradeOwner: (): [string] => { return client.decode(data, ["address"]); },
        getUserAccountsSize: (): {
            size: number;
        } => {
            const [size] = client.decode(data, ["uint256"]);
            return { size: size };
        },
        getUserAtIndex: (): [string] => { return client.decode(data, ["address"]); },
        getUserData: (): {
            userAddress: string;
        } => {
            const [userAddress] = client.decode(data, ["address"]);
            return { userAddress: userAddress };
        },
        migrateFrom: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        migrateTo: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        organizationExists: (): [boolean] => { return client.decode(data, ["bool"]); },
        setArtifactsFinder: (): void => { return; },
        supportsInterface: (): [boolean] => { return client.decode(data, ["bool"]); },
        transferUpgradeOwnership: (): void => { return; },
        upgrade: (): {
            success: boolean;
        } => {
            const [success] = client.decode(data, ["bool"]);
            return { success: success };
        },
        userAccountExists: (): [boolean] => { return client.decode(data, ["bool"]); }
    }; };
}