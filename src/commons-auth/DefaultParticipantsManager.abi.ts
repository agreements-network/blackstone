//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module DefaultParticipantsManager {
    export const contactName = "DefaultParticipantsManager";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogUpgradeOwnerChanged","type":"event"},{"constant":true,"inputs":[],"name":"ERC165_ID_ArtifactsFinderEnabled","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_ObjectFactory","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_Upgradeable","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"OBJECT_CLASS_ORGANIZATION","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"OBJECT_CLASS_USER_ACCOUNT","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_db","type":"address"}],"name":"acceptDatabase","outputs":[{"internalType":"bool","name":"accepted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address[]","name":"_initialApprovers","type":"address[]"}],"name":"createOrganization","outputs":[{"internalType":"uint256","name":"error","type":"uint256"},{"internalType":"address","name":"organization","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_ecosystem","type":"address"}],"name":"createUserAccount","outputs":[{"internalType":"address","name":"userAccount","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"},{"internalType":"bytes32","name":"_departmentId","type":"bytes32"}],"name":"departmentExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"},{"internalType":"uint256","name":"_pos","type":"uint256"}],"name":"getApproverAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"_approver","type":"address"}],"name":"getApproverData","outputs":[{"internalType":"address","name":"approverAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getDepartmentAtIndex","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"},{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDepartmentData","outputs":[{"internalType":"uint256","name":"userCount","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"},{"internalType":"bytes32","name":"_depId","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getDepartmentUserAtIndex","outputs":[{"internalType":"address","name":"departmentMember","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"}],"name":"getNumberOfApprovers","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"},{"internalType":"bytes32","name":"_depId","type":"bytes32"}],"name":"getNumberOfDepartmentUsers","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"}],"name":"getNumberOfDepartments","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfOrganizations","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"}],"name":"getNumberOfUsers","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_pos","type":"uint256"}],"name":"getOrganizationAtIndex","outputs":[{"internalType":"address","name":"organization","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"}],"name":"getOrganizationData","outputs":[{"internalType":"uint256","name":"numApprovers","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUpgradeOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getUserAccountsSize","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_organization","type":"address"},{"internalType":"uint256","name":"_pos","type":"uint256"}],"name":"getUserAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserData","outputs":[{"internalType":"address","name":"userAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"migrateFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_successor","type":"address"}],"name":"migrateTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"organizationExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_artifactsFinder","type":"address"}],"name":"setArtifactsFinder","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferUpgradeOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_successor","type":"address"}],"name":"upgrade","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"}],"name":"userAccountExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}]';
    export const bytecode = '6080604052600160008060018060006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055508260026000600381106200006a57fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508160026001600381106200009a57fe5b602091828204019190066101000a81548160ff021916908360ff1602179055508060028060038110620000c957fe5b602091828204019190066101000a81548160ff021916908360ff1602179055506200014060405160200180807f676574417274696661637456657273696f6e28290000000000000000000000008152506014019050604051602081830303815290604052805190602001206200028f60201b60201c565b5050506200019a60405160200180807f6765744f626a656374436c6173736573282900000000000000000000000000008152506012019050604051602081830303815290604052805190602001206200028f60201b60201c565b620001f160405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b019050604051602081830303815290604052805190602001206200028f60201b60201c565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200028960405160200180807f75706772616465286164647265737329000000000000000000000000000000008152506010019050604051602081830303815290604052805190602001206200028f60201b60201c565b6200037c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018062004d65602f913960400191505060405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6149d9806200038c6000396000f3fe60806040523480156200001157600080fd5b5060043610620002805760003560e01c806387de70a71162000159578063d556028d11620000c9578063ec9c62201162000087578063ec9c62201462001031578063f085f6dd1462001096578063f4ace0d014620010bc578063f4eeefe9146200111b578063fdbb918f14620011c25762000280565b8063d556028d1462000e23578063e10533c61462000e81578063e72848791462000edf578063e7abd5ea1462000f2b578063ec89da8b1462000f8a5762000280565b8063b21c815f1162000117578063b21c815f1462000c11578063bd3a694e1462000c6f578063bf90b0271462000c8f578063c392df6b1462000d17578063cc5baf171462000dc85762000280565b806387de70a714620009e35780639b3ef4021462000a7e578063ab8ec0381462000b06578063ac83ec7c1462000b6f578063ad76666d1462000bb65762000280565b80634ddaf8f211620001f55780636cfb6c6b11620001b35780636cfb6c6b1462000837578063756b2e6c146200089c5780637589adb714620008e657806378bc0b0d146200090c578063851d585e14620009885762000280565b80634ddaf8f2146200069e57806354af67b714620006fd57806357e0ebca146200075b5780635c030138146200078157806369ad961714620007dc5762000280565b80631065ffb911620002435780631065ffb914620004e257806317bd60ef14620005475780632a8e9ab2146200056757806335657e6814620005ae5780633daf56b8146200060d5762000280565b806301ffc9a7146200028557806302f5326414620002ed578063031e8eaf146200034c5780630900f01014620003bd5780630ec8d39a146200041c575b600080fd5b620002d3600480360360208110156200029d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505062001253565b604051808215151515815260200191505060405180910390f35b62000332600480360360208110156200030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620012bb565b604051808215151515815260200191505060405180910390f35b6200037b600480360360208110156200036457600080fd5b8101908080359060200190929190505050620013a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200040260048036036020811015620003d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001459565b604051808215151515815260200191505060405180910390f35b62000499600480360360208110156200043457600080fd5b81019080803590602001906401000000008111156200045257600080fd5b8201836020820111156200046557600080fd5b803590602001918460208302840111640100000000831117156200048857600080fd5b909192939192939050505062001910565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6200053160048036036040811015620004fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001dda565b6040518082815260200191505060405180910390f35b6200055162001e73565b6040518082815260200191505060405180910390f35b620005ac600480360360208110156200057f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001f1f565b005b620005f360048036036020811015620005c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620020b2565b604051808215151515815260200191505060405180910390f35b6200065c600480360360408110156200062557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620020bd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620006e360048036036020811015620006b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002156565b604051808215151515815260200191505060405180910390f35b6200070762002434565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b620007656200247e565b604051808260ff1660ff16815260200191505060405180910390f35b620007c6600480360360208110156200079957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620024aa565b6040518082815260200191505060405180910390f35b6200082160048036036020811015620007f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620025ad565b6040518082815260200191505060405180910390f35b62000886600480360360408110156200084f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506200263a565b6040518082815260200191505060405180910390f35b620008a6620026d3565b6040518082600360200280838360005b83811015620008d3578082015181840152602081019050620008b6565b5050505090500191505060405180910390f35b620008f062002748565b604051808260ff1660ff16815260200191505060405180910390f35b62000972600480360360608110156200092457600080fd5b8101908080606001906003806020026040519081016040528092919082600360200280828437600081840152601f19601f820116905080830192505050505050919291929050505062002774565b6040518082815260200191505060405180910390f35b620009cd60048036036020811015620009a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620027ee565b6040518082815260200191505060405180910390f35b62000a3c60048036036060811015620009fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506200287b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000a886200291d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562000aca57808201518184015260208101905062000aad565b50505050905090810190601f16801562000af85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000b556004803603604081101562000b1e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062002956565b604051808215151515815260200191505060405180910390f35b62000bb46004803603602081101562000b8757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620029ef565b005b62000bfb6004803603602081101562000bce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002e03565b6040518082815260200191505060405180910390f35b62000c1b62002e90565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62000c7962002eda565b6040518082815260200191505060405180910390f35b62000c9962002f86565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101562000cdb57808201518184015260208101905062000cbe565b50505050905090810190601f16801562000d095780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b62000d866004803603606081101562000d2f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002fbf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000e0d6004803603602081101562000de057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200339e565b6040518082815260200191505060405180910390f35b62000e2d6200342b565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62000e8b62003475565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b62000ee9620034bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000f706004803603602081101562000f4357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620034e9565b604051808215151515815260200191505060405180910390f35b62000fef6004803603604081101562000fa257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620035ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62001080600480360360408110156200104957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620035d9565b6040518082815260200191505060405180910390f35b620010a062003672565b604051808260ff1660ff16815260200191505060405180910390f35b6200110160048036036020811015620010d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200369d565b604051808215151515815260200191505060405180910390f35b62001180600480360360408110156200113357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620039f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200121160048036036040811015620011da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620039fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302f53264836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200135c57600080fd5b505afa15801562001371573d6000803e3d6000fd5b505050506040513d60208110156200138857600080fd5b81019080805190602001909291905050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663031e8eaf836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200141557600080fd5b505afa1580156200142a573d6000803e3d6000fd5b505050506040513d60208110156200144157600080fd5b81019080805190602001909291905050509050919050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415620014d162003a94565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200153457808201518184015260208101905062001517565b50505050905090810190601f168015620015625780820380516001836020036101000a031916815260200191505b5084810383526023815260200180620048cd602391396040018481038252602781526020018062004826602791396040019550505050505060006040518083038186803b158015620015b357600080fd5b505af4158015620015c8573d6000803e3d6000fd5b505050508173__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6001620015f484620024aa565b12620015ff62003ad1565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200166257808201518184015260208101905062001645565b50505050905090810190601f168015620016905780820380516001836020036101000a031916815260200191505b50848103835260298152602001806200487e602991396040018481038252604b81526020018062004749604b91396060019550505050505060006040518083038186803b158015620016e157600080fd5b505af4158015620016f6573d6000803e3d6000fd5b50505050620017058362002156565b8015620017cb57508273ffffffffffffffffffffffffffffffffffffffff166335657e68306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200178d57600080fd5b505af1158015620017a2573d6000803e3d6000fd5b505050506040513d6020811015620017b957600080fd5b81019080805190602001909291905050505b915073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef8315620017f362003b0e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200185657808201518184015260208101905062001839565b50505050905090810190601f168015620018845780820380516001836020036101000a031916815260200191505b508481038352601b8152602001807f41627374726163745570677261646561626c652e75706772616465000000000081525060200184810382526040815260200180620047e6604091396040019550505050505060006040518083038186803b158015620018f157600080fd5b505af415801562001906573d6000803e3d6000fd5b5050505050919050565b60008060606000858590501415620019a5576001604051908082528060200260200182016040528015620019535781602001602082028038833980820191505090505b50905033816000815181106200196557fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050620019ea565b848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505090505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f636f6d6d6f6e732e617574682e4f7267616e697a6174696f6e0000000000000081525060405162001a519062003cb2565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562001ac257808201518184015260208101905062001aa5565b50505050905090810190601f16801562001af05780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f08015801562001b13573d6000803e3d6000fd5b5091508173ffffffffffffffffffffffffffffffffffffffff1663a224cee7826040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101562001b8757808201518184015260208101905062001b6a565b5050505090500192505050600060405180830381600087803b15801562001bad57600080fd5b505af115801562001bc2573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d68287df836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562001c6757600080fd5b505af115801562001c7c573d6000803e3d6000fd5b505050506040513d602081101562001c9357600080fd5b8101908080519060200190929190505050925073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef62001cca62003b4b565b85141562001cd762003b0e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001d3a57808201518184015260208101905062001d1d565b50505050905090810190601f16801562001d685780820380516001836020036101000a031916815260200191505b508481038352602d815260200180620047b9602d913960400184810382526032815260200180620048f0603291396040019550505050505060006040518083038186803b15801562001db957600080fd5b505af415801562001dce573d6000803e3d6000fd5b50505050509250929050565b60008273ffffffffffffffffffffffffffffffffffffffff16636371e7b4836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562001e2e57600080fd5b505afa15801562001e43573d6000803e3d6000fd5b505050506040513d602081101562001e5a57600080fd5b8101908080519060200190929190505050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d462a0186040518163ffffffff1660e01b815260040160206040518083038186803b15801562001edd57600080fd5b505afa15801562001ef2573d6000803e3d6000fd5b505050506040513d602081101562001f0957600080fd5b8101908080519060200190929190505050905090565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462001f7362003b54565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562001fd657808201518184015260208101905062001fb9565b50505050905090810190601f168015620020045780820380516001836020036101000a031916815260200191505b5084810383526029815260200180620046fc602991396040018481038252602c81526020018062004979602c91396040019550505050505060006040518083038186803b1580156200205557600080fd5b505af41580156200206a573d6000803e3d6000fd5b5050505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019050919050565b60008273ffffffffffffffffffffffffffffffffffffffff1663ea415cfd836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200211157600080fd5b505afa15801562002126573d6000803e3d6000fd5b505050506040513d60208110156200213d57600080fd5b8101908080519060200190929190505050905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630a452ad6836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015620021f957600080fd5b505af11580156200220e573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663f4ace0d06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015620022b357600080fd5b505af1158015620022c8573d6000803e3d6000fd5b505050506040513d6020811015620022df57600080fd5b8101908080519060200190929190505050905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef82156200231862003b0e565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200237b5780820151818401526020810190506200235e565b50505050905090810190601f168015620023a95780820380516001836020036101000a031916815260200191505b508481038352601f8152602001807f416273747261637444625570677261646561626c652e6d696772617465546f00815250602001848103825260318152602001806200484d603191396040019550505050505060006040518083038186803b1580156200241657600080fd5b505af41580156200242b573d6000803e3d6000fd5b50505050919050565b60405160200180807f6765744f626a656374436c61737365732829000000000000000000000000000081525060120190506040516020818303038152906040528051906020012081565b600060026000600381106200248f57fe5b602091828204019190069054906101000a900460ff16905090565b6000620025a6600260038060200260405190810160405280929190826003801562002511576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620024d95790505b50505050508373ffffffffffffffffffffffffffffffffffffffff1663756b2e6c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156200255d57600080fd5b505afa15801562002572573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060608110156200259857600080fd5b810190809190505062003b91565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff166389c9e2ef6040518163ffffffff1660e01b815260040160206040518083038186803b158015620025f657600080fd5b505afa1580156200260b573d6000803e3d6000fd5b505050506040513d60208110156200262257600080fd5b81019080805190602001909291905050509050919050565b60008273ffffffffffffffffffffffffffffffffffffffff1663f06e141e836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200268e57600080fd5b505afa158015620026a3573d6000803e3d6000fd5b505050506040513d6020811015620026ba57600080fd5b8101908080519060200190929190505050905092915050565b620026dd62003cc0565b60026003806020026040519081016040528092919082600380156200273e576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620027065790505b5050505050905090565b600060026001600381106200275957fe5b602091828204019190069054906101000a900460ff16905090565b6000620027e76002600380602002604051908101604052809291908260038015620027db576020028201916000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411620027a35790505b50505050508362003b91565b9050919050565b60008173ffffffffffffffffffffffffffffffffffffffff16634d0092886040518163ffffffff1660e01b815260040160206040518083038186803b1580156200283757600080fd5b505afa1580156200284c573d6000803e3d6000fd5b505050506040513d60208110156200286357600080fd5b81019080805190602001909291905050509050919050565b60008373ffffffffffffffffffffffffffffffffffffffff166381b0519984846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015620028d757600080fd5b505afa158015620028ec573d6000803e3d6000fd5b505050506040513d60208110156200290357600080fd5b810190808051906020019092919050505090509392505050565b6040518060400160405280601881526020017f636f6d6d6f6e732e617574682e557365724163636f756e74000000000000000081525081565b60008273ffffffffffffffffffffffffffffffffffffffff166320feabba836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015620029aa57600080fd5b505afa158015620029bf573d6000803e3d6000fd5b505050506040513d6020811015620029d657600080fd5b8101908080519060200190929190505050905092915050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141562002a6562003a94565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002ac857808201518184015260208101905062002aab565b50505050905090810190601f16801562002af65780820380516001836020036101000a031916815260200191505b5084810383526023815260200180620048cd602391396040018481038252602781526020018062004826602791396040019550505050505060006040518083038186803b15801562002b4757600080fd5b505af415801562002b5c573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462002bb462003b54565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b8381101562002c1757808201518184015260208101905062002bfa565b50505050905090810190601f16801562002c455780820380516001836020036101000a031916815260200191505b5084810383526025815260200180620047946025913960400184810382526026815260200180620048a7602691396040019550505050505060006040518083038186803b15801562002c9657600080fd5b505af415801562002cab573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462002e005780600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd5b062c07f8a61fda452024e9c9d7db09548980e5f298d0f5cab47c3c9c172b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b50565b60008173ffffffffffffffffffffffffffffffffffffffff1663e94e98886040518163ffffffff1660e01b815260040160206040518083038186803b15801562002e4c57600080fd5b505afa15801562002e61573d6000803e3d6000fd5b505050506040513d602081101562002e7857600080fd5b81019080805190602001909291905050509050919050565b60405160200180807f757067726164652861646472657373290000000000000000000000000000000081525060100190506040516020818303038152906040528051906020012081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd3a694e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002f4457600080fd5b505afa15801562002f59573d6000803e3d6000fd5b505050506040513d602081101562002f7057600080fd5b8101908080519060200190929190505050905090565b6040518060400160405280601981526020017f636f6d6d6f6e732e617574682e4f7267616e697a6174696f6e0000000000000081525081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601881526020017f636f6d6d6f6e732e617574682e557365724163636f756e740000000000000000815250604051620030289062003cb2565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620030995780820151818401526020810190506200307c565b50505050905090810190601f168015620030c75780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f080158015620030ea573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff1663485cc95584846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015620031a157600080fd5b505af1158015620031b6573d6000803e3d6000fd5b5050505060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364a6a287836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156200325d57600080fd5b505af115801562003272573d6000803e3d6000fd5b505050506040513d60208110156200328957600080fd5b81019080805190602001909291905050509050620032a662003b4b565b811415620033965760008514158015620032ed5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1562003395578273ffffffffffffffffffffffffffffffffffffffff1663ddeb1cfc86846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200337b57600080fd5b505af115801562003390573d6000803e3d6000fd5b505050505b5b509392505050565b60008173ffffffffffffffffffffffffffffffffffffffff166335e072446040518163ffffffff1660e01b815260040160206040518083038186803b158015620033e757600080fd5b505afa158015620033fc573d6000803e3d6000fd5b505050506040513d60208110156200341357600080fd5b81019080805190602001909291905050509050919050565b60405160200180807f73657441727469666163747346696e6465722861646472657373290000000000815250601b0190506040516020818303038152906040528051906020012081565b60405160200180807f676574417274696661637456657273696f6e282900000000000000000000000081525060140190506040516020818303038152906040528051906020012081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7abd5ea836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156200358a57600080fd5b505afa1580156200359f573d6000803e3d6000fd5b505050506040513d6020811015620035b657600080fd5b81019080805190602001909291905050509050919050565b600081905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663aaa8282b836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156200362d57600080fd5b505afa15801562003642573d6000803e3d6000fd5b505050506040513d60208110156200365957600080fd5b8101908080519060200190929190505050905092915050565b6000600280600381106200368257fe5b602091828204019190069054906101000a900460ff16905090565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015620037e95750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1663e72848796040518163ffffffff1660e01b815260040160206040518083038186803b1580156200379357600080fd5b505afa158015620037a8573d6000803e3d6000fd5b505050506040513d6020811015620037bf57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614155b620037f362003a94565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156200385657808201518184015260208101905062003839565b50505050905090810190601f168015620038845780820380516001836020036101000a031916815260200191505b508481038352602481526020018062004725602491396040018481038252605781526020018062004922605791396060019550505050505060006040518083038186803b158015620038d557600080fd5b505af4158015620038ea573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16637f692a2a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200394c57600080fd5b505afa15801562003961573d6000803e3d6000fd5b505050506040513d60208110156200397857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415620039eb57816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b919050565b600081905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663ffcc7bbf836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801562003a4f57600080fd5b505afa15801562003a64573d6000803e3d6000fd5b505050506040513d602081101562003a7b57600080fd5b8101908080519060200190929190505050905092915050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523432320000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b60006001905090565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b600062003bc38360006003811062003ba557fe5b60200201518360006003811062003bb857fe5b602002015162003c54565b90506000811462003bd75780905062003c4e565b62003c078360016003811062003be957fe5b60200201518360016003811062003bfc57fe5b602002015162003c54565b90506000811462003c1b5780905062003c4e565b62003c4b8360026003811062003c2d57fe5b60200201518360026003811062003c4057fe5b602002015162003c54565b90505b92915050565b60008260ff168260ff16141562003c6f576000905062003cac565b8260ff168260ff16101562003ca7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905062003cac565b600190505b92915050565b610a198062003ce383390190565b604051806060016040528060039060208202803883398082019150509050509056fe608060405234801561001057600080fd5b50604051610a19380380610a198339818101604052604081101561003357600080fd5b81019080805190602001909291908051604051939291908464010000000082111561005d57600080fd5b8382019150602082018581111561007357600080fd5b825186600182028301116401000000008211171561009057600080fd5b8083526020830192505050908051906020019080838360005b838110156100c45780820151818401526020810190506100a9565b50505050905090810190601f1680156100f15780820380516001836020036101000a031916815260200191505b5060405250505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461015461041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156101b557808201518184015260208101905061019a565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f720000000000000000008152506020018481038252602a8152602001806109c7602a91396040019550505050505060006040518083038186803b15801561024d57600080fd5b505af4158015610261573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600083511461029661041660201b6103df1760201c565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b50848103835260178152602001807f4f626a65637450726f78792e636f6e7374727563746f7200000000000000000081525060200184810382526025815260200180610953602591396040019550505050505060006040518083038186803b15801561038f57600080fd5b505af41580156103a3573d6000803e3d6000fd5b50505050600060405180806109a1602691396026019050604051809103902090506000604051808061097860299139602901905060405180910390209050600060405180806109f16028913960280190506040518091039020905084835583518255602084015181555050505050610453565b60606040518060400160405280600681526020017f4552523631310000000000000000000000000000000000000000000000000000815250905090565b6104f1806104626000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bc7f3b50146101c1575b600061003561020b565b905073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610089610324565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156100ea5780820151818401526020810190506100cf565b50505050905090810190601f1680156101175780820380516001836020036101000a031916815260200191505b50848103835260158152602001807f416273747261637444656c656761746550726f787900000000000000000000008152506020018481038252602981526020018061041d602991396040019550505050505060006040518083038186803b15801561018257600080fd5b505af4158015610196573d6000803e3d6000fd5b5050505060405136600082376000813683855af43d806000843e81600081146101bd578184f35b8184fd5b6101c961020b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000610215610361565b73ffffffffffffffffffffffffffffffffffffffff1663c4c4a8a1610238610387565b6040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561028757808201518184015260208101905061026c565b50505050905090810190601f1680156102b45780820380516001836020036101000a031916815260200191505b509250505060806040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250608081101561030a57600080fd5b810190808051906020019092919091905050508091505090565b60606040518060400160405280600681526020017f4552523630300000000000000000000000000000000000000000000000000000815250905090565b600080604051808061046f60269139602601905060405180910390209050805491505090565b6060600060405180806104466029913960290190506040518091039020905060006040518080610495602891396028019050604051809103902090506040519250815483528054602084015260408301604052505090565b60606040518060400160405280600681526020017f455252363131000000000000000000000000000000000000000000000000000081525090509056fe44656c6567617465207461726765742061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e646572414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c7565a265627a7a723158201a1f8fd564872c22f611b2f1b7a0d5e703a0616136abbe83969c2719613e205064736f6c634300051100325f6f626a656374436c61737320737472696e67206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f6c656e677468414e3a2f2f636f6e74726163742f73746f726167652f6172746966616374732d66696e6465725f61727469666163747346696e6465722061646472657373206d757374206e6f7420626520656d707479414e3a2f2f636f6e74726163742f73746f726167652f6f626a6563742d636c6173732f76616c756541727469666163747346696e646572456e61626c65642e73657441727469666163747346696e646572416273747261637444625570677261646561626c652e6163636570744461746162617365546865207570677261646520737563636573736f72206d75737420686176652061206869676865722076657273696f6e207468616e207468652063757272656e7420636f6e74726163742e557067726164654f776e65642e7472616e73666572557067726164654f776e65727368697044656661756c745061727469636970616e74734d616e616765722e6372656174654f7267616e697a6174696f6e4f6e65206f66206d696772617465546f202f206d69677261746546726f6d2072657475726e65642066616c73652e2041626f7274696e6720757067726164652e546865206d73672e73656e646572206973206e6f74207468652075706772616465206f776e657254686520444220636f6e747261637420776173206e6f7420616363657074656420627920746865206e6577206f776e657241627374726163745570677261646561626c652e7072655f68696768657256657273696f6e4f6e6c79546865206e65772075706772616465206f776e6572206d757374206e6f74206265204e554c4c557067726164654f776e65642e7072655f6f6e6c794279557067726164654f776e6572556e61626c6520746f2061646420746865206e6577204f7267616e697a6174696f6e20746f20746865206461746162617365546865206d73672e73656e646572206d757374206569746865722062652074686520757067726164654f776e6572206f72206120636f6e74726163742077697468207468652073616d6520757067726164654f776e65725468652041727469666163747346696e6465722061646472657373206d757374206e6f74206265206e756c6ca265627a7a72315820f057fbcb9be5fc2e448886d72ec26ba2b8283413232aefe88b25eb68a8fb9bdb64736f6c63430005110032466f7262696464656e2076616c7565203078666666666666666620666f722045524331363520696e74657266616365';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string): Promise<string> {
        const codec = client.contractCodec(abi);
        let linkedBytecode = bytecode;
        linkedBytecode = linker(linkedBytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        const payload = client.payload(data);
        return client.deploy(payload);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogUpgradeOwnerChanged: { signature: "D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogUpgradeOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { ERC165_ID_ArtifactsFinderEnabled(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_ArtifactsFinderEnabled();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_ArtifactsFinderEnabled();
                });
            }, ERC165_ID_ObjectFactory(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_ObjectFactory();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_ObjectFactory();
                });
            }, ERC165_ID_Upgradeable(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_Upgradeable();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_Upgradeable();
                });
            }, ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, OBJECT_CLASS_ORGANIZATION(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).OBJECT_CLASS_ORGANIZATION();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).OBJECT_CLASS_ORGANIZATION();
                });
            }, OBJECT_CLASS_USER_ACCOUNT(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).OBJECT_CLASS_USER_ACCOUNT();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).OBJECT_CLASS_USER_ACCOUNT();
                });
            }, acceptDatabase(_db: string, call = defaultCall): Promise<{
                accepted: boolean;
            }> {
                const data = encode(client).acceptDatabase(_db);
                return call<{
                    accepted: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).acceptDatabase();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, createOrganization(_initialApprovers: string[], call = defaultCall): Promise<{
                error: number;
                organization: string;
            }> {
                const data = encode(client).createOrganization(_initialApprovers);
                return call<{
                    error: number;
                    organization: string;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createOrganization();
                });
            }, createUserAccount(_id: Buffer, _owner: string, _ecosystem: string, call = defaultCall): Promise<{
                userAccount: string;
            }> {
                const data = encode(client).createUserAccount(_id, _owner, _ecosystem);
                return call<{
                    userAccount: string;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).createUserAccount();
                });
            }, departmentExists(_organization: string, _departmentId: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).departmentExists(_organization, _departmentId);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).departmentExists();
                });
            }, getApproverAtIndex(_organization: string, _pos: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getApproverAtIndex(_organization, _pos);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getApproverAtIndex();
                });
            }, getApproverData(_approver: string, call = defaultCall): Promise<{
                approverAddress: string;
            }> {
                const data = encode(client).getApproverData(_approver);
                return call<{
                    approverAddress: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getApproverData();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getDepartmentAtIndex(_organization: string, _index: number, call = defaultCall): Promise<{
                id: Buffer;
            }> {
                const data = encode(client).getDepartmentAtIndex(_organization, _index);
                return call<{
                    id: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDepartmentAtIndex();
                });
            }, getDepartmentData(_organization: string, _id: Buffer, call = defaultCall): Promise<{
                userCount: number;
            }> {
                const data = encode(client).getDepartmentData(_organization, _id);
                return call<{
                    userCount: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDepartmentData();
                });
            }, getDepartmentUserAtIndex(_organization: string, _depId: Buffer, _index: number, call = defaultCall): Promise<{
                departmentMember: string;
            }> {
                const data = encode(client).getDepartmentUserAtIndex(_organization, _depId, _index);
                return call<{
                    departmentMember: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDepartmentUserAtIndex();
                });
            }, getNumberOfApprovers(_organization: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfApprovers(_organization);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfApprovers();
                });
            }, getNumberOfDepartmentUsers(_organization: string, _depId: Buffer, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfDepartmentUsers(_organization, _depId);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfDepartmentUsers();
                });
            }, getNumberOfDepartments(_organization: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfDepartments(_organization);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfDepartments();
                });
            }, getNumberOfOrganizations(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfOrganizations();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfOrganizations();
                });
            }, getNumberOfUsers(_organization: string, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfUsers(_organization);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfUsers();
                });
            }, getOrganizationAtIndex(_pos: number, call = defaultCall): Promise<{
                organization: string;
            }> {
                const data = encode(client).getOrganizationAtIndex(_pos);
                return call<{
                    organization: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getOrganizationAtIndex();
                });
            }, getOrganizationData(_organization: string, call = defaultCall): Promise<{
                numApprovers: number;
            }> {
                const data = encode(client).getOrganizationData(_organization);
                return call<{
                    numApprovers: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getOrganizationData();
                });
            }, getUpgradeOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getUpgradeOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUpgradeOwner();
                });
            }, getUserAccountsSize(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getUserAccountsSize();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUserAccountsSize();
                });
            }, getUserAtIndex(_organization: string, _pos: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getUserAtIndex(_organization, _pos);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUserAtIndex();
                });
            }, getUserData(_user: string, call = defaultCall): Promise<{
                userAddress: string;
            }> {
                const data = encode(client).getUserData(_user);
                return call<{
                    userAddress: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUserData();
                });
            }, migrateFrom(call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).migrateFrom();
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).migrateFrom();
                });
            }, migrateTo(_successor: string, call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).migrateTo(_successor);
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).migrateTo();
                });
            }, organizationExists(_address: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).organizationExists(_address);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).organizationExists();
                });
            }, setArtifactsFinder(_artifactsFinder: string, call = defaultCall): Promise<void> {
                const data = encode(client).setArtifactsFinder(_artifactsFinder);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).setArtifactsFinder();
                });
            }, supportsInterface(_interfaceId: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).supportsInterface(_interfaceId);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).supportsInterface();
                });
            }, transferUpgradeOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferUpgradeOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferUpgradeOwnership();
                });
            }, upgrade(_successor: string, call = defaultCall): Promise<{
                success: boolean;
            }> {
                const data = encode(client).upgrade(_successor);
                return call<{
                    success: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).upgrade();
                });
            }, userAccountExists(_userAccount: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).userAccountExists(_userAccount);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).userAccountExists();
                });
            } } as const, listeners: { LogUpgradeOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogUpgradeOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        ERC165_ID_ArtifactsFinderEnabled: () => { return codec.encodeFunctionData("D556028D"); },
        ERC165_ID_ObjectFactory: () => { return codec.encodeFunctionData("54AF67B7"); },
        ERC165_ID_Upgradeable: () => { return codec.encodeFunctionData("B21C815F"); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        OBJECT_CLASS_ORGANIZATION: () => { return codec.encodeFunctionData("BF90B027"); },
        OBJECT_CLASS_USER_ACCOUNT: () => { return codec.encodeFunctionData("9B3EF402"); },
        acceptDatabase: (_db: string) => { return codec.encodeFunctionData("F4ACE0D0", _db); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        createOrganization: (_initialApprovers: string[]) => { return codec.encodeFunctionData("0EC8D39A", _initialApprovers); },
        createUserAccount: (_id: Buffer, _owner: string, _ecosystem: string) => { return codec.encodeFunctionData("C392DF6B", _id, _owner, _ecosystem); },
        departmentExists: (_organization: string, _departmentId: Buffer) => { return codec.encodeFunctionData("AB8EC038", _organization, _departmentId); },
        getApproverAtIndex: (_organization: string, _pos: number) => { return codec.encodeFunctionData("3DAF56B8", _organization, _pos); },
        getApproverData: (_approver: string) => { return codec.encodeFunctionData("EC89DA8B", _approver); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getDepartmentAtIndex: (_organization: string, _index: number) => { return codec.encodeFunctionData("EC9C6220", _organization, _index); },
        getDepartmentData: (_organization: string, _id: Buffer) => { return codec.encodeFunctionData("6CFB6C6B", _organization, _id); },
        getDepartmentUserAtIndex: (_organization: string, _depId: Buffer, _index: number) => { return codec.encodeFunctionData("87DE70A7", _organization, _depId, _index); },
        getNumberOfApprovers: (_organization: string) => { return codec.encodeFunctionData("CC5BAF17", _organization); },
        getNumberOfDepartmentUsers: (_organization: string, _depId: Buffer) => { return codec.encodeFunctionData("1065FFB9", _organization, _depId); },
        getNumberOfDepartments: (_organization: string) => { return codec.encodeFunctionData("AD76666D", _organization); },
        getNumberOfOrganizations: () => { return codec.encodeFunctionData("BD3A694E"); },
        getNumberOfUsers: (_organization: string) => { return codec.encodeFunctionData("851D585E", _organization); },
        getOrganizationAtIndex: (_pos: number) => { return codec.encodeFunctionData("031E8EAF", _pos); },
        getOrganizationData: (_organization: string) => { return codec.encodeFunctionData("69AD9617", _organization); },
        getUpgradeOwner: () => { return codec.encodeFunctionData("E7284879"); },
        getUserAccountsSize: () => { return codec.encodeFunctionData("17BD60EF"); },
        getUserAtIndex: (_organization: string, _pos: number) => { return codec.encodeFunctionData("FDBB918F", _organization, _pos); },
        getUserData: (_user: string) => { return codec.encodeFunctionData("F4EEEFE9", _user); },
        migrateFrom: () => { return codec.encodeFunctionData("35657E68"); },
        migrateTo: (_successor: string) => { return codec.encodeFunctionData("4DDAF8F2", _successor); },
        organizationExists: (_address: string) => { return codec.encodeFunctionData("E7ABD5EA", _address); },
        setArtifactsFinder: (_artifactsFinder: string) => { return codec.encodeFunctionData("2A8E9AB2", _artifactsFinder); },
        supportsInterface: (_interfaceId: Buffer) => { return codec.encodeFunctionData("01FFC9A7", _interfaceId); },
        transferUpgradeOwnership: (_newOwner: string) => { return codec.encodeFunctionData("AC83EC7C", _newOwner); },
        upgrade: (_successor: string) => { return codec.encodeFunctionData("0900F010", _successor); },
        userAccountExists: (_userAccount: string) => { return codec.encodeFunctionData("02F53264", _userAccount); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogUpgradeOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("D5B062C07F8A61FDA452024E9C9D7DB09548980E5F298D0F5CAB47C3C9C172B3", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        ERC165_ID_ArtifactsFinderEnabled: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("D556028D", data); },
        ERC165_ID_ObjectFactory: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("54AF67B7", data); },
        ERC165_ID_Upgradeable: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("B21C815F", data); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        OBJECT_CLASS_ORGANIZATION: (): [
            string
        ] => { return codec.decodeFunctionResult ("BF90B027", data); },
        OBJECT_CLASS_USER_ACCOUNT: (): [
            string
        ] => { return codec.decodeFunctionResult ("9B3EF402", data); },
        acceptDatabase: (): {
            accepted: boolean;
        } => {
            const [accepted] = codec.decodeFunctionResult ("F4ACE0D0", data);
            return { accepted: accepted };
        },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        createOrganization: (): {
            error: number;
            organization: string;
        } => {
            const [error, organization] = codec.decodeFunctionResult ("0EC8D39A", data);
            return { error: error, organization: organization };
        },
        createUserAccount: (): {
            userAccount: string;
        } => {
            const [userAccount] = codec.decodeFunctionResult ("C392DF6B", data);
            return { userAccount: userAccount };
        },
        departmentExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("AB8EC038", data); },
        getApproverAtIndex: (): [
            string
        ] => { return codec.decodeFunctionResult ("3DAF56B8", data); },
        getApproverData: (): {
            approverAddress: string;
        } => {
            const [approverAddress] = codec.decodeFunctionResult ("EC89DA8B", data);
            return { approverAddress: approverAddress };
        },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getDepartmentAtIndex: (): {
            id: Buffer;
        } => {
            const [id] = codec.decodeFunctionResult ("EC9C6220", data);
            return { id: id };
        },
        getDepartmentData: (): {
            userCount: number;
        } => {
            const [userCount] = codec.decodeFunctionResult ("6CFB6C6B", data);
            return { userCount: userCount };
        },
        getDepartmentUserAtIndex: (): {
            departmentMember: string;
        } => {
            const [departmentMember] = codec.decodeFunctionResult ("87DE70A7", data);
            return { departmentMember: departmentMember };
        },
        getNumberOfApprovers: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("CC5BAF17", data);
            return { size: size };
        },
        getNumberOfDepartmentUsers: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("1065FFB9", data);
            return { size: size };
        },
        getNumberOfDepartments: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("AD76666D", data);
            return { size: size };
        },
        getNumberOfOrganizations: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("BD3A694E", data);
            return { size: size };
        },
        getNumberOfUsers: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("851D585E", data);
            return { size: size };
        },
        getOrganizationAtIndex: (): {
            organization: string;
        } => {
            const [organization] = codec.decodeFunctionResult ("031E8EAF", data);
            return { organization: organization };
        },
        getOrganizationData: (): {
            numApprovers: number;
        } => {
            const [numApprovers] = codec.decodeFunctionResult ("69AD9617", data);
            return { numApprovers: numApprovers };
        },
        getUpgradeOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("E7284879", data); },
        getUserAccountsSize: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("17BD60EF", data);
            return { size: size };
        },
        getUserAtIndex: (): [
            string
        ] => { return codec.decodeFunctionResult ("FDBB918F", data); },
        getUserData: (): {
            userAddress: string;
        } => {
            const [userAddress] = codec.decodeFunctionResult ("F4EEEFE9", data);
            return { userAddress: userAddress };
        },
        migrateFrom: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("35657E68", data);
            return { success: success };
        },
        migrateTo: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("4DDAF8F2", data);
            return { success: success };
        },
        organizationExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("E7ABD5EA", data); },
        setArtifactsFinder: (): void => { return; },
        supportsInterface: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("01FFC9A7", data); },
        transferUpgradeOwnership: (): void => { return; },
        upgrade: (): {
            success: boolean;
        } => {
            const [success] = codec.decodeFunctionResult ("0900F010", data);
            return { success: success };
        },
        userAccountExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("02F53264", data); }
    }; };
}