//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module Organization {
    export const contactName = "Organization";
    export const abi = '[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"__DELETE__","type":"int256"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"departmentId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"userAddress","type":"address"}],"name":"LogDepartmentUserRemoval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"departmentId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"userAddress","type":"address"}],"name":"LogDepartmentUserUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"__DELETE__","type":"int256"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"address","name":"approverAddress","type":"address"}],"name":"LogOrganizationApproverRemoval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"address","name":"approverAddress","type":"address"}],"name":"LogOrganizationApproverUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"approverCount","type":"uint256"}],"name":"LogOrganizationCreation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"__DELETE__","type":"int256"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"departmentId","type":"bytes32"}],"name":"LogOrganizationDepartmentRemoval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"bytes32","name":"departmentId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"userCount","type":"uint256"}],"name":"LogOrganizationDepartmentUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"int256","name":"__DELETE__","type":"int256"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"address","name":"userAddress","type":"address"}],"name":"LogOrganizationUserRemoval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"eventId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"organizationAddress","type":"address"},{"indexed":false,"internalType":"address","name":"userAddress","type":"address"}],"name":"LogOrganizationUserUpdate","type":"event"},{"constant":true,"inputs":[],"name":"ERC165_ID_Organization","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ERC165_ID_VERSIONED_ARTIFACT","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_DEPARTMENT_USERS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ORGANIZATION_ACCOUNTS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ORGANIZATION_APPROVERS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ORGANIZATION_DEPARTMENTS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"EVENT_ID_ORGANIZATION_USERS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"}],"name":"addApprover","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"addDepartment","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"}],"name":"addUser","outputs":[{"internalType":"bool","name":"successful","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"},{"internalType":"bytes32","name":"_department","type":"bytes32"}],"name":"addUserToDepartment","outputs":[{"internalType":"bool","name":"successful","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"},{"internalType":"bytes32","name":"_department","type":"bytes32"}],"name":"authorizeUser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_other","type":"address"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint8[3]","name":"_version","type":"uint8[3]"}],"name":"compareArtifactVersion","outputs":[{"internalType":"int256","name":"result","type":"int256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"departmentExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_pos","type":"uint256"}],"name":"getApproverAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersion","outputs":[{"internalType":"uint8[3]","name":"","type":"uint8[3]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMajor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionMinor","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getArtifactVersionPatch","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getDepartmentAtIndex","outputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_id","type":"bytes32"}],"name":"getDepartmentData","outputs":[{"internalType":"uint256","name":"userCount","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_depId","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getDepartmentUserAtIndex","outputs":[{"internalType":"address","name":"userAccount","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfApprovers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"_depId","type":"bytes32"}],"name":"getNumberOfDepartmentUsers","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfDepartments","outputs":[{"internalType":"uint256","name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfUsers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOrganizationDetails","outputs":[{"internalType":"uint256","name":"numberOfApprovers","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_pos","type":"uint256"}],"name":"getUserAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address[]","name":"_initialApprovers","type":"address[]"}],"name":"initialize","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"}],"name":"removeApprover","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"_depId","type":"bytes32"}],"name":"removeDepartment","outputs":[{"internalType":"bool","name":"successful","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"}],"name":"removeUser","outputs":[{"internalType":"bool","name":"successful","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_userAccount","type":"address"},{"internalType":"bytes32","name":"_depId","type":"bytes32"}],"name":"removeUserFromDepartment","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]';
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogDepartmentUserRemoval: { signature: "08576BD45480F28CBA07C5DDF514141424B64CE76355D6847109DEF4CA48090B", tagged: (eventId: Buffer, __DELETE__: number, organizationAddress: string, departmentId: Buffer, userAddress: string) => ({ name: "LogDepartmentUserRemoval", payload: { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, departmentId: departmentId, userAddress: userAddress } as const } as const) } as const, LogDepartmentUserUpdate: { signature: "6BB888167384334FDAF5EE77AA1CEC98E9ADEDEEF5DA14D4C1B424D5637E0430", tagged: (eventId: Buffer, organizationAddress: string, departmentId: Buffer, userAddress: string) => ({ name: "LogDepartmentUserUpdate", payload: { eventId: eventId, organizationAddress: organizationAddress, departmentId: departmentId, userAddress: userAddress } as const } as const) } as const, LogOrganizationApproverRemoval: { signature: "2CF132CE6C54465A99F715280CE5C867D610D70C4AC532AD30994DE8F33DFA58", tagged: (eventId: Buffer, __DELETE__: number, organizationAddress: string, approverAddress: string) => ({ name: "LogOrganizationApproverRemoval", payload: { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, approverAddress: approverAddress } as const } as const) } as const, LogOrganizationApproverUpdate: { signature: "2376739F82C5284BDEDEA511CF336C01D8988260CD7A12A37F1AF592E9E695E2", tagged: (eventId: Buffer, organizationAddress: string, approverAddress: string) => ({ name: "LogOrganizationApproverUpdate", payload: { eventId: eventId, organizationAddress: organizationAddress, approverAddress: approverAddress } as const } as const) } as const, LogOrganizationCreation: { signature: "4CE3CE68068294254541BE9EA3AFED3606DD2F69EB2193879759452CB8EF56EE", tagged: (eventId: Buffer, organizationAddress: string, approverCount: number) => ({ name: "LogOrganizationCreation", payload: { eventId: eventId, organizationAddress: organizationAddress, approverCount: approverCount } as const } as const) } as const, LogOrganizationDepartmentRemoval: { signature: "E665BA9C1A1DB43EC50A686024B19D956FF6283B84B03450815011382610B872", tagged: (eventId: Buffer, __DELETE__: number, organizationAddress: string, departmentId: Buffer) => ({ name: "LogOrganizationDepartmentRemoval", payload: { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, departmentId: departmentId } as const } as const) } as const, LogOrganizationDepartmentUpdate: { signature: "4AA55961B303DA16FC3BFD04CB7DFD9CAB19A33C009B69C88F26AED05704AE1E", tagged: (eventId: Buffer, organizationAddress: string, departmentId: Buffer, userCount: number) => ({ name: "LogOrganizationDepartmentUpdate", payload: { eventId: eventId, organizationAddress: organizationAddress, departmentId: departmentId, userCount: userCount } as const } as const) } as const, LogOrganizationUserRemoval: { signature: "B217F8AE99B8B240FC28A5281349F7A1D4D460EE3DC7C6D2CA14A57508F704D3", tagged: (eventId: Buffer, __DELETE__: number, organizationAddress: string, userAddress: string) => ({ name: "LogOrganizationUserRemoval", payload: { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, userAddress: userAddress } as const } as const) } as const, LogOrganizationUserUpdate: { signature: "B6505E14CF9E15754AFD2220D62DAF87943177C016BD4C031C6EE578E0224226", tagged: (eventId: Buffer, organizationAddress: string, userAddress: string) => ({ name: "LogOrganizationUserUpdate", payload: { eventId: eventId, organizationAddress: organizationAddress, userAddress: userAddress } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { ERC165_ID_Organization(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_Organization();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_Organization();
                });
            }, ERC165_ID_VERSIONED_ARTIFACT(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).ERC165_ID_VERSIONED_ARTIFACT();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).ERC165_ID_VERSIONED_ARTIFACT();
                });
            }, EVENT_ID_DEPARTMENT_USERS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_DEPARTMENT_USERS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_DEPARTMENT_USERS();
                });
            }, EVENT_ID_ORGANIZATION_ACCOUNTS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ORGANIZATION_ACCOUNTS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ORGANIZATION_ACCOUNTS();
                });
            }, EVENT_ID_ORGANIZATION_APPROVERS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ORGANIZATION_APPROVERS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ORGANIZATION_APPROVERS();
                });
            }, EVENT_ID_ORGANIZATION_DEPARTMENTS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ORGANIZATION_DEPARTMENTS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ORGANIZATION_DEPARTMENTS();
                });
            }, EVENT_ID_ORGANIZATION_USERS(call = defaultCall): Promise<[
                Buffer
            ]> {
                const data = encode(client).EVENT_ID_ORGANIZATION_USERS();
                return call<[
                    Buffer
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).EVENT_ID_ORGANIZATION_USERS();
                });
            }, addApprover(_userAccount: string, call = defaultCall): Promise<void> {
                const data = encode(client).addApprover(_userAccount);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addApprover();
                });
            }, addDepartment(_id: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).addDepartment(_id);
                return call<[
                    boolean
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addDepartment();
                });
            }, addUser(_userAccount: string, call = defaultCall): Promise<{
                successful: boolean;
            }> {
                const data = encode(client).addUser(_userAccount);
                return call<{
                    successful: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addUser();
                });
            }, addUserToDepartment(_userAccount: string, _department: Buffer, call = defaultCall): Promise<{
                successful: boolean;
            }> {
                const data = encode(client).addUserToDepartment(_userAccount, _department);
                return call<{
                    successful: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addUserToDepartment();
                });
            }, authorizeUser(_userAccount: string, _department: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).authorizeUser(_userAccount, _department);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).authorizeUser();
                });
            }, compareArtifactVersion(_other: string, call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[0](_other);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[0]();
                });
            }, compareArtifactVersion_1(_version: [
                number,
                number,
                number
            ], call = defaultCall): Promise<{
                result: number;
            }> {
                const data = encode(client).compareArtifactVersion[1](_version);
                return call<{
                    result: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).compareArtifactVersion[1]();
                });
            }, departmentExists(_id: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).departmentExists(_id);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).departmentExists();
                });
            }, getApproverAtIndex(_pos: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getApproverAtIndex(_pos);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getApproverAtIndex();
                });
            }, getArtifactVersion(call = defaultCall): Promise<[
                [
                    number,
                    number,
                    number
                ]
            ]> {
                const data = encode(client).getArtifactVersion();
                return call<[
                    [
                        number,
                        number,
                        number
                    ]
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersion();
                });
            }, getArtifactVersionMajor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMajor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMajor();
                });
            }, getArtifactVersionMinor(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionMinor();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionMinor();
                });
            }, getArtifactVersionPatch(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getArtifactVersionPatch();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getArtifactVersionPatch();
                });
            }, getDepartmentAtIndex(_index: number, call = defaultCall): Promise<{
                id: Buffer;
            }> {
                const data = encode(client).getDepartmentAtIndex(_index);
                return call<{
                    id: Buffer;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDepartmentAtIndex();
                });
            }, getDepartmentData(_id: Buffer, call = defaultCall): Promise<{
                userCount: number;
            }> {
                const data = encode(client).getDepartmentData(_id);
                return call<{
                    userCount: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDepartmentData();
                });
            }, getDepartmentUserAtIndex(_depId: Buffer, _index: number, call = defaultCall): Promise<{
                userAccount: string;
            }> {
                const data = encode(client).getDepartmentUserAtIndex(_depId, _index);
                return call<{
                    userAccount: string;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getDepartmentUserAtIndex();
                });
            }, getNumberOfApprovers(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfApprovers();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfApprovers();
                });
            }, getNumberOfDepartmentUsers(_depId: Buffer, call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfDepartmentUsers(_depId);
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfDepartmentUsers();
                });
            }, getNumberOfDepartments(call = defaultCall): Promise<{
                size: number;
            }> {
                const data = encode(client).getNumberOfDepartments();
                return call<{
                    size: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfDepartments();
                });
            }, getNumberOfUsers(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfUsers();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfUsers();
                });
            }, getOrganizationDetails(call = defaultCall): Promise<{
                numberOfApprovers: number;
            }> {
                const data = encode(client).getOrganizationDetails();
                return call<{
                    numberOfApprovers: number;
                }>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getOrganizationDetails();
                });
            }, getUserAtIndex(_pos: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getUserAtIndex(_pos);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUserAtIndex();
                });
            }, initialize(_initialApprovers: string[], call = defaultCall): Promise<void> {
                const data = encode(client).initialize(_initialApprovers);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).initialize();
                });
            }, removeApprover(_userAccount: string, call = defaultCall): Promise<void> {
                const data = encode(client).removeApprover(_userAccount);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeApprover();
                });
            }, removeDepartment(_depId: Buffer, call = defaultCall): Promise<{
                successful: boolean;
            }> {
                const data = encode(client).removeDepartment(_depId);
                return call<{
                    successful: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeDepartment();
                });
            }, removeUser(_userAccount: string, call = defaultCall): Promise<{
                successful: boolean;
            }> {
                const data = encode(client).removeUser(_userAccount);
                return call<{
                    successful: boolean;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeUser();
                });
            }, removeUserFromDepartment(_userAccount: string, _depId: Buffer, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).removeUserFromDepartment(_userAccount, _depId);
                return call<[
                    boolean
                ]>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).removeUserFromDepartment();
                });
            } } as const, listeners: { LogDepartmentUserRemoval(callback: (err?: Error, event?: {
                eventId: Buffer;
                __DELETE__: number;
                organizationAddress: string;
                departmentId: Buffer;
                userAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["08576BD45480F28CBA07C5DDF514141424B64CE76355D6847109DEF4CA48090B"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDepartmentUserRemoval()); }, start, end); }, LogDepartmentUserUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                organizationAddress: string;
                departmentId: Buffer;
                userAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["6BB888167384334FDAF5EE77AA1CEC98E9ADEDEEF5DA14D4C1B424D5637E0430"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogDepartmentUserUpdate()); }, start, end); }, LogOrganizationApproverRemoval(callback: (err?: Error, event?: {
                eventId: Buffer;
                __DELETE__: number;
                organizationAddress: string;
                approverAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["2CF132CE6C54465A99F715280CE5C867D610D70C4AC532AD30994DE8F33DFA58"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogOrganizationApproverRemoval()); }, start, end); }, LogOrganizationApproverUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                organizationAddress: string;
                approverAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["2376739F82C5284BDEDEA511CF336C01D8988260CD7A12A37F1AF592E9E695E2"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogOrganizationApproverUpdate()); }, start, end); }, LogOrganizationCreation(callback: (err?: Error, event?: {
                eventId: Buffer;
                organizationAddress: string;
                approverCount: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["4CE3CE68068294254541BE9EA3AFED3606DD2F69EB2193879759452CB8EF56EE"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogOrganizationCreation()); }, start, end); }, LogOrganizationDepartmentRemoval(callback: (err?: Error, event?: {
                eventId: Buffer;
                __DELETE__: number;
                organizationAddress: string;
                departmentId: Buffer;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["E665BA9C1A1DB43EC50A686024B19D956FF6283B84B03450815011382610B872"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogOrganizationDepartmentRemoval()); }, start, end); }, LogOrganizationDepartmentUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                organizationAddress: string;
                departmentId: Buffer;
                userCount: number;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["4AA55961B303DA16FC3BFD04CB7DFD9CAB19A33C009B69C88F26AED05704AE1E"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogOrganizationDepartmentUpdate()); }, start, end); }, LogOrganizationUserRemoval(callback: (err?: Error, event?: {
                eventId: Buffer;
                __DELETE__: number;
                organizationAddress: string;
                userAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["B217F8AE99B8B240FC28A5281349F7A1D4D460EE3DC7C6D2CA14A57508F704D3"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogOrganizationUserRemoval()); }, start, end); }, LogOrganizationUserUpdate(callback: (err?: Error, event?: {
                eventId: Buffer;
                organizationAddress: string;
                userAddress: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["B6505E14CF9E15754AFD2220D62DAF87943177C016BD4C031C6EE578E0224226"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogOrganizationUserUpdate()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        ERC165_ID_Organization: () => { return codec.encodeFunctionData("3657DB17"); },
        ERC165_ID_VERSIONED_ARTIFACT: () => { return codec.encodeFunctionData("E10533C6"); },
        EVENT_ID_DEPARTMENT_USERS: () => { return codec.encodeFunctionData("4374FCF8"); },
        EVENT_ID_ORGANIZATION_ACCOUNTS: () => { return codec.encodeFunctionData("6E40C2ED"); },
        EVENT_ID_ORGANIZATION_APPROVERS: () => { return codec.encodeFunctionData("669E9E23"); },
        EVENT_ID_ORGANIZATION_DEPARTMENTS: () => { return codec.encodeFunctionData("3E21A8D9"); },
        EVENT_ID_ORGANIZATION_USERS: () => { return codec.encodeFunctionData("94D42FC2"); },
        addApprover: (_userAccount: string) => { return codec.encodeFunctionData("B646C194", _userAccount); },
        addDepartment: (_id: Buffer) => { return codec.encodeFunctionData("B2E30DDF", _id); },
        addUser: (_userAccount: string) => { return codec.encodeFunctionData("421B2D8B", _userAccount); },
        addUserToDepartment: (_userAccount: string, _department: Buffer) => { return codec.encodeFunctionData("B68B5F6C", _userAccount, _department); },
        authorizeUser: (_userAccount: string, _department: Buffer) => { return codec.encodeFunctionData("DDC5DD51", _userAccount, _department); },
        compareArtifactVersion: [(_other: string) => { return codec.encodeFunctionData("5C030138", _other); }, (_version: [
                number,
                number,
                number
            ]) => { return codec.encodeFunctionData("78BC0B0D", _version); }] as const,
        departmentExists: (_id: Buffer) => { return codec.encodeFunctionData("20FEABBA", _id); },
        getApproverAtIndex: (_pos: number) => { return codec.encodeFunctionData("EA415CFD", _pos); },
        getArtifactVersion: () => { return codec.encodeFunctionData("756B2E6C"); },
        getArtifactVersionMajor: () => { return codec.encodeFunctionData("57E0EBCA"); },
        getArtifactVersionMinor: () => { return codec.encodeFunctionData("7589ADB7"); },
        getArtifactVersionPatch: () => { return codec.encodeFunctionData("F085F6DD"); },
        getDepartmentAtIndex: (_index: number) => { return codec.encodeFunctionData("AAA8282B", _index); },
        getDepartmentData: (_id: Buffer) => { return codec.encodeFunctionData("F06E141E", _id); },
        getDepartmentUserAtIndex: (_depId: Buffer, _index: number) => { return codec.encodeFunctionData("81B05199", _depId, _index); },
        getNumberOfApprovers: () => { return codec.encodeFunctionData("35E07244"); },
        getNumberOfDepartmentUsers: (_depId: Buffer) => { return codec.encodeFunctionData("6371E7B4", _depId); },
        getNumberOfDepartments: () => { return codec.encodeFunctionData("E94E9888"); },
        getNumberOfUsers: () => { return codec.encodeFunctionData("4D009288"); },
        getOrganizationDetails: () => { return codec.encodeFunctionData("89C9E2EF"); },
        getUserAtIndex: (_pos: number) => { return codec.encodeFunctionData("FFCC7BBF", _pos); },
        initialize: (_initialApprovers: string[]) => { return codec.encodeFunctionData("A224CEE7", _initialApprovers); },
        removeApprover: (_userAccount: string) => { return codec.encodeFunctionData("6CF4C88F", _userAccount); },
        removeDepartment: (_depId: Buffer) => { return codec.encodeFunctionData("FBE620A7", _depId); },
        removeUser: (_userAccount: string) => { return codec.encodeFunctionData("98575188", _userAccount); },
        removeUserFromDepartment: (_userAccount: string, _depId: Buffer) => { return codec.encodeFunctionData("7E047585", _userAccount, _depId); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogDepartmentUserRemoval: (): {
            eventId: Buffer;
            __DELETE__: number;
            organizationAddress: string;
            departmentId: Buffer;
            userAddress: string;
        } => {
            const [eventId, __DELETE__, organizationAddress, departmentId, userAddress] = codec.decodeEventLog ("08576BD45480F28CBA07C5DDF514141424B64CE76355D6847109DEF4CA48090B", data, topics);
            return { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, departmentId: departmentId, userAddress: userAddress };
        },
        LogDepartmentUserUpdate: (): {
            eventId: Buffer;
            organizationAddress: string;
            departmentId: Buffer;
            userAddress: string;
        } => {
            const [eventId, organizationAddress, departmentId, userAddress] = codec.decodeEventLog ("6BB888167384334FDAF5EE77AA1CEC98E9ADEDEEF5DA14D4C1B424D5637E0430", data, topics);
            return { eventId: eventId, organizationAddress: organizationAddress, departmentId: departmentId, userAddress: userAddress };
        },
        LogOrganizationApproverRemoval: (): {
            eventId: Buffer;
            __DELETE__: number;
            organizationAddress: string;
            approverAddress: string;
        } => {
            const [eventId, __DELETE__, organizationAddress, approverAddress] = codec.decodeEventLog ("2CF132CE6C54465A99F715280CE5C867D610D70C4AC532AD30994DE8F33DFA58", data, topics);
            return { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, approverAddress: approverAddress };
        },
        LogOrganizationApproverUpdate: (): {
            eventId: Buffer;
            organizationAddress: string;
            approverAddress: string;
        } => {
            const [eventId, organizationAddress, approverAddress] = codec.decodeEventLog ("2376739F82C5284BDEDEA511CF336C01D8988260CD7A12A37F1AF592E9E695E2", data, topics);
            return { eventId: eventId, organizationAddress: organizationAddress, approverAddress: approverAddress };
        },
        LogOrganizationCreation: (): {
            eventId: Buffer;
            organizationAddress: string;
            approverCount: number;
        } => {
            const [eventId, organizationAddress, approverCount] = codec.decodeEventLog ("4CE3CE68068294254541BE9EA3AFED3606DD2F69EB2193879759452CB8EF56EE", data, topics);
            return { eventId: eventId, organizationAddress: organizationAddress, approverCount: approverCount };
        },
        LogOrganizationDepartmentRemoval: (): {
            eventId: Buffer;
            __DELETE__: number;
            organizationAddress: string;
            departmentId: Buffer;
        } => {
            const [eventId, __DELETE__, organizationAddress, departmentId] = codec.decodeEventLog ("E665BA9C1A1DB43EC50A686024B19D956FF6283B84B03450815011382610B872", data, topics);
            return { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, departmentId: departmentId };
        },
        LogOrganizationDepartmentUpdate: (): {
            eventId: Buffer;
            organizationAddress: string;
            departmentId: Buffer;
            userCount: number;
        } => {
            const [eventId, organizationAddress, departmentId, userCount] = codec.decodeEventLog ("4AA55961B303DA16FC3BFD04CB7DFD9CAB19A33C009B69C88F26AED05704AE1E", data, topics);
            return { eventId: eventId, organizationAddress: organizationAddress, departmentId: departmentId, userCount: userCount };
        },
        LogOrganizationUserRemoval: (): {
            eventId: Buffer;
            __DELETE__: number;
            organizationAddress: string;
            userAddress: string;
        } => {
            const [eventId, __DELETE__, organizationAddress, userAddress] = codec.decodeEventLog ("B217F8AE99B8B240FC28A5281349F7A1D4D460EE3DC7C6D2CA14A57508F704D3", data, topics);
            return { eventId: eventId, __DELETE__: __DELETE__, organizationAddress: organizationAddress, userAddress: userAddress };
        },
        LogOrganizationUserUpdate: (): {
            eventId: Buffer;
            organizationAddress: string;
            userAddress: string;
        } => {
            const [eventId, organizationAddress, userAddress] = codec.decodeEventLog ("B6505E14CF9E15754AFD2220D62DAF87943177C016BD4C031C6EE578E0224226", data, topics);
            return { eventId: eventId, organizationAddress: organizationAddress, userAddress: userAddress };
        },
        ERC165_ID_Organization: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("3657DB17", data); },
        ERC165_ID_VERSIONED_ARTIFACT: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("E10533C6", data); },
        EVENT_ID_DEPARTMENT_USERS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("4374FCF8", data); },
        EVENT_ID_ORGANIZATION_ACCOUNTS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("6E40C2ED", data); },
        EVENT_ID_ORGANIZATION_APPROVERS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("669E9E23", data); },
        EVENT_ID_ORGANIZATION_DEPARTMENTS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("3E21A8D9", data); },
        EVENT_ID_ORGANIZATION_USERS: (): [
            Buffer
        ] => { return codec.decodeFunctionResult ("94D42FC2", data); },
        addApprover: (): void => { return; },
        addDepartment: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("B2E30DDF", data); },
        addUser: (): {
            successful: boolean;
        } => {
            const [successful] = codec.decodeFunctionResult ("421B2D8B", data);
            return { successful: successful };
        },
        addUserToDepartment: (): {
            successful: boolean;
        } => {
            const [successful] = codec.decodeFunctionResult ("B68B5F6C", data);
            return { successful: successful };
        },
        authorizeUser: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("DDC5DD51", data); },
        compareArtifactVersion: [(): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("5C030138", data);
                return { result: result };
            }, (): {
                result: number;
            } => {
                const [result] = codec.decodeFunctionResult ("78BC0B0D", data);
                return { result: result };
            }] as const,
        departmentExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("20FEABBA", data); },
        getApproverAtIndex: (): [
            string
        ] => { return codec.decodeFunctionResult ("EA415CFD", data); },
        getArtifactVersion: (): [
            [
                number,
                number,
                number
            ]
        ] => { return codec.decodeFunctionResult ("756B2E6C", data); },
        getArtifactVersionMajor: (): [
            number
        ] => { return codec.decodeFunctionResult ("57E0EBCA", data); },
        getArtifactVersionMinor: (): [
            number
        ] => { return codec.decodeFunctionResult ("7589ADB7", data); },
        getArtifactVersionPatch: (): [
            number
        ] => { return codec.decodeFunctionResult ("F085F6DD", data); },
        getDepartmentAtIndex: (): {
            id: Buffer;
        } => {
            const [id] = codec.decodeFunctionResult ("AAA8282B", data);
            return { id: id };
        },
        getDepartmentData: (): {
            userCount: number;
        } => {
            const [userCount] = codec.decodeFunctionResult ("F06E141E", data);
            return { userCount: userCount };
        },
        getDepartmentUserAtIndex: (): {
            userAccount: string;
        } => {
            const [userAccount] = codec.decodeFunctionResult ("81B05199", data);
            return { userAccount: userAccount };
        },
        getNumberOfApprovers: (): [
            number
        ] => { return codec.decodeFunctionResult ("35E07244", data); },
        getNumberOfDepartmentUsers: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("6371E7B4", data);
            return { size: size };
        },
        getNumberOfDepartments: (): {
            size: number;
        } => {
            const [size] = codec.decodeFunctionResult ("E94E9888", data);
            return { size: size };
        },
        getNumberOfUsers: (): [
            number
        ] => { return codec.decodeFunctionResult ("4D009288", data); },
        getOrganizationDetails: (): {
            numberOfApprovers: number;
        } => {
            const [numberOfApprovers] = codec.decodeFunctionResult ("89C9E2EF", data);
            return { numberOfApprovers: numberOfApprovers };
        },
        getUserAtIndex: (): [
            string
        ] => { return codec.decodeFunctionResult ("FFCC7BBF", data); },
        initialize: (): void => { return; },
        removeApprover: (): void => { return; },
        removeDepartment: (): {
            successful: boolean;
        } => {
            const [successful] = codec.decodeFunctionResult ("FBE620A7", data);
            return { successful: successful };
        },
        removeUser: (): {
            successful: boolean;
        } => {
            const [successful] = codec.decodeFunctionResult ("98575188", data);
            return { successful: successful };
        },
        removeUserFromDepartment: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("7E047585", data); }
    }; };
}