//Code generated by solts. DO NOT EDIT.
import { Readable } from "stream";
import { Address, CallTx, ContractCodec, Signal, Event, EventStream, listenerFor, Result } from "@hyperledger/burrow";
interface Provider {
    deploy(msg: CallTx): Promise<Address>;
    call(msg: CallTx): Promise<Uint8Array | undefined>;
    callSim(msg: CallTx): Promise<Uint8Array | undefined>;
    listen(signatures: string[], address: string, callback: (err?: Error, event?: Event) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream;
    payload(data: string | Uint8Array, address?: string): CallTx;
    contractCodec(contractABI: string): ContractCodec;
}
export type Caller = typeof defaultCall;
export async function defaultCall<Output>(client: Provider, addr: string, data: Uint8Array, isSim: boolean, callback: (returnData: Uint8Array | undefined) => Output): Promise<Output> {
    const payload = client.payload(data, addr);
    const returnData = await (isSim ? client.callSim(payload) : client.call(payload));
    return callback(returnData);
}
function linker(bytecode: string, name: string, address: string): string {
    address = address + Array(40 - address.length + 1).join("0");
    const truncated = name.slice(0, 36);
    const label = "__" + truncated + Array(37 - truncated.length).join("_") + "__";
    while (bytecode.indexOf(label) >= 0)
        bytecode = bytecode.replace(label, address);
    return bytecode;
}
export module ParticipantsManagerDb {
    export const contactName = "ParticipantsManagerDb";
    export const abi = '[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":false,"internalType":"address","name":"newOwner","type":"address"}],"name":"LogSystemOwnerChanged","type":"event"},{"constant":false,"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"addOrganization","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"addUserAccount","outputs":[{"internalType":"uint256","name":"error","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfOrganizations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfUserAccounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getOrganizationAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSystemOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getUserAccount","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getUserAccountAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"organizationExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferSystemOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"userAccountExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}]';
    export const bytecode = '608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111cf806100606000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637f692a2a116100715780637f692a2a14610282578063bd3a694e146102cc578063d462a018146102ea578063d68287df14610308578063e7abd5ea14610360578063fb47e016146103bc576100a9565b806302f53264146100ae578063031e8eaf1461010a5780630a452ad61461017857806333793731146101bc57806364a6a2871461022a575b600080fd5b6100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610418565b604051808215151515815260200191505060405180910390f35b6101366004803603602081101561012057600080fd5b81019080803590602001909291905050506104e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ba6004803603602081101561018e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061058f565b005b6101e8600480360360208110156101d257600080fd5b810190808035906020019092919050505061098c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61026c6004803603602081101561024057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a39565b6040518082815260200191505060405180910390f35b61028a610c77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102d4610ca0565b6040518082815260200191505060405180910390f35b6102f2610cb0565b6040518082815260200191505060405180910390f35b61034a6004803603602081101561031e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cbf565b6040518082815260200191505060405180910390f35b6103a26004803603602081101561037657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610efd565b604051808215151515815260200191505060405180910390f35b6103fe600480360360208110156103d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc7565b604051808215151515815260200191505060405180910390f35b6000600173__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156104a057600080fd5b505af41580156104b4573d6000803e3d6000fd5b505050506040513d60208110156104ca57600080fd5b81019080805190602001909291905050509050919050565b600080600373__$5e3d4bda46c81e962f48c99e99f980d175$__6380ed56bd9091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561053e57600080fd5b505af4158015610552573d6000803e3d6000fd5b505050506040513d604081101561056857600080fd5b81019080805190602001909291908051906020019092919050505091505080915050919050565b73__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610602611091565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610663578082015181840152602081019050610648565b50505050905090810190601f1680156106905780820380516001836020036101000a031916815260200191505b508481038352602181526020018061117a602191396040018481038252602681526020018061112f602691396040019550505050505060006040518083038186803b1580156106de57600080fd5b505af41580156106f2573d6000803e3d6000fd5b5050505073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146107486110ce565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b838110156107a957808201518184015260208101905061078e565b50505050905090810190601f1680156107d65780820380516001836020036101000a031916815260200191505b508481038352602381526020018061110c6023913960400184810382526025815260200180611155602591396040019550505050505060006040518083038186803b15801561082457600080fd5b505af4158015610838573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610989577f0814a6975d95b7ef86d699e601b879308be10e8f2c4c77a940021f3d61b09eaf6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600173__$5e3d4bda46c81e962f48c99e99f980d175$__6380ed56bd9091856040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b1580156109e857600080fd5b505af41580156109fc573d6000803e3d6000fd5b505050506040513d6040811015610a1257600080fd5b81019080805190602001909291908051906020019092919050505091505080915050919050565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610aae611091565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610b0f578082015181840152602081019050610af4565b50505050905090810190601f168015610b3c5780820380516001836020036101000a031916815260200191505b508481038352602181526020018061117a602191396040018481038252602681526020018061112f602691396040019550505050505060006040518083038186803b158015610b8a57600080fd5b505af4158015610b9e573d6000803e3d6000fd5b50505050600173__$5e3d4bda46c81e962f48c99e99f980d175$__633d4f1a2a90918460016040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060206040518083038186803b158015610c3557600080fd5b505af4158015610c49573d6000803e3d6000fd5b505050506040513d6020811015610c5f57600080fd5b81019080805190602001909291905050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360010180549050905090565b60006001800180549050905090565b600073__$ecfb6c4d3c3ceff197e19e585a0a53728c$__6375d7bdef6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d34611091565b6040518363ffffffff1660e01b81526004018083151515158152602001806020018060200180602001848103845285818151815260200191508051906020019080838360005b83811015610d95578082015181840152602081019050610d7a565b50505050905090810190601f168015610dc25780820380516001836020036101000a031916815260200191505b508481038352602181526020018061117a602191396040018481038252602681526020018061112f602691396040019550505050505060006040518083038186803b158015610e1057600080fd5b505af4158015610e24573d6000803e3d6000fd5b50505050600373__$5e3d4bda46c81e962f48c99e99f980d175$__633d4f1a2a90918460016040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182151515158152602001935050505060206040518083038186803b158015610ebb57600080fd5b505af4158015610ecf573d6000803e3d6000fd5b505050506040513d6020811015610ee557600080fd5b81019080805190602001909291905050509050919050565b6000600373__$5e3d4bda46c81e962f48c99e99f980d175$__63f755018d9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610f8557600080fd5b505af4158015610f99573d6000803e3d6000fd5b505050506040513d6020811015610faf57600080fd5b81019080805190602001909291905050509050919050565b6000600173__$5e3d4bda46c81e962f48c99e99f980d175$__6356775fda9091846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561104f57600080fd5b505af4158015611063573d6000803e3d6000fd5b505050506040513d602081101561107957600080fd5b81019080805190602001909291905050509050919050565b60606040518060400160405280600681526020017f4552523430330000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600681526020017f455252363131000000000000000000000000000000000000000000000000000081525090509056fe53797374656d4f776e65642e7472616e7366657253797374656d4f776e657273686970546865206d73672e73656e646572206973206e6f74207468652073797374656d206f776e6572546865206e65772073797374656d206f776e6572206d757374206e6f74206265204e554c4c53797374656d4f776e65642e7072655f6f6e6c79427953797374656d4f776e6572a265627a7a723158206aa15e9349911ffd831723119163d87ad72bd29e5085d4d1098177ff2457c2f764736f6c63430005110032';
    export function deploy(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string): Promise<string> {
        const codec = client.contractCodec(abi);
        let linkedBytecode = bytecode;
        linkedBytecode = linker(linkedBytecode, "$ecfb6c4d3c3ceff197e19e585a0a53728c$", commons_base_ErrorsLib_sol_ErrorsLib);
        linkedBytecode = linker(linkedBytecode, "$5e3d4bda46c81e962f48c99e99f980d175$", commons_collections_MappingsLib_sol_MappingsLib);
        const data = Buffer.concat([Buffer.from(linkedBytecode, "hex"), codec.encodeDeploy()]);
        const payload = client.payload(data);
        return client.deploy(payload);
    }
    export async function deployContract(client: Provider, commons_base_ErrorsLib_sol_ErrorsLib: string, commons_collections_MappingsLib_sol_MappingsLib: string): Promise<Contract> { const address = await deploy(client, commons_base_ErrorsLib_sol_ErrorsLib, commons_collections_MappingsLib_sol_MappingsLib); return contract(client, address); }
    type EventRegistry = typeof events;
    export type EventName = keyof EventRegistry;
    export type TaggedPayload<T extends EventName> = ReturnType<EventRegistry[T]["tagged"]> & {
        event: Event;
    };
    export type SolidityEvent<T extends EventName> = TaggedPayload<T>["payload"];
    export type TypedListener<T extends EventName> = (callback: (err?: Error, event?: TaggedPayload<T>) => void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number) => EventStream;
    const events = { LogSystemOwnerChanged: { signature: "0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", tagged: (previousOwner: string, newOwner: string) => ({ name: "LogSystemOwnerChanged", payload: { previousOwner: previousOwner, newOwner: newOwner } as const } as const) } as const } as const;
    export type Contract = ReturnType<typeof contract>;
    export const contract = (client: Provider, address: string) => ({ address, functions: { addOrganization(_address: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addOrganization(_address);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addOrganization();
                });
            }, addUserAccount(_account: string, call = defaultCall): Promise<{
                error: number;
            }> {
                const data = encode(client).addUserAccount(_account);
                return call<{
                    error: number;
                }>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).addUserAccount();
                });
            }, getNumberOfOrganizations(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfOrganizations();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfOrganizations();
                });
            }, getNumberOfUserAccounts(call = defaultCall): Promise<[
                number
            ]> {
                const data = encode(client).getNumberOfUserAccounts();
                return call<[
                    number
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getNumberOfUserAccounts();
                });
            }, getOrganizationAtIndex(_index: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getOrganizationAtIndex(_index);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getOrganizationAtIndex();
                });
            }, getSystemOwner(call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getSystemOwner();
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getSystemOwner();
                });
            }, getUserAccount(_account: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).getUserAccount(_account);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUserAccount();
                });
            }, getUserAccountAtIndex(_index: number, call = defaultCall): Promise<[
                string
            ]> {
                const data = encode(client).getUserAccountAtIndex(_index);
                return call<[
                    string
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).getUserAccountAtIndex();
                });
            }, organizationExists(_address: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).organizationExists(_address);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).organizationExists();
                });
            }, transferSystemOwnership(_newOwner: string, call = defaultCall): Promise<void> {
                const data = encode(client).transferSystemOwnership(_newOwner);
                return call<void>(client, address, data, false, (data: Uint8Array | undefined) => {
                    return decode(client, data).transferSystemOwnership();
                });
            }, userAccountExists(_account: string, call = defaultCall): Promise<[
                boolean
            ]> {
                const data = encode(client).userAccountExists(_account);
                return call<[
                    boolean
                ]>(client, address, data, true, (data: Uint8Array | undefined) => {
                    return decode(client, data).userAccountExists();
                });
            } } as const, listeners: { LogSystemOwnerChanged(callback: (err?: Error, event?: {
                previousOwner: string;
                newOwner: string;
            }) => Signal | void, start?: "first" | "latest" | "stream" | number, end?: "first" | "latest" | "stream" | number): EventStream { return client.listen(["0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF"], address, (err?: Error, event?: Event) => { if (err)
                return callback(err); return callback(undefined, decode(client, event?.getLog()?.getData_asU8(), event?.getLog()?.getTopicsList_asU8()).LogSystemOwnerChanged()); }, start, end); } } as const, listenerFor: <T extends EventName>(eventNames: T[]): TypedListener<T> => listenerFor(client, address, events, decode, eventNames) as unknown as TypedListener<T>, listener: listenerFor(client, address, events, decode, Object.keys(events) as EventName[]) as TypedListener<EventName> } as const);
    export const encode = (client: Provider) => { const codec = client.contractCodec(abi); return {
        addOrganization: (_address: string) => { return codec.encodeFunctionData("D68287DF", _address); },
        addUserAccount: (_account: string) => { return codec.encodeFunctionData("64A6A287", _account); },
        getNumberOfOrganizations: () => { return codec.encodeFunctionData("BD3A694E"); },
        getNumberOfUserAccounts: () => { return codec.encodeFunctionData("D462A018"); },
        getOrganizationAtIndex: (_index: number) => { return codec.encodeFunctionData("031E8EAF", _index); },
        getSystemOwner: () => { return codec.encodeFunctionData("7F692A2A"); },
        getUserAccount: (_account: string) => { return codec.encodeFunctionData("FB47E016", _account); },
        getUserAccountAtIndex: (_index: number) => { return codec.encodeFunctionData("33793731", _index); },
        organizationExists: (_address: string) => { return codec.encodeFunctionData("E7ABD5EA", _address); },
        transferSystemOwnership: (_newOwner: string) => { return codec.encodeFunctionData("0A452AD6", _newOwner); },
        userAccountExists: (_account: string) => { return codec.encodeFunctionData("02F53264", _account); }
    }; };
    export const decode = (client: Provider, data: Uint8Array | undefined, topics: Uint8Array[] = []) => { const codec = client.contractCodec(abi); return {
        LogSystemOwnerChanged: (): {
            previousOwner: string;
            newOwner: string;
        } => {
            const [previousOwner, newOwner] = codec.decodeEventLog ("0814A6975D95B7EF86D699E601B879308BE10E8F2C4C77A940021F3D61B09EAF", data, topics);
            return { previousOwner: previousOwner, newOwner: newOwner };
        },
        addOrganization: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("D68287DF", data);
            return { error: error };
        },
        addUserAccount: (): {
            error: number;
        } => {
            const [error] = codec.decodeFunctionResult ("64A6A287", data);
            return { error: error };
        },
        getNumberOfOrganizations: (): [
            number
        ] => { return codec.decodeFunctionResult ("BD3A694E", data); },
        getNumberOfUserAccounts: (): [
            number
        ] => { return codec.decodeFunctionResult ("D462A018", data); },
        getOrganizationAtIndex: (): [
            string
        ] => { return codec.decodeFunctionResult ("031E8EAF", data); },
        getSystemOwner: (): [
            string
        ] => { return codec.decodeFunctionResult ("7F692A2A", data); },
        getUserAccount: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("FB47E016", data); },
        getUserAccountAtIndex: (): [
            string
        ] => { return codec.decodeFunctionResult ("33793731", data); },
        organizationExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("E7ABD5EA", data); },
        transferSystemOwnership: (): void => { return; },
        userAccountExists: (): [
            boolean
        ] => { return codec.decodeFunctionResult ("02F53264", data); }
    }; };
}